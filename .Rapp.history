0.5/5
1/5
1.5/5
2/5
2.5/5
3/5
3.5/5
4/5
4.5/5
5/5
25/30
29/30
28/30
27/30
7.5 + 3.75
11.25 + 2.75
14/20
( + 4.75)
9 + 4.75
13.75 + 4.5
4 + 3 + 4.5 + 3
14.5/20
4.5 + 3.5 + 2.75 + 3 + 3.5
4.5 + 3.5 + 2.75 + 3.5
4.25 + 3.75+4.25+3.75
4+3.5+3+2.5
4.5+4.25+4.25+4
3.75+3.75+3.5+2.5
3.75+4.5+3.5+3.75
3+3.5+4+3
5+5+4.5+4
2.75+3.5+2.5+2.5
4+5+5+4.5
4.25+4.25+3.25+3
5+4.25+3.75+3
4.5+4+3+2.5
4.25+4.5+3.75+3
3.25+3+3+1
4+3+3.5+3
4.25+3+3+3.25
5+4.25+4+4.5
4+4.5+4.5+4
library(foreign)#
library(MASS)#
library(UsingR)#
library(nlme)#
library(Zelig)#
library(lmtest)#
library(sandwich)#
library(car)#
library(directlabels)#
library(bbmle)#
library(maxLik)#
library(ggplot2)#
library(RGraphics)#
library(lattice)#
library(latticeExtra)#
library(VGAM)#
library(mvtnorm)#
library(ordinal)#
library(nnet)#
library(sampleSelection)#
library(pscl)#
library(lmtest)#
library(aod)#
library(scales)#
library(gridExtra)#
library(reshape2)#
library(network)#
library(Matrix)#
library(igraph)#
library(gmodels)#
library(pastecs)#
#library(dplyr)#
library(arm)#
library(coefplot)#
library(psych)#
library(descr)#
library(data.table)#
library(multiwayvcov)#
library(compositions)#
library(rms)#
library(effects)#
#
library(readstata13)#
#
stateleg <- read.dta13("/Users/carlosalgara/Desktop/carlos_school/PhD_UC Davis/Research/Data/American Politics/Shor_State_Leg_Data/shor mccarty 1993-2014 state individual legislator scores public June 2015.dta",convert.factors = TRUE, convert.underscore = FALSE)#
#
wa <- subset(stateleg, stateleg$st == "WA" & stateleg$party != "I")#
#
wa$color <- ifelse(wa$party == "D", "dodgerblue1", ifelse(wa$party == "R", "red1", NA))#
#
myColors <- c("blue","red")#
names(myColors) <- levels(wa$party_code)#
colScale <- scale_colour_manual("",values = myColors, guide = FALSE)#
#
plot <- ggplot(wa, aes(x=party, y=np_score, group=party, label = party, colour = party)) + geom_boxplot() + theme_bw() + theme(panel.grid.minor = element_blank()) + theme(legend.position=c(0.10, 0.875), legend.box.just = "left", legend.key.size = unit(1,"line"), legend.key = element_rect(size = 0, color = 'white'), legend.text.align = 0, legend.box = "horizontal") + scale_y_continuous("NPAT Common Space Scores (Liberal-Conservative)") + scale_x_discrete(labels=c("Democratic","Republican"), "Legislative Caucus") + geom_text(size = 1.85, alpha = 1, position = "jitter") + colScale + ggtitle("Partisan Ideological Distribution of the Washington State Legislature, 1993-2014")#
grid.newpage()#
footnote <- "Data: McCarty & Shor (2015) Measuring American Legislatures Project. Scores estimated using chamber-specific rollcalls."#
footnote2 <- "Carlos Algara: @algaraca"#
g <- arrangeGrob(plot,  right = textGrob(footnote2, x = 0, hjust = 0.5, vjust= 1, rot = 90, gp = gpar(fontface = "italic", fontsize = 12, col = "blue")), bottom = textGrob(footnote, x = 0.015, y = 1, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 9, col = "black"))) #
grid.draw(g)
plot <- ggplot(wa, aes(x=party, y=np_score, group=party, label = party, colour = party)) + geom_boxplot() + theme_bw() + theme(panel.grid.minor = element_blank()) + theme(legend.position=c(0.10, 0.875), legend.box.just = "left", legend.key.size = unit(1,"line"), legend.key = element_rect(size = 0, color = 'white'), legend.text.align = 0, legend.box = "horizontal") + scale_y_continuous("NPAT Common Space Scores (Liberal-Conservative)") + scale_x_discrete(labels=c("Democratic","Republican"), "") + geom_text(size = 1.85, alpha = 1, position = "jitter") + colScale + ggtitle("Partisan Ideological Distribution of the Washington State Legislature, 1993-2014")#
grid.newpage()#
footnote <- "Data: McCarty & Shor (2015) Measuring American Legislatures Project. Scores estimated using chamber-specific rollcalls."#
footnote2 <- "Carlos Algara: @algaraca"#
g <- arrangeGrob(plot,  right = textGrob(footnote2, x = 0, hjust = 0.5, vjust= 1, rot = 90, gp = gpar(fontface = "italic", fontsize = 12, col = "blue")), bottom = textGrob(footnote, x = 0.015, y = 1, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 9, col = "black"))) #
grid.draw(g)
plot <- ggplot(wa, aes(x=party, y=np_score, group=party, label = party, colour = party)) + geom_boxplot() + theme_bw() + theme(panel.grid.minor = element_blank()) + theme(legend.position=c(0.10, 0.875), legend.box.just = "left", legend.key.size = unit(1,"line"), legend.key = element_rect(size = 0, color = 'white'), legend.text.align = 0, legend.box = "horizontal") + scale_y_continuous("NPAT Common Space Scores (Liberal-Conservative)") + scale_x_discrete(labels=c("Democratic Caucus","Republican Conference"), "") + geom_text(size = 1.85, alpha = 1, position = "jitter") + colScale + ggtitle("Partisan Ideological Distribution of the Washington State Legislature, 1993-2014")#
grid.newpage()#
footnote <- "Data: McCarty & Shor (2015) Measuring American Legislatures Project. Scores estimated using chamber-specific rollcalls."#
footnote2 <- "Carlos Algara: @algaraca"#
g <- arrangeGrob(plot,  right = textGrob(footnote2, x = 0, hjust = 0.5, vjust= 1, rot = 90, gp = gpar(fontface = "italic", fontsize = 12, col = "blue")), bottom = textGrob(footnote, x = 0.015, y = 1, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 9, col = "black"))) #
grid.draw(g)
3+3.25+3.75+3.5
4.5+3.75+4+3
4.25+4.75+3.75+4
3.5+2.75+2+2.5
1+2+2.5+0
4+4.25+4
12.25+3.5
3.5+3.25+2.5+2.5
3.25+3.25+2.5+3
4+3.75+4+4.25
4.5+4.25+4+4
3.5+2.75+3+2.5
3+3.75+3.5+2.5
4+3+3.25+3.5
3.5+4+3+2.5
4.5+4+5+3.5
4+3.5+3.5+3.5
19.75
5+4.75+4.75+5
5+4.25+4+4
3.5+2+2.5+2
4.5+4.75+4+4.25
4.5+4.25+3.5+3.5
4.5+5+5+2.5
3.75+3+3+3.25
4.5+4.25+3.5+4.5
4.5+4+5+3.5
2+2.5+3.25+3
10.75
4.5+4+2+2
4.75+4.25+3+4
4.5+4+4+3.25
4+3.25+3+2.5
3.5+4.25+4+3.75
4.5+3+4.25+1.5
4.5+4.25+2.75+1
5+5+4.5+4.5
3.5+3.5+3+2
3.5+2+2+3
1.5+3.75+1.75+1.5
4+4.25+4.5+4
20-1.25
4.5+4.5+3
18/30
##########################################
#### Applied Spatial Statistics in R #####
#### Yuri M. Zhukov                  #####
#### 20 January 2010                 #####
##########################################
#
## Clear the workspace#
#
rm(list=ls())#
## Load spatial packages#
#
library(maps)         ## Projections#
library(maptools)     ## Data management#
library(sp)           ## Data management#
library(spdep)        ## Spatial autocorrelation#
library(gstat)        ## Geostatistics#
library(splancs)      ## Kernel Density#
library(spatstat)     ## Geostatistics#
library(pgirmess)     ## Spatial autocorrelation#
library(RColorBrewer) ## Visualization#
library(classInt)     ## Class intervals#
library(spgwr)        ## GWR#
#
project2<-"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs" #District geographic definitions are encoded in US Census standard unprojected format using the NAD83 coordinate datum (PostGIS SRID 4269)#
#
data.shape<-readShapePoly("/Users/carlosalgara/Downloads/districtShapes/districts099.shp",IDvar="ID",proj4string=CRS(project2))
W_cont_el <- poly2nb(data.shape, queen=T)#
#
ccListw <- nb2listw(W_cont_el,style='B',zero.policy=TRUE) # convert neighbor structure to neighbor list for use in spautolm() (be careful to make sure to specify the weights argument (the heteroscedasticity in the variances) if needed for legitimate CAR model   #
plot(ccListw,centroidCoords,add=TRUE) # add neighbor structure; for this you would need the centroid coordinates (not necessarily in the shapefile)  #
ccMat=nb2mat(W_cont_el,style='B',zero.policy=TRUE) # can examine to see what the weight matrix looks like   #
ccNumNeighbors=rowSums(ccMat) # calculate number of neighbors for each region#
#
W_cont_el <- as.matrix(W_cont_el)#
W_cont_el <- data.frame(W_cont_el)#
W_cont_el_mat <- nb2listw(W_cont_el, style="W", zero.policy=TRUE)
W_cont_el_mat
W_cont_el
V W_cont_el_mat
W_cont_el_mat
View(W_cont_el)
library(maps)         ## Projections#
library(maptools)     ## Data management#
library(sp)           ## Data management#
library(spdep)        ## Spatial autocorrelation#
library(gstat)        ## Geostatistics#
library(splancs)      ## Kernel Density#
library(spatstat)     ## Geostatistics#
library(pgirmess)     ## Spatial autocorrelation#
library(RColorBrewer) ## Visualization#
library(classInt)     ## Class intervals#
library(spgwr)        ## GWR
library(foreign)#
library(MASS)#
library(UsingR)#
library(nlme)#
library(Zelig)#
library(lmtest)#
library(sandwich)#
library(car)#
library(directlabels)#
library(bbmle)#
library(maxLik)#
library(ggplot2)#
library(RGraphics)#
library(lattice)#
library(latticeExtra)#
library(VGAM)#
library(mvtnorm)#
library(ordinal)#
library(nnet)#
library(sampleSelection)#
library(pscl)#
library(lmtest)#
library(aod)#
library(scales)#
library(gridExtra)#
library(reshape2)#
library(network)#
library(Matrix)#
library(igraph)#
library(gmodels)#
library(pastecs)#
library(dplyr)#
library(plyr)#
library(arm)#
library(coefplot)#
library(psych)#
library(descr)#
library(data.table)#
library(multiwayvcov)#
library(compositions)#
library(rms)#
library(effects)
load("/Users/carlosalgara/Desktop/carlos_school/PhD_UC Davis/Prospectus/Prospectus_Ch2_Analysis/Ch2_CCES_models.Rdata")
summary(model <- glm(house_majority_vote ~ cong_approval_dich*house_majority_partyid3 + cong_approval_dich*house_majpty_proximity_rule_self_weighted + pres_approve_clean_dich*house_majority_pres_party + retro_econ_eval_clean_scale + cong_maj_knowledge + house_maj_incumbent_reelex + house_maj_qual_advantage + house_dem_seat + house_majority_seat + house_maj_spending_diff, data=cces, weights=weight, family = binomial(link = "logit")))
coeftest(model, vcov = cluster.vcov(model, cluster=cces$district))
14 * 0.15
14 * -0.06
36 * -0.04
36 * 0.20
36 * 0.12
14 * -0.04
14 * 0.20
14 * 0.12
library(foreign)#
library(MASS)#
library(UsingR)#
library(nlme)#
library(Zelig)#
library(lmtest)#
library(sandwich)#
library(car)#
library(directlabels)#
library(bbmle)#
library(maxLik)#
library(ggplot2)#
library(RGraphics)#
library(lattice)#
library(latticeExtra)#
library(VGAM)#
library(mvtnorm)#
library(ordinal)#
library(nnet)#
library(sampleSelection)#
library(pscl)#
library(lmtest)#
library(aod)#
library(scales)#
library(gridExtra)#
library(reshape2)#
library(network)#
library(Matrix)#
library(igraph)#
library(gmodels)#
library(pastecs)#
library(dplyr)#
library(plyr)#
library(arm)#
library(coefplot)#
library(psych)#
library(descr)#
library(data.table)#
library(multiwayvcov)#
library(compositions)#
library(rms)#
library(effects)#
#
library(readstata13)#
library(xlsx)#
#
options(scipen=999)#
#
# Impeachment Support by partisanship on Twitter#
#
nes <- read.dta13(paste("/Users/carlosalgara/Desktop/carlos_school/PhD_UC Davis/Research/Data/American Politics/ANES_Individual_Years/Data/NES",1974,".dta",sep=""),convert.factors = T, convert.underscore = FALSE, encoding ="UTF-8")#
#
freq(nes$V742162)#
freq(nes$V742204)#
#
nes$impeach <- ifelse(nes$V742162 == "1. APPROVE", 1, ifelse(nes$V742162 == "5. DISAPPROVE", 0, NA))#
nes$impeach <- as.numeric(nes$impeach)#
#
nes$pid <- as.character(nes$V742204)#
na <- data.frame(freq(nes$V742204))#
na$values <- rownames(na)#
rownames(na) <- NULL#
nes$pid[nes$pid %in% as.character(na[1,3])] <- "Strong Democrat"#
nes$pid[nes$pid %in% as.character(na[2,3])] <- "Weak Democrat"#
nes$pid[nes$pid %in% as.character(na[3,3])] <- "Lean Democrat"#
nes$pid[nes$pid %in% as.character(na[4,3])] <- "Independent"#
nes$pid[nes$pid %in% as.character(na[5,3])] <- "Lean Republican"#
nes$pid[nes$pid %in% as.character(na[6,3])] <- "Weak Republican"#
nes$pid[nes$pid %in% as.character(na[7,3])] <- "Strong Republican"#
nes$pid[nes$pid %in% as.character(na[8:10,3])] <- NA#
#
nes$pid <- factor(nes$pid,levels=c("Strong Republican","Weak Republican","Lean Republican","Independent","Lean Democrat","Weak Democrat","Strong Democrat"))#
#
summary(model <- glm(impeach ~ pid, data=nes, family = binomial(link = "logit")))#
coeftest(model, vcov = vcovHC(model, "HC3"))#
#
plot(predict <- effect("pid", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(vcov.=vcovHC(model, "HC3")))) # Plot the result#
predict <- data.frame(predict)#
#
predict$question <- "Did you approve or disapprove of the Judiciary Committee's \nDecision to Impeach Richard Nixon?"#
predict$pid <- ifelse(predict$pid == "Strong Republican", "Strong \nRepublican", ifelse(predict$pid == "Weak Republican", "Weak \nRepublican", ifelse(predict$pid == "Lean Republican", "Lean \nRepublican", ifelse(predict$pid == "Independent", "Independent", ifelse(predict$pid == "Strong Democrat", "Strong \nDemocrat", ifelse(predict$pid == "Weak Democrat", "Weak \nDemocrat", ifelse(predict$pid == "Lean Democrat", "Lean \nDemocrat", NA)))))))#
#
myColors <- c("firebrick1","firebrick2","firebrick3","purple","dodgerblue3","dodgerblue2","dodgerblue1")#
names(myColors) <- levels(predict$pid)#
colScale <- scale_colour_manual("",values = myColors)#
#
myShapes <- c(17,17,17,18,16,16,16)#
names(myShapes) <- levels(predict$cong_approval_dich)#
colShape <- scale_shape_manual("",values=myShapes)#
#
predict$pid <- factor(predict$pid,levels=c("Strong \nRepublican","Weak \nRepublican", "Lean \nRepublican", "Independent", "Lean \nDemocrat", "Weak \nDemocrat", "Strong \nDemocrat"))#
#
plot <- ggplot(predict, aes(x=pid, y=fit, ymin=lower, ymax=upper, colour = pid)) + geom_pointrange() + colScale + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_y_continuous(limits=c(0.20,1.0), breaks=seq(0.20,1.0,0.10), "Predicted Probability of Approving of Impeachment") + facet_wrap(~question) + scale_x_discrete("") + theme(legend.position="none") + geom_hline(yintercept = 0.50, colour = gray(1/2), lty = 2)#
grid.newpage()#
footnote <- "Carlos Algara: @algaraca / Data: 1974 American National Election Study (ANES)"#
footnote2 <- "Probabilities estimated from bivariate logistic regression model. Confidence intervals estimated with Huber-White Robust standard errors."#
g <- arrangeGrob(plot, right = textGrob(footnote, x = 0, hjust = 0.5, vjust= 1, rot = 90, gp = gpar(fontface = "italic", fontsize = 12, col = "blue")), bottom = textGrob(footnote2, x = 0.015, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 9, col = "black")))#
grid.draw(g)
predict$question <- "Did you approve or disapprove of the Judiciary Committee's Decision to Impeach Richard Nixon?"
plot <- ggplot(predict, aes(x=pid, y=fit, ymin=lower, ymax=upper, colour = pid)) + geom_pointrange() + colScale + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_y_continuous(limits=c(0.20,1.0), breaks=seq(0.20,1.0,0.10), "Predicted Probability of Approving of Impeachment") + facet_wrap(~question) + scale_x_discrete("") + theme(legend.position="none") + geom_hline(yintercept = 0.50, colour = gray(1/2), lty = 2)#
grid.newpage()#
footnote <- "Carlos Algara: @algaraca / Data: 1974 American National Election Study (ANES)"#
footnote2 <- "Probabilities estimated from bivariate logistic regression model. Confidence intervals estimated with Huber-White Robust standard errors."#
g <- arrangeGrob(plot, right = textGrob(footnote, x = 0, hjust = 0.5, vjust= 1, rot = 90, gp = gpar(fontface = "italic", fontsize = 12, col = "blue")), bottom = textGrob(footnote2, x = 0.015, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 9, col = "black")))#
grid.draw(g)
predict$question <- "Did you approve or disapprove of the House Judiciary Committee's Decision to Impeach Richard Nixon?"
plot <- ggplot(predict, aes(x=pid, y=fit, ymin=lower, ymax=upper, colour = pid)) + geom_pointrange() + colScale + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_y_continuous(limits=c(0.20,1.0), breaks=seq(0.20,1.0,0.10), "Predicted Probability of Approving of Impeachment") + facet_wrap(~question) + scale_x_discrete("") + theme(legend.position="none") + geom_hline(yintercept = 0.50, colour = gray(1/2), lty = 2)#
grid.newpage()#
footnote <- "Carlos Algara: @algaraca / Data: 1974 American National Election Study (ANES)"#
footnote2 <- "Probabilities estimated from bivariate logistic regression model. Confidence intervals estimated with Huber-White Robust standard errors."#
g <- arrangeGrob(plot, right = textGrob(footnote, x = 0, hjust = 0.5, vjust= 1, rot = 90, gp = gpar(fontface = "italic", fontsize = 12, col = "blue")), bottom = textGrob(footnote2, x = 0.015, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 9, col = "black")))#
grid.draw(g)
library(foreign)#
library(MASS)#
library(UsingR)#
library(nlme)#
library(Zelig)#
library(lmtest)#
library(sandwich)#
library(car)#
library(directlabels)#
library(bbmle)#
library(maxLik)#
library(ggplot2)#
library(RGraphics)#
library(lattice)#
library(latticeExtra)#
library(VGAM)#
library(mvtnorm)#
library(ordinal)#
library(nnet)#
library(sampleSelection)#
library(pscl)#
library(lmtest)#
library(aod)#
library(scales)#
library(gridExtra)#
library(reshape2)#
library(network)#
library(Matrix)#
library(igraph)#
library(gmodels)#
library(pastecs)#
library(dplyr)#
library(plyr)#
library(arm)#
library(coefplot)#
library(psych)#
library(descr)#
library(data.table)#
library(multiwayvcov)#
library(compositions)#
library(rms)#
library(effects)#
#
library(readstata13)#
library(xlsx)#
#
options(scipen=999)#
#
# Impeachment Support by partisanship on Twitter#
#
nes <- read.dta13(paste("/Users/carlosalgara/Desktop/carlos_school/PhD_UC Davis/Research/Data/American Politics/ANES_Individual_Years/Data/NES",1974,".dta",sep=""),convert.factors = T, convert.underscore = FALSE, encoding ="UTF-8")#
#
freq(nes$V742162)#
freq(nes$V742204)#
#
nes$impeach <- ifelse(nes$V742162 == "1. APPROVE", 1, ifelse(nes$V742162 == "5. DISAPPROVE", 0, NA))#
nes$impeach <- as.numeric(nes$impeach)#
#
nes$pid <- as.character(nes$V742204)#
na <- data.frame(freq(nes$V742204))#
na$values <- rownames(na)#
rownames(na) <- NULL#
nes$pid[nes$pid %in% as.character(na[1,3])] <- "Strong Democrat"#
nes$pid[nes$pid %in% as.character(na[2,3])] <- "Weak Democrat"#
nes$pid[nes$pid %in% as.character(na[3,3])] <- "Lean Democrat"#
nes$pid[nes$pid %in% as.character(na[4,3])] <- "Independent"#
nes$pid[nes$pid %in% as.character(na[5,3])] <- "Lean Republican"#
nes$pid[nes$pid %in% as.character(na[6,3])] <- "Weak Republican"#
nes$pid[nes$pid %in% as.character(na[7,3])] <- "Strong Republican"#
nes$pid[nes$pid %in% as.character(na[8:10,3])] <- NA#
#
nes$pid <- factor(nes$pid,levels=c("Strong Republican","Weak Republican","Lean Republican","Independent","Lean Democrat","Weak Democrat","Strong Democrat"))#
#
summary(model <- glm(impeach ~ pid, data=nes, family = binomial(link = "logit")))#
coeftest(model, vcov = vcovHC(model, "HC3"))#
#
plot(predict <- effect("pid", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(vcov.=vcovHC(model, "HC3")))) # Plot the result#
predict <- data.frame(predict)#
#
predict$question <- "Did you approve or disapprove of the House Judiciary Committee's Decision to Impeach Richard Nixon?"#
predict$pid <- ifelse(predict$pid == "Strong Republican", "Strong \nRepublican", ifelse(predict$pid == "Weak Republican", "Weak \nRepublican", ifelse(predict$pid == "Lean Republican", "Lean \nRepublican", ifelse(predict$pid == "Independent", "Independent", ifelse(predict$pid == "Strong Democrat", "Strong \nDemocrat", ifelse(predict$pid == "Weak Democrat", "Weak \nDemocrat", ifelse(predict$pid == "Lean Democrat", "Lean \nDemocrat", NA)))))))#
#
myColors <- c("firebrick1","firebrick2","firebrick3","purple","dodgerblue3","dodgerblue2","dodgerblue1")#
names(myColors) <- levels(predict$pid)#
colScale <- scale_colour_manual("",values = myColors)#
#
myShapes <- c(17,17,17,18,16,16,16)#
names(myShapes) <- levels(predict$cong_approval_dich)#
colShape <- scale_shape_manual("",values=myShapes)#
#
predict$pid <- factor(predict$pid,levels=c("Strong \nRepublican","Weak \nRepublican", "Lean \nRepublican", "Independent", "Lean \nDemocrat", "Weak \nDemocrat", "Strong \nDemocrat"))#
#
plot <- ggplot(predict, aes(x=pid, y=fit, ymin=lower, ymax=upper, colour = pid)) + geom_pointrange() + colScale + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_y_continuous(limits=c(0.20,1.0), breaks=seq(0.20,1.0,0.10), "Predicted Probability of Approving of Committee Impeachment") + facet_wrap(~question) + scale_x_discrete("") + theme(legend.position="none") + geom_hline(yintercept = 0.50, colour = gray(1/2), lty = 2)#
grid.newpage()#
footnote <- "Carlos Algara: @algaraca / Data: 1974 American National Election Study (ANES)"#
footnote2 <- "Probabilities estimated from bivariate logistic regression model. Confidence intervals estimated with Huber-White Robust standard errors."#
g <- arrangeGrob(plot, right = textGrob(footnote, x = 0, hjust = 0.5, vjust= 1, rot = 90, gp = gpar(fontface = "italic", fontsize = 12, col = "blue")), bottom = textGrob(footnote2, x = 0.015, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 9, col = "black")))#
grid.draw(g)
predict$question <- "Did you approve or disapprove of the House Judiciary Committee's Decision to Impeach Richard Nixon? \nProbability of Approving by Partisanship."
plot <- ggplot(predict, aes(x=pid, y=fit, ymin=lower, ymax=upper, colour = pid)) + geom_pointrange() + colScale + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_y_continuous(limits=c(0.20,1.0), breaks=seq(0.20,1.0,0.10), "Predicted Probability of Approving of Committee Impeachment") + facet_wrap(~question) + scale_x_discrete("") + theme(legend.position="none") + geom_hline(yintercept = 0.50, colour = gray(1/2), lty = 2)#
grid.newpage()#
footnote <- "Carlos Algara: @algaraca / Data: 1974 American National Election Study (ANES)"#
footnote2 <- "Probabilities estimated from bivariate logistic regression model. Confidence intervals estimated with Huber-White Robust standard errors."#
g <- arrangeGrob(plot, right = textGrob(footnote, x = 0, hjust = 0.5, vjust= 1, rot = 90, gp = gpar(fontface = "italic", fontsize = 12, col = "blue")), bottom = textGrob(footnote2, x = 0.015, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 9, col = "black")))#
grid.draw(g)
predict$question <- "Did you approve or disapprove of the House Judiciary Committee's Decision to Impeach Richard Nixon?"
plot <- ggplot(predict, aes(x=pid, y=fit, ymin=lower, ymax=upper, colour = pid)) + geom_pointrange() + colScale + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_y_continuous(limits=c(0.20,1.0), breaks=seq(0.20,1.0,0.10), "Predicted Probability of Approving of Committee Impeachment") + facet_wrap(~question) + scale_x_discrete("") + theme(legend.position="none") + geom_hline(yintercept = 0.50, colour = gray(1/2), lty = 2) + ggtitle("Probability of Approving of Impeachment Action against President Nixon by Partisanship")#
grid.newpage()#
footnote <- "Carlos Algara: @algaraca / Data: 1974 American National Election Study (ANES)"#
footnote2 <- "Probabilities estimated from bivariate logistic regression model. Confidence intervals estimated with Huber-White Robust standard errors."#
g <- arrangeGrob(plot, right = textGrob(footnote, x = 0, hjust = 0.5, vjust= 1, rot = 90, gp = gpar(fontface = "italic", fontsize = 12, col = "blue")), bottom = textGrob(footnote2, x = 0.015, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 9, col = "black")))#
grid.draw(g)
predict$question <- "Question: Did you approve or disapprove of the House Judiciary Committee's Decision to Impeach Richard Nixon?"
plot <- ggplot(predict, aes(x=pid, y=fit, ymin=lower, ymax=upper, colour = pid)) + geom_pointrange() + colScale + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_y_continuous(limits=c(0.20,1.0), breaks=seq(0.20,1.0,0.10), "Predicted Probability of Approving of Committee Impeachment") + facet_wrap(~question) + scale_x_discrete("") + theme(legend.position="none") + geom_hline(yintercept = 0.50, colour = gray(1/2), lty = 2) + ggtitle("Probability of Approving of Impeachment Action against President Nixon by Partisanship, 1974")#
grid.newpage()#
footnote <- "Carlos Algara: @algaraca / Data: 1974 American National Election Study (ANES)"#
footnote2 <- "Probabilities estimated from bivariate logistic regression model. Confidence intervals estimated with Huber-White Robust standard errors."#
g <- arrangeGrob(plot, right = textGrob(footnote, x = 0, hjust = 0.5, vjust= 1, rot = 90, gp = gpar(fontface = "italic", fontsize = 12, col = "blue")), bottom = textGrob(footnote2, x = 0.015, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 9, col = "black")))#
grid.draw(g)
library(foreign)#
library(MASS)#
library(UsingR)#
library(nlme)#
library(Zelig)#
library(lmtest)#
library(sandwich)#
library(car)#
library(directlabels)#
library(bbmle)#
library(maxLik)#
library(ggplot2)#
library(RGraphics)#
library(lattice)#
library(latticeExtra)#
library(VGAM)#
library(mvtnorm)#
library(ordinal)#
library(nnet)#
library(sampleSelection)#
library(pscl)#
library(lmtest)#
library(aod)#
library(scales)#
library(gridExtra)#
library(reshape2)#
library(network)#
library(Matrix)#
library(igraph)#
library(gmodels)#
library(pastecs)#
library(dplyr)#
library(plyr)#
library(arm)#
library(coefplot)#
library(psych)#
library(descr)#
library(data.table)#
library(multiwayvcov)#
library(compositions)#
library(rms)#
library(effects)#
#
library(readstata13)#
library(xlsx)#
#
options(scipen=999)#
#
# Impeachment Support by partisanship on Twitter#
#
nes1998 <- read.dta13(paste("/Users/carlosalgara/Desktop/carlos_school/PhD_UC Davis/Research/Data/American Politics/ANES_Individual_Years/Data/NES",1998,".dta",sep=""),convert.factors = T, convert.underscore = FALSE, encoding ="UTF-8")#
#
nes1998$impeach <- ifelse(nes1998$V980535 == "1. Approve", 1, ifelse(nes1998$V980535 == "5. Disapprove", 0, NA))#
nes1998$impeach <- as.numeric(nes1998$impeach)#
#
nes1998$pid <- as.character(nes1998$V980339)#
na <- data.frame(freq(nes1998$V980339))#
na$values <- rownames(na)#
rownames(na) <- NULL#
nes1998$pid[nes1998$pid %in% as.character(na[1,3])] <- "Strong Democrat"#
nes1998$pid[nes1998$pid %in% as.character(na[2,3])] <- "Weak Democrat"#
nes1998$pid[nes1998$pid %in% as.character(na[3,3])] <- "Lean Democrat"#
nes1998$pid[nes1998$pid %in% as.character(na[4,3])] <- "Independent"#
nes1998$pid[nes1998$pid %in% as.character(na[5,3])] <- "Lean Republican"#
nes1998$pid[nes1998$pid %in% as.character(na[6,3])] <- "Weak Republican"#
nes1998$pid[nes1998$pid %in% as.character(na[7,3])] <- "Strong Republican"#
nes1998$pid[nes1998$pid %in% as.character(na[8:10,3])] <- NA#
#
nes1998$pid <- factor(nes1998$pid,levels=c("Strong Republican","Weak Republican","Lean Republican","Independent","Lean Democrat","Weak Democrat","Strong Democrat"))#
#
summary(model <- glm(impeach ~ pid, data=nes1998, family = binomial(link = "logit")))#
coeftest(model, vcov = vcovHC(model, "HC3"))#
#
plot(predict <- effect("pid", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(vcov.=vcovHC(model, "HC3")))) # Plot the result#
predict <- data.frame(predict)#
#
predict$question <- "Question: If President Clinton does not resign, should he be impeached?"#
predict$pid <- ifelse(predict$pid == "Strong Republican", "Strong \nRepublican", ifelse(predict$pid == "Weak Republican", "Weak \nRepublican", ifelse(predict$pid == "Lean Republican", "Lean \nRepublican", ifelse(predict$pid == "Independent", "Independent", ifelse(predict$pid == "Strong Democrat", "Strong \nDemocrat", ifelse(predict$pid == "Weak Democrat", "Weak \nDemocrat", ifelse(predict$pid == "Lean Democrat", "Lean \nDemocrat", NA)))))))#
#
myColors <- c("firebrick1","firebrick2","firebrick3","purple","dodgerblue3","dodgerblue2","dodgerblue1")#
names(myColors) <- levels(predict$pid)#
colScale <- scale_colour_manual("",values = myColors)#
#
myShapes <- c(17,17,17,18,16,16,16)#
names(myShapes) <- levels(predict$cong_approval_dich)#
colShape <- scale_shape_manual("",values=myShapes)#
#
predict$pid <- factor(predict$pid,levels=c("Strong \nRepublican","Weak \nRepublican", "Lean \nRepublican", "Independent", "Lean \nDemocrat", "Weak \nDemocrat", "Strong \nDemocrat"))#
#
plot <- ggplot(predict, aes(x=pid, y=fit, ymin=lower, ymax=upper, colour = pid)) + geom_pointrange() + colScale + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_y_continuous(limits=c(0,0.604), breaks=seq(0,0.60,0.10), "Predicted Probability of Approving of Impeachment") + facet_wrap(~question) + scale_x_discrete("") + theme(legend.position="none") + geom_hline(yintercept = 0.50, colour = gray(1/2), lty = 2) + ggtitle("Probability of Approving of Impeachment Action against President Clinton by Partisanship, 1998")#
grid.newpage()#
footnote <- "Carlos Algara: @algaraca / Data: 1998 American National Election Study (ANES)"#
footnote2 <- "Probabilities estimated from bivariate logistic regression model. Confidence intervals estimated with Huber-White Robust standard errors."#
g <- arrangeGrob(plot, right = textGrob(footnote, x = 0, hjust = 0.5, vjust= 1, rot = 90, gp = gpar(fontface = "italic", fontsize = 12, col = "blue")), bottom = textGrob(footnote2, x = 0.015, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 9, col = "black")))#
grid.draw(g)
library(foreign)#
library(MASS)#
library(UsingR)#
library(nlme)#
library(Zelig)#
library(lmtest)#
library(sandwich)#
library(car)#
library(directlabels)#
library(bbmle)#
library(maxLik)#
library(ggplot2)#
library(RGraphics)#
library(lattice)#
library(latticeExtra)#
library(VGAM)#
library(mvtnorm)#
library(ordinal)#
library(nnet)#
library(sampleSelection)#
library(pscl)#
library(lmtest)#
library(aod)#
library(scales)#
library(gridExtra)#
library(reshape2)#
library(network)#
library(Matrix)#
library(igraph)#
library(gmodels)#
library(pastecs)#
library(dplyr)#
library(plyr)#
library(arm)#
library(coefplot)#
library(psych)#
library(descr)#
library(data.table)#
library(multiwayvcov)#
library(compositions)#
library(rms)#
library(effects)#
#
library(readstata13)#
library(xlsx)#
#
options(scipen=999)#
#
# Impeachment Support by partisanship on Twitter#
#
nes1998 <- read.dta13(paste("/Users/carlosalgara/Desktop/carlos_school/PhD_UC Davis/Research/Data/American Politics/ANES_Individual_Years/Data/NES",1998,".dta",sep=""),convert.factors = T, convert.underscore = FALSE, encoding ="UTF-8")#
#
nes1998$impeach <- ifelse(nes1998$V980535 == "1. Approve", 1, ifelse(nes1998$V980535 == "5. Disapprove", 0, NA))#
nes1998$impeach <- as.numeric(nes1998$impeach)#
#
nes1998$pid <- as.character(nes1998$V980339)#
na <- data.frame(freq(nes1998$V980339))#
na$values <- rownames(na)#
rownames(na) <- NULL#
nes1998$pid[nes1998$pid %in% as.character(na[1,3])] <- "Strong Democrat"#
nes1998$pid[nes1998$pid %in% as.character(na[2,3])] <- "Weak Democrat"#
nes1998$pid[nes1998$pid %in% as.character(na[3,3])] <- "Lean Democrat"#
nes1998$pid[nes1998$pid %in% as.character(na[4,3])] <- "Independent"#
nes1998$pid[nes1998$pid %in% as.character(na[5,3])] <- "Lean Republican"#
nes1998$pid[nes1998$pid %in% as.character(na[6,3])] <- "Weak Republican"#
nes1998$pid[nes1998$pid %in% as.character(na[7,3])] <- "Strong Republican"#
nes1998$pid[nes1998$pid %in% as.character(na[8:10,3])] <- NA#
#
nes1998$pid <- factor(nes1998$pid,levels=c("Strong Republican","Weak Republican","Lean Republican","Independent","Lean Democrat","Weak Democrat","Strong Democrat"))#
#
summary(model <- glm(impeach ~ pid, data=nes1998, family = binomial(link = "logit")))#
coeftest(model, vcov = vcovHC(model, "HC3"))#
#
plot(predict <- effect("pid", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(vcov.=vcovHC(model, "HC3")))) # Plot the result#
predict <- data.frame(predict)#
#
predict$question <- "Question: If President Clinton does not resign, should he be impeached?"#
predict$pid <- ifelse(predict$pid == "Strong Republican", "Strong \nRepublican", ifelse(predict$pid == "Weak Republican", "Weak \nRepublican", ifelse(predict$pid == "Lean Republican", "Lean \nRepublican", ifelse(predict$pid == "Independent", "Independent", ifelse(predict$pid == "Strong Democrat", "Strong \nDemocrat", ifelse(predict$pid == "Weak Democrat", "Weak \nDemocrat", ifelse(predict$pid == "Lean Democrat", "Lean \nDemocrat", NA)))))))#
#
myColors <- c("firebrick1","firebrick2","firebrick3","purple","dodgerblue3","dodgerblue2","dodgerblue1")#
names(myColors) <- levels(predict$pid)#
colScale <- scale_colour_manual("",values = myColors)#
#
myShapes <- c(17,17,17,18,16,16,16)#
names(myShapes) <- levels(predict$cong_approval_dich)#
colShape <- scale_shape_manual("",values=myShapes)#
#
predict$pid <- factor(predict$pid,levels=c("Strong \nRepublican","Weak \nRepublican", "Lean \nRepublican", "Independent", "Lean \nDemocrat", "Weak \nDemocrat", "Strong \nDemocrat"))#
#
plot <- ggplot(predict, aes(x=pid, y=fit, ymin=lower, ymax=upper, colour = pid)) + geom_pointrange() + colScale + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_y_continuous(limits=c(0,0.604), breaks=seq(0,0.60,0.10), "Predicted Probability of Approving of Impeachment") + facet_wrap(~question) + scale_x_discrete("") + theme(legend.position="none") + geom_hline(yintercept = 0.50, colour = gray(1/2), lty = 2) + ggtitle("Probability of Approving of Impeachment Action against President Clinton by Partisanship, 1998")#
grid.newpage()#
footnote <- "Carlos Algara: @algaraca / Data: 1998 American National Election Study (ANES)"#
footnote2 <- "Probabilities estimated from bivariate logistic regression model. Confidence intervals estimated with Huber-White Robust standard errors."#
g <- arrangeGrob(plot, right = textGrob(footnote, x = 0, hjust = 0.5, vjust= 1, rot = 90, gp = gpar(fontface = "italic", fontsize = 12, col = "blue")), bottom = textGrob(footnote2, x = 0.015, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 9, col = "black")))#
grid.draw(g)#
#
myColors <- c("firebrick3","firebrick2","firebrick1","purple","dodgerblue1","dodgerblue2","dodgerblue3")#
names(myColors) <- levels(predict$pid)#
colFill <- scale_fill_manual("",values = myColors)#
#
plot <- ggplot(predict, aes(x=pid, y=fit, ymin=lower, ymax=upper, fill = pid)) + geom_bar(stat="identity") + colFill + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_y_continuous(limits=c(0,0.65), breaks=seq(0.10,0.60,0.10), expand = c(0, 0), "Predicted Probability of Approving of Impeachment") + facet_wrap(~question) + scale_x_discrete("") + theme(legend.position="none") + geom_hline(yintercept = 0.50, colour = gray(1/2), lty = 2) + ggtitle("Probability of Approving of Impeachment Action against President Clinton by Partisanship, 1998")#
grid.newpage()#
footnote <- "Carlos Algara: @algaraca / Data: 1998 American National Election Study (ANES)"#
footnote2 <- "Probabilities estimated from bivariate logistic regression model. Confidence intervals estimated with Huber-White Robust standard errors."#
g <- arrangeGrob(plot, right = textGrob(footnote, x = 0, hjust = 0.5, vjust= 1, rot = 90, gp = gpar(fontface = "italic", fontsize = 12, col = "blue")), bottom = textGrob(footnote2, x = 0.015, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 9, col = "black")))#
grid.draw(g)
library(foreign)#
library(MASS)#
library(UsingR)#
library(nlme)#
library(Zelig)#
library(lmtest)#
library(sandwich)#
library(car)#
library(directlabels)#
library(bbmle)#
library(maxLik)#
library(ggplot2)#
library(RGraphics)#
library(lattice)#
library(latticeExtra)#
library(VGAM)#
library(mvtnorm)#
library(ordinal)#
library(nnet)#
library(sampleSelection)#
library(pscl)#
library(lmtest)#
library(aod)#
library(scales)#
library(gridExtra)#
library(reshape2)#
library(network)#
library(Matrix)#
library(igraph)#
library(gmodels)#
library(pastecs)#
library(dplyr)#
library(plyr)#
library(arm)#
library(coefplot)#
library(psych)#
library(descr)#
library(data.table)#
library(multiwayvcov)#
library(compositions)#
library(rms)#
library(effects)#
#
library(readstata13)#
library(xlsx)#
#
options(scipen=999)#
#
# Impeachment Support by partisanship on Twitter#
#
nes <- read.dta13(paste("/Users/carlosalgara/Desktop/carlos_school/PhD_UC Davis/Research/Data/American Politics/ANES_Individual_Years/Data/NES",1974,".dta",sep=""),convert.factors = T, convert.underscore = FALSE, encoding ="UTF-8")#
#
freq(nes$V742162)#
freq(nes$V742204)#
#
nes$impeach <- ifelse(nes$V742162 == "1. APPROVE", 1, ifelse(nes$V742162 == "5. DISAPPROVE", 0, NA))#
nes$impeach <- as.numeric(nes$impeach)#
#
nes$pid <- as.character(nes$V742204)#
na <- data.frame(freq(nes$V742204))#
na$values <- rownames(na)#
rownames(na) <- NULL#
nes$pid[nes$pid %in% as.character(na[1,3])] <- "Strong Democrat"#
nes$pid[nes$pid %in% as.character(na[2,3])] <- "Weak Democrat"#
nes$pid[nes$pid %in% as.character(na[3,3])] <- "Lean Democrat"#
nes$pid[nes$pid %in% as.character(na[4,3])] <- "Independent"#
nes$pid[nes$pid %in% as.character(na[5,3])] <- "Lean Republican"#
nes$pid[nes$pid %in% as.character(na[6,3])] <- "Weak Republican"#
nes$pid[nes$pid %in% as.character(na[7,3])] <- "Strong Republican"#
nes$pid[nes$pid %in% as.character(na[8:10,3])] <- NA#
#
nes$pid <- factor(nes$pid,levels=c("Strong Republican","Weak Republican","Lean Republican","Independent","Lean Democrat","Weak Democrat","Strong Democrat"))#
#
summary(model <- glm(impeach ~ pid, data=nes, family = binomial(link = "logit")))#
coeftest(model, vcov = vcovHC(model, "HC3"))#
#
plot(predict <- effect("pid", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(vcov.=vcovHC(model, "HC3")))) # Plot the result#
predict <- data.frame(predict)#
#
predict$question <- "Question: Did you approve or disapprove of the House Judiciary Committee's Decision to Impeach Richard Nixon?"#
predict$pid <- ifelse(predict$pid == "Strong Republican", "Strong \nRepublican", ifelse(predict$pid == "Weak Republican", "Weak \nRepublican", ifelse(predict$pid == "Lean Republican", "Lean \nRepublican", ifelse(predict$pid == "Independent", "Independent", ifelse(predict$pid == "Strong Democrat", "Strong \nDemocrat", ifelse(predict$pid == "Weak Democrat", "Weak \nDemocrat", ifelse(predict$pid == "Lean Democrat", "Lean \nDemocrat", NA)))))))#
#
myColors <- c("firebrick1","firebrick2","firebrick3","purple","dodgerblue3","dodgerblue2","dodgerblue1")#
names(myColors) <- levels(predict$pid)#
colScale <- scale_colour_manual("",values = myColors)#
#
myShapes <- c(17,17,17,18,16,16,16)#
names(myShapes) <- levels(predict$cong_approval_dich)#
colShape <- scale_shape_manual("",values=myShapes)#
#
predict$pid <- factor(predict$pid,levels=c("Strong \nRepublican","Weak \nRepublican", "Lean \nRepublican", "Independent", "Lean \nDemocrat", "Weak \nDemocrat", "Strong \nDemocrat"))#
#
plot <- ggplot(predict, aes(x=pid, y=fit, ymin=lower, ymax=upper, colour = pid)) + geom_pointrange() + colScale + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_y_continuous(limits=c(0.20,1.0), breaks=seq(0.20,1.0,0.10), "Predicted Probability of Approving of Committee Impeachment") + facet_wrap(~question) + scale_x_discrete("") + theme(legend.position="none") + geom_hline(yintercept = 0.50, colour = gray(1/2), lty = 2) + ggtitle("Probability of Approving of Impeachment Action against President Nixon by Partisanship, 1974")#
grid.newpage()#
footnote <- "Carlos Algara: @algaraca / Data: 1974 American National Election Study (ANES)"#
footnote2 <- "Probabilities estimated from bivariate logistic regression model. Confidence intervals estimated with Huber-White Robust standard errors."#
g <- arrangeGrob(plot, right = textGrob(footnote, x = 0, hjust = 0.5, vjust= 1, rot = 90, gp = gpar(fontface = "italic", fontsize = 12, col = "blue")), bottom = textGrob(footnote2, x = 0.015, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 9, col = "black")))#
grid.draw(g)#
#
myColors <- c("firebrick3","firebrick2","firebrick1","purple","dodgerblue1","dodgerblue2","dodgerblue3")#
names(myColors) <- levels(predict$pid)#
colFill <- scale_fill_manual("",values = myColors)#
#
plot <- ggplot(predict, aes(x=pid, y=fit, ymin=lower, ymax=upper, fill = pid)) + geom_bar(stat="identity") + colFill + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_y_continuous(limits=c(0,1.0), breaks=seq(0.10,1.0,0.10), expand = c(0, 0), "Predicted Probability of Approving of Committee Impeachment") + facet_wrap(~question) + scale_x_discrete("") + theme(legend.position="none") + geom_hline(yintercept = 0.50, colour = gray(1/2), lty = 2) + ggtitle("Probability of Approving of Impeachment Action against President Nixon by Partisanship, 1974")#
grid.newpage()#
footnote <- "Carlos Algara: @algaraca / Data: 1974 American National Election Study (ANES)"#
footnote2 <- "Probabilities estimated from bivariate logistic regression model. Confidence intervals estimated with Huber-White Robust standard errors."#
g <- arrangeGrob(plot, right = textGrob(footnote, x = 0, hjust = 0.5, vjust= 1, rot = 90, gp = gpar(fontface = "italic", fontsize = 12, col = "blue")), bottom = textGrob(footnote2, x = 0.015, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 9, col = "black")))#
grid.draw(g)
library(foreign)#
library(MASS)#
library(UsingR)#
library(nlme)#
library(Zelig)#
library(lmtest)#
library(sandwich)#
library(car)#
library(directlabels)#
library(bbmle)#
library(maxLik)#
library(ggplot2)#
library(RGraphics)#
library(lattice)#
library(latticeExtra)#
library(VGAM)#
library(mvtnorm)#
library(ordinal)#
library(nnet)#
library(sampleSelection)#
library(pscl)#
library(lmtest)#
library(aod)#
library(scales)#
library(gridExtra)#
library(reshape2)#
library(network)#
library(Matrix)#
library(igraph)#
library(gmodels)#
library(pastecs)#
library(dplyr)#
library(plyr)#
library(arm)#
library(coefplot)#
library(psych)#
library(descr)#
library(data.table)#
library(multiwayvcov)#
library(compositions)#
library(rms)#
library(effects)#
#
library(readstata13)#
library(xlsx)#
#
options(scipen=999)#
#
# Impeachment Support by partisanship on Twitter#
#
nes <- read.dta13(paste("/Users/carlosalgara/Desktop/carlos_school/PhD_UC Davis/Research/Data/American Politics/ANES_Individual_Years/Data/NES",1974,".dta",sep=""),convert.factors = T, convert.underscore = FALSE, encoding ="UTF-8")#
#
freq(nes$V742162)#
freq(nes$V742204)#
#
nes$impeach <- ifelse(nes$V742162 == "1. APPROVE", 1, ifelse(nes$V742162 == "5. DISAPPROVE", 0, NA))#
nes$impeach <- as.numeric(nes$impeach)#
#
nes$pid <- as.character(nes$V742204)#
na <- data.frame(freq(nes$V742204))#
na$values <- rownames(na)#
rownames(na) <- NULL#
nes$pid[nes$pid %in% as.character(na[1,3])] <- "Strong Democrat"#
nes$pid[nes$pid %in% as.character(na[2,3])] <- "Weak Democrat"#
nes$pid[nes$pid %in% as.character(na[3,3])] <- "Lean Democrat"#
nes$pid[nes$pid %in% as.character(na[4,3])] <- "Independent"#
nes$pid[nes$pid %in% as.character(na[5,3])] <- "Lean Republican"#
nes$pid[nes$pid %in% as.character(na[6,3])] <- "Weak Republican"#
nes$pid[nes$pid %in% as.character(na[7,3])] <- "Strong Republican"#
nes$pid[nes$pid %in% as.character(na[8:10,3])] <- NA#
#
nes$pid <- factor(nes$pid,levels=c("Strong Republican","Weak Republican","Lean Republican","Independent","Lean Democrat","Weak Democrat","Strong Democrat"))#
#
summary(model <- glm(impeach ~ pid, data=nes, family = binomial(link = "logit")))#
coeftest(model, vcov = vcovHC(model, "HC3"))#
#
plot(predict <- effect("pid", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(vcov.=vcovHC(model, "HC3")))) # Plot the result#
predict <- data.frame(predict)#
#
predict$question <- "Question: Did you approve or disapprove of the House Judiciary Committee's Decision to Impeach Richard Nixon?"#
predict$pid <- ifelse(predict$pid == "Strong Republican", "Strong \nRepublican", ifelse(predict$pid == "Weak Republican", "Weak \nRepublican", ifelse(predict$pid == "Lean Republican", "Lean \nRepublican", ifelse(predict$pid == "Independent", "Independent", ifelse(predict$pid == "Strong Democrat", "Strong \nDemocrat", ifelse(predict$pid == "Weak Democrat", "Weak \nDemocrat", ifelse(predict$pid == "Lean Democrat", "Lean \nDemocrat", NA)))))))#
#
myColors <- c("firebrick1","firebrick2","firebrick3","purple","dodgerblue3","dodgerblue2","dodgerblue1")#
names(myColors) <- levels(predict$pid)#
colScale <- scale_colour_manual("",values = myColors)#
#
myShapes <- c(17,17,17,18,16,16,16)#
names(myShapes) <- levels(predict$cong_approval_dich)#
colShape <- scale_shape_manual("",values=myShapes)#
#
predict$pid <- factor(predict$pid,levels=c("Strong \nRepublican","Weak \nRepublican", "Lean \nRepublican", "Independent", "Lean \nDemocrat", "Weak \nDemocrat", "Strong \nDemocrat"))#
#
plot <- ggplot(predict, aes(x=pid, y=fit, ymin=lower, ymax=upper, colour = pid)) + geom_pointrange() + colScale + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_y_continuous(limits=c(0.20,1.0), breaks=seq(0.20,1.0,0.10), "Predicted Probability of Approving of Committee Impeachment") + facet_wrap(~question) + scale_x_discrete("") + theme(legend.position="none") + geom_hline(yintercept = 0.50, colour = gray(1/2), lty = 2) + ggtitle("Probability of Approving of Impeachment Action against President Nixon by Partisanship, 1974")#
grid.newpage()#
footnote <- "Carlos Algara: @algaraca / Data: 1974 American National Election Study (ANES)"#
footnote2 <- "Probabilities estimated from bivariate logistic regression model. Confidence intervals estimated with Huber-White Robust standard errors."#
g <- arrangeGrob(plot, right = textGrob(footnote, x = 0, hjust = 0.5, vjust= 1, rot = 90, gp = gpar(fontface = "italic", fontsize = 12, col = "blue")), bottom = textGrob(footnote2, x = 0.015, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 9, col = "black")))#
grid.draw(g)#
#
myColors <- c("firebrick3","firebrick2","firebrick1","purple","dodgerblue1","dodgerblue2","dodgerblue3")#
names(myColors) <- levels(predict$pid)#
colFill <- scale_fill_manual("",values = myColors)#
#
plot <- ggplot(predict, aes(x=pid, y=fit, ymin=lower, ymax=upper, fill = pid)) + geom_bar(stat="identity") + colFill + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_y_continuous(limits=c(0,1.0), breaks=seq(0.10,1.0,0.10), expand = c(0,0), "Predicted Probability of Approving of Committee Impeachment") + facet_wrap(~question) + scale_x_discrete("") + theme(legend.position="none") + geom_hline(yintercept = 0.50, colour = gray(1/2), lty = 2) + ggtitle("Probability of Approving of Impeachment Action against President Nixon by Partisanship, 1974")#
grid.newpage()#
footnote <- "Carlos Algara: @algaraca / Data: 1974 American National Election Study (ANES)"#
footnote2 <- "Probabilities estimated from bivariate logistic regression model. Confidence intervals estimated with Huber-White Robust standard errors."#
g <- arrangeGrob(plot, right = textGrob(footnote, x = 0, hjust = 0.5, vjust= 1, rot = 90, gp = gpar(fontface = "italic", fontsize = 12, col = "blue")), bottom = textGrob(footnote2, x = 0.015, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 9, col = "black")))#
grid.draw(g)
plot <- ggplot(predict, aes(x=pid, y=fit, ymin=lower, ymax=upper, fill = pid)) + geom_bar(stat="identity") + colFill + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_y_continuous(limits=c(0,1.0), breaks=seq(0.10,1.0,0.10), expand = c(0,0.05), "Predicted Probability of Approving of Committee Impeachment") + facet_wrap(~question) + scale_x_discrete("") + theme(legend.position="none") + geom_hline(yintercept = 0.50, colour = gray(1/2), lty = 2) + ggtitle("Probability of Approving of Impeachment Action against President Nixon by Partisanship, 1974")
plot
plot <- ggplot(predict, aes(x=pid, y=fit, ymin=lower, ymax=upper, fill = pid)) + geom_bar(stat="identity") + colFill + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_y_continuous(limits=c(0,1.0), breaks=seq(0.10,1.0,0.10), expand = c(0,0), "Predicted Probability of Approving of Committee Impeachment") + facet_wrap(~question) + scale_x_discrete("") + theme(legend.position="none") + geom_hline(yintercept = 0.50, colour = gray(1/2), lty = 2) + ggtitle("Probability of Approving of Impeachment Action against President Nixon by Partisanship, 1974")
plot
plot <- ggplot(predict, aes(x=pid, y=fit, ymin=lower, ymax=upper, fill = pid)) + geom_bar(stat="identity") + colFill + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_y_continuous(limits=c(0,1.0), breaks=seq(0.10,1.0,0.10), expand = c(0.05,0), "Predicted Probability of Approving of Committee Impeachment") + facet_wrap(~question) + scale_x_discrete("") + theme(legend.position="none") + geom_hline(yintercept = 0.50, colour = gray(1/2), lty = 2) + ggtitle("Probability of Approving of Impeachment Action against President Nixon by Partisanship, 1974")
plot
tmp <- installed.packages()#
installedpkgs <- as.vector(tmp[is.na(tmp[,"Priority"]), 1])#
save(installedpkgs, file="installed_old.rda")
install.packages("wnominate")
install.packages("withr")
install.packages("xml2")
install.packages("XML")
install.packages("xlsxjars")
install.packages("xlsx")
install.packages("withr")
install.packages("xml2")
install.packages("xts")
install.packages("yaml")
install.packages("Zelig")
install.packages("rJava")
install.packages("xlsx")
remove.packages("rJava")
library(rJava)
install.packages("rJava",,"http://rforge.net")
library(rJava)
library("rJava")
install.packages("rJava",,"http://rforge.net")
config.log
javareconf
install.packages("rJava",,"http://rforge.net")
install.pacakges("rJava")
install.packages("rJava")
12/15
library(foreign)#
library(MASS)#
library(UsingR)#
library(nlme)#
library(Zelig)#
library(lmtest)#
library(sandwich)#
library(car)#
library(directlabels)#
library(bbmle)#
library(maxLik)#
library(ggplot2)#
library(RGraphics)#
library(lattice)#
library(latticeExtra)#
library(VGAM)#
library(mvtnorm)#
library(ordinal)#
library(nnet)#
library(sampleSelection)#
library(pscl)#
library(lmtest)#
library(aod)#
library(scales)#
library(gridExtra)#
library(reshape2)#
library(network)#
library(Matrix)#
library(igraph)#
library(gmodels)#
library(pastecs)#
#library(dplyr)#
library(plyr)#
library(arm)#
library(coefplot)#
library(psych)#
library(descr)#
library(data.table)#
library(multiwayvcov)#
library(compositions)#
library(rms)#
library(effects)#
#
library(Rvoteview)#
#
s <- voteview_search("", chamber = "Senate", congress=115)#
x <- c("Cloture", "Debate", "Table", "Recess","Attendance","Proceed")#
s$obstruction_motions <- grepl(paste(x, collapse = "|"), s$question)#
s$obstruction_motions <- ifelse(s$obstruction_motions == TRUE, 1,0)#
clotures <- subset(s,s$obstruction_motions == 1)#
ideo <- subset(s,s$obstruction_motions == 0)#
clotures2 <- clotures#
ideo2 <- ideo#
clotures <- voteview_download(clotures$id)#
ideo <- voteview_download(ideo$id)#
clotures_rollcallvotes <- clotures$m#
ideo_rollcallvotes <- ideo$m#
clotures <- melt_rollcall(clotures)#
ideo <- melt_rollcall(ideo)#
clotures$yea_vote <- ifelse(clotures$vote %in% seq(1,3,1), 1, ifelse(clotures$vote %in% seq(4,6,1), 0, NA))#
clotures$nay_vote <- ifelse(clotures$vote %in% seq(1,3,1), 0, ifelse(clotures$vote %in% seq(4,6,1), 1, NA ))#
ideo$yea_vote <- ifelse(ideo$vote %in% seq(1,3,1), 1, ifelse(ideo$vote %in% seq(4,6,1), 0, NA))#
ideo$nay_vote <- ifelse(ideo$vote %in% seq(1,3,1), 0, ifelse(ideo$vote %in% seq(4,6,1), 1, NA ))#
clotures <- subset(clotures,clotures$state_abbrev!= "USA")#
ideo <- subset(ideo,ideo$state_abbrev!= "USA")#
clotures$party_code <- ifelse(clotures$party_code == 100, "D", ifelse(clotures$party_code == 200, "R", ifelse(clotures$party_code == 328, "D", ifelse(clotures$party_code == 112, "R", NA))))#
ideo$party_code <- ifelse(ideo$party_code == 100, "D", ifelse(ideo$party_code == 200, "R", ifelse(ideo$party_code == 328, "D", ifelse(ideo$party_code == 112, "R", NA))))#
clotures_unity_votes <- ddply(clotures, .(vname,party_code), summarize,  yea_votes=mean(yea_vote, na.rm = T), nay_votes =mean(nay_vote, na.rm = T))#
ideo_unity_votes <- ddply(ideo, .(vname,party_code), summarize,  yea_votes=mean(yea_vote, na.rm = T), nay_votes =mean(nay_vote, na.rm = T))#
clotures_unity_votes <- subset(clotures_unity_votes, clotures_unity_votes$party_code == "D" | clotures_unity_votes$party_code == "R")#
ideo_unity_votes <- subset(ideo_unity_votes, ideo_unity_votes$party_code == "D" | ideo_unity_votes$party_code == "R")#
clotures_unity_votes$party_yea_position <- ifelse(clotures_unity_votes$yea_votes >= 0.50, 1, 0)#
clotures_unity_votes <- reshape(clotures_unity_votes, idvar = c("vname"), v.names =c("yea_votes","nay_votes","party_yea_position"), timevar = "party_code", direction = "wide")#
clotures_unity_votes$unity_vote <- ifelse(clotures_unity_votes$yea_votes.D >= 0.50 & clotures_unity_votes$yea_votes.R <= 0.50, 1, ifelse(clotures_unity_votes$nay_votes.D >= 0.50 & clotures_unity_votes$nay_votes.R <= 0.50, 1, ifelse(clotures_unity_votes$yea_votes.R >= 0.50 & clotures_unity_votes$yea_votes.D <= 0.50, 1, ifelse(clotures_unity_votes$nay_votes.R >= 0.50 & clotures_unity_votes$nay_votes.D <= 0.50, 1, 0))))#
clotures_unity_votes2 <- clotures_unity_votes#
clotures_unity_votes <- subset(clotures_unity_votes, clotures_unity_votes$unity_vote == 1, select=c("vname","party_yea_position.D","party_yea_position.R"))#
clotures_unity_rollcallvotes <- nrow(clotures_unity_votes)#
clotures_unity_votes <- reshape(clotures_unity_votes, idvar = c("vname"), varying=c("party_yea_position.D","party_yea_position.R"), v.names=c("party_yea_position"), times=c("D","R"), direction="long")#
names(clotures_unity_votes)[names(clotures_unity_votes)=="time"] <- "party_code"#
clotures <- merge(clotures,clotures_unity_votes,by=c("vname","party_code"))#
clotures$congruence <- ifelse(clotures$yea_vote == clotures$party_yea_position, 1, ifelse(clotures$yea_vote != clotures$party_yea_position, 0, NA))#
ideo_unity_votes$party_yea_position <- ifelse(ideo_unity_votes$yea_votes >= 0.50, 1, 0)#
ideo_unity_votes <- reshape(ideo_unity_votes, idvar = c("vname"), v.names =c("yea_votes","nay_votes","party_yea_position"), timevar = "party_code", direction = "wide")#
ideo_unity_votes$unity_vote <- ifelse(ideo_unity_votes$yea_votes.D >= 0.50 & ideo_unity_votes$yea_votes.R <= 0.50, 1, ifelse(ideo_unity_votes$nay_votes.D >= 0.50 & ideo_unity_votes$nay_votes.R <= 0.50, 1, ifelse(ideo_unity_votes$yea_votes.R >= 0.50 & ideo_unity_votes$yea_votes.D <= 0.50, 1, ifelse(ideo_unity_votes$nay_votes.R >= 0.50 & ideo_unity_votes$nay_votes.D <= 0.50, 1, 0))))#
ideo_unity_votes2 <- ideo_unity_votes#
ideo_unity_votes <- subset(ideo_unity_votes, ideo_unity_votes$unity_vote == 1, select=c("vname","party_yea_position.D","party_yea_position.R"))#
ideo_unity_rollcallvotes <- nrow(ideo_unity_votes)#
ideo_unity_votes <- reshape(ideo_unity_votes, idvar = c("vname"), varying=c("party_yea_position.D","party_yea_position.R"), v.names=c("party_yea_position"), times=c("D","R"), direction="long")#
names(ideo_unity_votes)[names(ideo_unity_votes)=="time"] <- "party_code"#
ideo <- merge(ideo,ideo_unity_votes,by=c("vname","party_code"))#
ideo$congruence <- ifelse(ideo$yea_vote == ideo$party_yea_position, 1, ifelse(ideo$yea_vote != ideo$party_yea_position, 0, NA))#
clotures_party_unity_members <- ddply(clotures, .(icpsr,name,state_abbrev,party_code), summarize, member_unity=mean(congruence, na.rm = T))#
ideo_party_unity_members <- ddply(ideo, .(icpsr,name,state_abbrev,party_code), summarize, member_unity=mean(congruence, na.rm = T))#
clotures_party_unity_caucus <- ddply(clotures_party_unity_members, .(party_code), summarize, party_mean_unity=mean(member_unity, na.rm = T), party_median_unity=median(member_unity, na.rm = T), party_unity_quantile0=quantile(member_unity, probs = 0, na.rm = T), party_unity_quantile1=quantile(member_unity, probs = 0.25, na.rm = T), party_unity_quantile3=quantile(member_unity, probs = 0.75, na.rm = T), party_unity_quantile4=quantile(member_unity, probs = 1, na.rm = T))#
ideo_party_unity_caucus <- ddply(ideo_party_unity_members, .(party_code), summarize, party_mean_unity=mean(member_unity, na.rm = T), party_median_unity=median(member_unity, na.rm = T), party_unity_quantile0=quantile(member_unity, probs = 0, na.rm = T), party_unity_quantile1=quantile(member_unity, probs = 0.25, na.rm = T), party_unity_quantile3=quantile(member_unity, probs = 0.75, na.rm = T), party_unity_quantile4=quantile(member_unity, probs = 1, na.rm = T))#
#
# Party Unity in 115th Congress#
#
ideo_party_unity_members$type <- "Ideological Unity"#
clotures_party_unity_members$type <- "Procedural Unity"#
#
unity <- merge(ideo_party_unity_members,clotures_party_unity_members,by=c("icpsr","name","state_abbrev","party_code"))#
#
colnames(unity) <- c("icpsr","name","state_abbrev","party_code","ideo_unity","Ideological Unity","proced_unity","Procedural Unity")#
#
unity$lastname <- gsub(",.*$", "", unity$name)#
#
unity$state_abbrev <- paste("(",unity$state_abbrev,")")#
unity$state_abbrev <- gsub(" ","",unity$state_abbrev)#
unity$label <- paste(unity$lastname,unity$state_abbrev)#
#
unity$party_code <- factor(unity$party_code)#
myColors <- c("blue","red")#
names(myColors) <- levels(unity$party_code)#
colScale <- scale_colour_manual("",values = myColors, guide = FALSE)#
#
unity$proced_unity <- ifelse(unity$party_code == "D", 1 - unity$proced_unity, unity$proced_unity)#
unity$ideo_unity <- ifelse(unity$party_code == "D", 1 - unity$ideo_unity, unity$ideo_unity)#
plot <- ggplot(unity, aes(x = unity$proced_unity, y = unity$ideo_unity, label = label, colour=party_code)) + geom_text(size = 2, alpha = 1) + theme_bw() + scale_shape_manual(values = label) + theme(legend.position=c(0.86, 0.86), legend.key.size = unit(1.70,"line")) + scale_y_continuous(limits=c(0,1), breaks=c(0,0.25,0.50,0.75,1.0), labels=c("0.00\n Minority \nLoyalty", "0.25", "0.50", "0.75", "1.00 \n Majority \n Loyality"), "Senator Procedual Unity Score") + scale_x_continuous(breaks=c(0,0.25,0.50,0.75,1.0), labels=c("0.00\n Minority \nLoyalty", "0.25", "0.50", "0.75", "1.00 \n Majority \n Loyality"), "Senator Final Passage & Policy Votes Unity Score") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + colScale + ggtitle("Party Legislative Unity in the 115th Congress through March 20, 2017") + geom_rug(color = "gray30", alpha=.75, size = 0.25, position='jitter')#
grid.newpage()#
footnote <- "25/29 procedural votes are classified as unity votes; 50/61 of policy votes are classified as unity votes. Total N = 90 rollcall votes"
ideo_unity_votes2
ideo_unity_votes
nrow(ideo_unity_votes)
plot <- ggplot(unity, aes(x = unity$proced_unity, y = unity$ideo_unity, label = label, colour=party_code)) + geom_text(size = 2, alpha = 1) + theme_bw() + scale_shape_manual(values = label) + theme(legend.position=c(0.86, 0.86), legend.key.size = unit(1.70,"line")) + scale_y_continuous(limits=c(0,1), breaks=c(0,0.25,0.50,0.75,1.0), labels=c("0.00\n Minority \nLoyalty", "0.25", "0.50", "0.75", "1.00 \n Majority \n Loyality"), "Senator Procedual Unity Score") + scale_x_continuous(breaks=c(0,0.25,0.50,0.75,1.0), labels=c("0.00\n Minority \nLoyalty", "0.25", "0.50", "0.75", "1.00 \n Majority \n Loyality"), "Senator Final Passage & Policy Votes Unity Score") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + colScale + ggtitle("Party Legislative Unity in the 115th Congress through March 20, 2017") + geom_rug(color = "gray30", alpha=.75, size = 0.25, position='jitter')#
grid.newpage()#
footnote <- "25/29 procedural votes are classified as unity votes; 50/61 of policy votes are classified as unity votes. Total N = 90 rollcall votes"#
g <- arrangeGrob(plot, bottom = textGrob(footnote, x = 0.015, y = 0.55, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 9, col = "black"))) #
grid.draw(g)
clotures_unity_votes
nrow(clotures_unity_votes)
clotures
library(foreign)#
library(MASS)#
library(UsingR)#
library(nlme)#
library(Zelig)#
library(lmtest)#
library(sandwich)#
library(car)#
library(directlabels)#
library(bbmle)#
library(maxLik)#
library(ggplot2)#
library(RGraphics)#
library(lattice)#
library(latticeExtra)#
library(VGAM)#
library(mvtnorm)#
library(ordinal)#
library(nnet)#
library(sampleSelection)#
library(pscl)#
library(lmtest)#
library(aod)#
library(scales)#
library(gridExtra)#
library(reshape2)#
library(network)#
library(Matrix)#
library(igraph)#
library(gmodels)#
library(pastecs)#
#library(dplyr)#
library(plyr)#
library(arm)#
library(coefplot)#
library(psych)#
library(descr)#
library(data.table)#
library(multiwayvcov)#
library(compositions)#
library(rms)#
library(effects)#
#
library(Rvoteview)#
#
s <- voteview_search("", chamber = "Senate", congress=115)#
x <- c("Cloture", "Debate", "Table", "Recess","Attendance","Proceed")#
s$obstruction_motions <- grepl(paste(x, collapse = "|"), s$question)#
s$obstruction_motions <- ifelse(s$obstruction_motions == TRUE, 1,0)#
clotures <- subset(s,s$obstruction_motions == 1)#
ideo <- subset(s,s$obstruction_motions == 0)#
clotures2 <- clotures#
ideo2 <- ideo#
clotures <- voteview_download(clotures$id)#
ideo <- voteview_download(ideo$id)#
clotures_rollcallvotes <- clotures$m#
ideo_rollcallvotes <- ideo$m#
clotures <- melt_rollcall(clotures)#
ideo <- melt_rollcall(ideo)#
clotures$yea_vote <- ifelse(clotures$vote %in% seq(1,3,1), 1, ifelse(clotures$vote %in% seq(4,6,1), 0, NA))#
clotures$nay_vote <- ifelse(clotures$vote %in% seq(1,3,1), 0, ifelse(clotures$vote %in% seq(4,6,1), 1, NA ))#
ideo$yea_vote <- ifelse(ideo$vote %in% seq(1,3,1), 1, ifelse(ideo$vote %in% seq(4,6,1), 0, NA))#
ideo$nay_vote <- ifelse(ideo$vote %in% seq(1,3,1), 0, ifelse(ideo$vote %in% seq(4,6,1), 1, NA ))#
clotures <- subset(clotures,clotures$state_abbrev!= "USA")#
ideo <- subset(ideo,ideo$state_abbrev!= "USA")#
clotures$party_code <- ifelse(clotures$party_code == 100, "D", ifelse(clotures$party_code == 200, "R", ifelse(clotures$party_code == 328, "D", ifelse(clotures$party_code == 112, "R", NA))))#
ideo$party_code <- ifelse(ideo$party_code == 100, "D", ifelse(ideo$party_code == 200, "R", ifelse(ideo$party_code == 328, "D", ifelse(ideo$party_code == 112, "R", NA))))#
clotures_unity_votes <- ddply(clotures, .(vname,party_code), summarize,  yea_votes=mean(yea_vote, na.rm = T), nay_votes =mean(nay_vote, na.rm = T))#
ideo_unity_votes <- ddply(ideo, .(vname,party_code), summarize,  yea_votes=mean(yea_vote, na.rm = T), nay_votes =mean(nay_vote, na.rm = T))#
clotures_unity_votes <- subset(clotures_unity_votes, clotures_unity_votes$party_code == "D" | clotures_unity_votes$party_code == "R")#
ideo_unity_votes <- subset(ideo_unity_votes, ideo_unity_votes$party_code == "D" | ideo_unity_votes$party_code == "R")#
clotures_unity_votes$party_yea_position <- ifelse(clotures_unity_votes$yea_votes >= 0.50, 1, 0)#
clotures_unity_votes <- reshape(clotures_unity_votes, idvar = c("vname"), v.names =c("yea_votes","nay_votes","party_yea_position"), timevar = "party_code", direction = "wide")#
clotures_unity_votes$unity_vote <- ifelse(clotures_unity_votes$yea_votes.D >= 0.50 & clotures_unity_votes$yea_votes.R <= 0.50, 1, ifelse(clotures_unity_votes$nay_votes.D >= 0.50 & clotures_unity_votes$nay_votes.R <= 0.50, 1, ifelse(clotures_unity_votes$yea_votes.R >= 0.50 & clotures_unity_votes$yea_votes.D <= 0.50, 1, ifelse(clotures_unity_votes$nay_votes.R >= 0.50 & clotures_unity_votes$nay_votes.D <= 0.50, 1, 0))))#
clotures_unity_votes2 <- clotures_unity_votes#
clotures_unity_votes <- subset(clotures_unity_votes, clotures_unity_votes$unity_vote == 1, select=c("vname","party_yea_position.D","party_yea_position.R"))#
clotures_unity_rollcallvotes <- nrow(clotures_unity_votes)#
clotures_unity_votes <- reshape(clotures_unity_votes, idvar = c("vname"), varying=c("party_yea_position.D","party_yea_position.R"), v.names=c("party_yea_position"), times=c("D","R"), direction="long")#
names(clotures_unity_votes)[names(clotures_unity_votes)=="time"] <- "party_code"#
clotures <- merge(clotures,clotures_unity_votes,by=c("vname","party_code"))#
clotures$congruence <- ifelse(clotures$yea_vote == clotures$party_yea_position, 1, ifelse(clotures$yea_vote != clotures$party_yea_position, 0, NA))#
ideo_unity_votes$party_yea_position <- ifelse(ideo_unity_votes$yea_votes >= 0.50, 1, 0)#
ideo_unity_votes <- reshape(ideo_unity_votes, idvar = c("vname"), v.names =c("yea_votes","nay_votes","party_yea_position"), timevar = "party_code", direction = "wide")#
ideo_unity_votes$unity_vote <- ifelse(ideo_unity_votes$yea_votes.D >= 0.50 & ideo_unity_votes$yea_votes.R <= 0.50, 1, ifelse(ideo_unity_votes$nay_votes.D >= 0.50 & ideo_unity_votes$nay_votes.R <= 0.50, 1, ifelse(ideo_unity_votes$yea_votes.R >= 0.50 & ideo_unity_votes$yea_votes.D <= 0.50, 1, ifelse(ideo_unity_votes$nay_votes.R >= 0.50 & ideo_unity_votes$nay_votes.D <= 0.50, 1, 0))))#
ideo_unity_votes2 <- ideo_unity_votes#
ideo_unity_votes <- subset(ideo_unity_votes, ideo_unity_votes$unity_vote == 1, select=c("vname","party_yea_position.D","party_yea_position.R"))#
ideo_unity_rollcallvotes <- nrow(ideo_unity_votes)#
ideo_unity_votes <- reshape(ideo_unity_votes, idvar = c("vname"), varying=c("party_yea_position.D","party_yea_position.R"), v.names=c("party_yea_position"), times=c("D","R"), direction="long")#
names(ideo_unity_votes)[names(ideo_unity_votes)=="time"] <- "party_code"#
ideo <- merge(ideo,ideo_unity_votes,by=c("vname","party_code"))#
ideo$congruence <- ifelse(ideo$yea_vote == ideo$party_yea_position, 1, ifelse(ideo$yea_vote != ideo$party_yea_position, 0, NA))#
clotures_party_unity_members <- ddply(clotures, .(icpsr,name,state_abbrev,party_code), summarize, member_unity=mean(congruence, na.rm = T))#
ideo_party_unity_members <- ddply(ideo, .(icpsr,name,state_abbrev,party_code), summarize, member_unity=mean(congruence, na.rm = T))#
clotures_party_unity_caucus <- ddply(clotures_party_unity_members, .(party_code), summarize, party_mean_unity=mean(member_unity, na.rm = T), party_median_unity=median(member_unity, na.rm = T), party_unity_quantile0=quantile(member_unity, probs = 0, na.rm = T), party_unity_quantile1=quantile(member_unity, probs = 0.25, na.rm = T), party_unity_quantile3=quantile(member_unity, probs = 0.75, na.rm = T), party_unity_quantile4=quantile(member_unity, probs = 1, na.rm = T))#
ideo_party_unity_caucus <- ddply(ideo_party_unity_members, .(party_code), summarize, party_mean_unity=mean(member_unity, na.rm = T), party_median_unity=median(member_unity, na.rm = T), party_unity_quantile0=quantile(member_unity, probs = 0, na.rm = T), party_unity_quantile1=quantile(member_unity, probs = 0.25, na.rm = T), party_unity_quantile3=quantile(member_unity, probs = 0.75, na.rm = T), party_unity_quantile4=quantile(member_unity, probs = 1, na.rm = T))#
#
# Party Unity in 115th Congress#
#
ideo_party_unity_members$type <- "Ideological Unity"#
clotures_party_unity_members$type <- "Procedural Unity"#
#
unity <- merge(ideo_party_unity_members,clotures_party_unity_members,by=c("icpsr","name","state_abbrev","party_code"))#
#
colnames(unity) <- c("icpsr","name","state_abbrev","party_code","ideo_unity","Ideological Unity","proced_unity","Procedural Unity")#
#
unity$lastname <- gsub(",.*$", "", unity$name)#
#
unity$state_abbrev <- paste("(",unity$state_abbrev,")")#
unity$state_abbrev <- gsub(" ","",unity$state_abbrev)#
unity$label <- paste(unity$lastname,unity$state_abbrev)#
#
unity$party_code <- factor(unity$party_code)#
myColors <- c("blue","red")#
names(myColors) <- levels(unity$party_code)#
colScale <- scale_colour_manual("",values = myColors, guide = FALSE)#
#
unity$proced_unity <- ifelse(unity$party_code == "D", 1 - unity$proced_unity, unity$proced_unity)#
unity$ideo_unity <- ifelse(unity$party_code == "D", 1 - unity$ideo_unity, unity$ideo_unity)#
plot <- ggplot(unity, aes(x = unity$proced_unity, y = unity$ideo_unity, label = label, colour=party_code)) + geom_text(size = 2, alpha = 1) + theme_bw() + scale_shape_manual(values = label) + theme(legend.position=c(0.86, 0.86), legend.key.size = unit(1.70,"line")) + scale_y_continuous(limits=c(0,1), breaks=c(0,0.25,0.50,0.75,1.0), labels=c("0.00\n Minority \nLoyalty", "0.25", "0.50", "0.75", "1.00 \n Majority \n Loyality"), "Senator Procedual Unity Score") + scale_x_continuous(breaks=c(0,0.25,0.50,0.75,1.0), labels=c("0.00\n Minority \nLoyalty", "0.25", "0.50", "0.75", "1.00 \n Majority \n Loyality"), "Senator Final Passage & Policy Votes Unity Score") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + colScale + ggtitle("Party Legislative Unity in the 115th Congress through May 30, 2017") + geom_rug(color = "gray30", alpha=.75, size = 0.25, position='jitter')#
grid.newpage()#
footnote <- "38/47 procedural votes are classified as unity votes; 68/90 of policy votes are classified as unity votes. Total N = 137 rollcall votes"#
g <- arrangeGrob(plot, bottom = textGrob(footnote, x = 0.015, y = 0.55, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 9, col = "black"))) #
grid.draw(g)
library(foreign)#
library(MASS)#
library(UsingR)#
library(nlme)#
library(Zelig)#
library(lmtest)#
library(sandwich)#
library(car)#
library(directlabels)#
library(bbmle)#
library(maxLik)#
library(ggplot2)#
library(RGraphics)#
library(lattice)#
library(latticeExtra)#
library(VGAM)#
library(mvtnorm)#
library(ordinal)#
library(nnet)#
library(sampleSelection)#
library(pscl)#
library(lmtest)#
library(aod)#
library(scales)#
library(gridExtra)#
library(reshape2)#
library(network)#
library(Matrix)#
library(igraph)#
library(gmodels)#
library(pastecs)#
library(dplyr)#
library(plyr)#
library(arm)#
library(coefplot)#
library(psych)#
library(descr)#
library(data.table)#
library(multiwayvcov)#
library(compositions)#
library(rms)#
library(effects)#
#
library(readstata13)#
library(xlsx)#
#
options(scipen=999)#
#
# Impeachment Support by partisanship on Twitter#
#
nes <- read.dta13(paste("/Users/carlosalgara/Desktop/carlos_school/PhD_UC Davis/Research/Data/American Politics/ANES_Individual_Years/Data/NES",1974,".dta",sep=""),convert.factors = T, convert.underscore = FALSE, encoding ="UTF-8")#
#
freq(nes$V742162)#
freq(nes$V742204)#
#
nes$impeach <- ifelse(nes$V742162 == "1. APPROVE", 1, ifelse(nes$V742162 == "5. DISAPPROVE", 0, NA))#
nes$impeach <- as.numeric(nes$impeach)#
#
nes$pid <- as.character(nes$V742204)#
na <- data.frame(freq(nes$V742204))#
na$values <- rownames(na)#
rownames(na) <- NULL#
nes$pid[nes$pid %in% as.character(na[1,3])] <- "Strong Democrat"#
nes$pid[nes$pid %in% as.character(na[2,3])] <- "Weak Democrat"#
nes$pid[nes$pid %in% as.character(na[3,3])] <- "Lean Democrat"#
nes$pid[nes$pid %in% as.character(na[4,3])] <- "Independent"#
nes$pid[nes$pid %in% as.character(na[5,3])] <- "Lean Republican"#
nes$pid[nes$pid %in% as.character(na[6,3])] <- "Weak Republican"#
nes$pid[nes$pid %in% as.character(na[7,3])] <- "Strong Republican"#
nes$pid[nes$pid %in% as.character(na[8:10,3])] <- NA#
#
nes$pid <- factor(nes$pid,levels=c("Strong Republican","Weak Republican","Lean Republican","Independent","Lean Democrat","Weak Democrat","Strong Democrat"))#
#
summary(model <- glm(impeach ~ pid, data=nes, family = binomial(link = "logit")))#
coeftest(model, vcov = vcovHC(model, "HC3"))#
#
plot(predict <- effect("pid", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(vcov.=vcovHC(model, "HC3")))) # Plot the result#
predict <- data.frame(predict)#
#
predict$question <- "Question: Did you approve or disapprove of the House Judiciary Committee's Decision to Impeach Richard Nixon?"#
predict$pid <- ifelse(predict$pid == "Strong Republican", "Strong \nRepublican", ifelse(predict$pid == "Weak Republican", "Weak \nRepublican", ifelse(predict$pid == "Lean Republican", "Lean \nRepublican", ifelse(predict$pid == "Independent", "Independent", ifelse(predict$pid == "Strong Democrat", "Strong \nDemocrat", ifelse(predict$pid == "Weak Democrat", "Weak \nDemocrat", ifelse(predict$pid == "Lean Democrat", "Lean \nDemocrat", NA)))))))#
#
myColors <- c("firebrick1","firebrick2","firebrick3","purple","dodgerblue3","dodgerblue2","dodgerblue1")#
names(myColors) <- levels(predict$pid)#
colScale <- scale_colour_manual("",values = myColors)#
#
myShapes <- c(17,17,17,18,16,16,16)#
names(myShapes) <- levels(predict$cong_approval_dich)#
colShape <- scale_shape_manual("",values=myShapes)#
#
predict$pid <- factor(predict$pid,levels=c("Strong \nRepublican","Weak \nRepublican", "Lean \nRepublican", "Independent", "Lean \nDemocrat", "Weak \nDemocrat", "Strong \nDemocrat"))#
#
plot <- ggplot(predict, aes(x=pid, y=fit, ymin=lower, ymax=upper, colour = pid)) + geom_pointrange() + colScale + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_y_continuous(limits=c(0.20,1.0), breaks=seq(0.20,1.0,0.10), "Predicted Probability of Approving of Committee Impeachment") + facet_wrap(~question) + scale_x_discrete("") + theme(legend.position="none") + geom_hline(yintercept = 0.50, colour = gray(1/2), lty = 2) + ggtitle("Probability of Approving of Impeachment Action against President Nixon by Partisanship, 1974")#
grid.newpage()#
footnote <- "Carlos Algara: @algaraca / Data: 1974 American National Election Study (ANES)"#
footnote2 <- "Probabilities estimated from bivariate logistic regression model. Confidence intervals estimated with Huber-White Robust standard errors."#
g <- arrangeGrob(plot, right = textGrob(footnote, x = 0, hjust = 0.5, vjust= 1, rot = 90, gp = gpar(fontface = "italic", fontsize = 12, col = "blue")), bottom = textGrob(footnote2, x = 0.015, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 9, col = "black")))#
grid.draw(g)#
#
myColors <- c("firebrick3","firebrick2","firebrick1","purple","dodgerblue1","dodgerblue2","dodgerblue3")#
names(myColors) <- levels(predict$pid)#
colFill <- scale_fill_manual("",values = myColors)#
#
plot <- ggplot(predict, aes(x=pid, y=fit, ymin=lower, ymax=upper, fill = pid)) + geom_bar(stat="identity") + colFill + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_y_continuous(limits=c(0,1.0), breaks=seq(0.10,1.0,0.10), expand = c(0, 0), "Predicted Probability of Approving of Committee Impeachment") + facet_wrap(~question) + scale_x_discrete("") + theme(legend.position="none") + geom_hline(yintercept = 0.50, colour = gray(1/2), lty = 2) + ggtitle("Probability of Approving of Impeachment Action against President Nixon by Partisanship, 1974")#
grid.newpage()#
footnote2 <- "Probabilities estimated from bivariate logistic regression model. Confidence intervals estimated with Huber-White Robust standard errors."#
g <- arrangeGrob(plot, bottom = textGrob(footnote2, x = 0.015, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 9, col = "black")))#
grid.draw(g)
plot <- ggplot(predict, aes(x=pid, y=fit, ymin=lower, ymax=upper, colour = pid)) + geom_pointrange() + colScale + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_y_continuous(limits=c(0.20,1.0), breaks=seq(0.20,1.0,0.10), "Predicted Probability of Approving of Committee Impeachment") + facet_wrap(~question) + scale_x_discrete("") + theme(legend.position="none") + geom_hline(yintercept = 0.50, colour = gray(1/2), lty = 2) + ggtitle("Probability of Approving of Impeachment Action against President Nixon by Partisanship, 1974")#
grid.newpage()#
footnote2 <- "Probabilities estimated from bivariate logistic regression model. Confidence intervals estimated with Huber-White Robust standard errors."#
g <- arrangeGrob(plot, bottom = textGrob(footnote2, x = 0.015, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 9, col = "black")))#
grid.draw(g)
library(foreign)#
library(MASS)#
library(UsingR)#
library(nlme)#
library(Zelig)#
library(lmtest)#
library(sandwich)#
library(car)#
library(directlabels)#
library(bbmle)#
library(maxLik)#
library(ggplot2)#
library(RGraphics)#
library(lattice)#
library(latticeExtra)#
library(VGAM)#
library(mvtnorm)#
library(ordinal)#
library(nnet)#
library(sampleSelection)#
library(pscl)#
library(lmtest)#
library(aod)#
library(scales)#
library(gridExtra)#
library(reshape2)#
library(network)#
library(Matrix)#
library(igraph)#
library(gmodels)#
library(pastecs)#
library(dplyr)#
library(plyr)#
library(arm)#
library(coefplot)#
library(psych)#
library(descr)#
library(data.table)#
library(multiwayvcov)#
library(compositions)#
library(rms)#
library(effects)#
#
library(readstata13)#
library(xlsx)#
#
options(scipen=999)#
#
# Impeachment Support by partisanship on Twitter#
#
nes1998 <- read.dta13(paste("/Users/carlosalgara/Desktop/carlos_school/PhD_UC Davis/Research/Data/American Politics/ANES_Individual_Years/Data/NES",1998,".dta",sep=""),convert.factors = T, convert.underscore = FALSE, encoding ="UTF-8")#
#
nes1998$impeach <- ifelse(nes1998$V980535 == "1. Approve", 1, ifelse(nes1998$V980535 == "5. Disapprove", 0, NA))#
nes1998$impeach <- as.numeric(nes1998$impeach)#
#
nes1998$pid <- as.character(nes1998$V980339)#
na <- data.frame(freq(nes1998$V980339))#
na$values <- rownames(na)#
rownames(na) <- NULL#
nes1998$pid[nes1998$pid %in% as.character(na[1,3])] <- "Strong Democrat"#
nes1998$pid[nes1998$pid %in% as.character(na[2,3])] <- "Weak Democrat"#
nes1998$pid[nes1998$pid %in% as.character(na[3,3])] <- "Lean Democrat"#
nes1998$pid[nes1998$pid %in% as.character(na[4,3])] <- "Independent"#
nes1998$pid[nes1998$pid %in% as.character(na[5,3])] <- "Lean Republican"#
nes1998$pid[nes1998$pid %in% as.character(na[6,3])] <- "Weak Republican"#
nes1998$pid[nes1998$pid %in% as.character(na[7,3])] <- "Strong Republican"#
nes1998$pid[nes1998$pid %in% as.character(na[8:10,3])] <- NA#
#
nes1998$pid <- factor(nes1998$pid,levels=c("Strong Republican","Weak Republican","Lean Republican","Independent","Lean Democrat","Weak Democrat","Strong Democrat"))#
#
summary(model <- glm(impeach ~ pid, data=nes1998, family = binomial(link = "logit")))#
coeftest(model, vcov = vcovHC(model, "HC3"))#
#
plot(predict <- effect("pid", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(vcov.=vcovHC(model, "HC3")))) # Plot the result#
predict <- data.frame(predict)#
#
predict$question <- "Question: If President Clinton does not resign, should he be impeached?"#
predict$pid <- ifelse(predict$pid == "Strong Republican", "Strong \nRepublican", ifelse(predict$pid == "Weak Republican", "Weak \nRepublican", ifelse(predict$pid == "Lean Republican", "Lean \nRepublican", ifelse(predict$pid == "Independent", "Independent", ifelse(predict$pid == "Strong Democrat", "Strong \nDemocrat", ifelse(predict$pid == "Weak Democrat", "Weak \nDemocrat", ifelse(predict$pid == "Lean Democrat", "Lean \nDemocrat", NA)))))))#
#
myColors <- c("firebrick1","firebrick2","firebrick3","purple","dodgerblue3","dodgerblue2","dodgerblue1")#
names(myColors) <- levels(predict$pid)#
colScale <- scale_colour_manual("",values = myColors)#
#
myShapes <- c(17,17,17,18,16,16,16)#
names(myShapes) <- levels(predict$cong_approval_dich)#
colShape <- scale_shape_manual("",values=myShapes)#
#
predict$pid <- factor(predict$pid,levels=c("Strong \nRepublican","Weak \nRepublican", "Lean \nRepublican", "Independent", "Lean \nDemocrat", "Weak \nDemocrat", "Strong \nDemocrat"))#
#
plot <- ggplot(predict, aes(x=pid, y=fit, ymin=lower, ymax=upper, colour = pid)) + geom_pointrange() + colScale + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_y_continuous(limits=c(0,0.604), breaks=seq(0,0.60,0.10), "Predicted Probability of Approving of Impeachment") + facet_wrap(~question) + scale_x_discrete("") + theme(legend.position="none") + geom_hline(yintercept = 0.50, colour = gray(1/2), lty = 2) + ggtitle("Probability of Approving of Impeachment Action against President Clinton by Partisanship, 1998")#
grid.newpage()#
footnote <- "Carlos Algara: @algaraca / Data: 1998 American National Election Study (ANES)"#
footnote2 <- "Probabilities estimated from bivariate logistic regression model. Confidence intervals estimated with Huber-White Robust standard errors."#
g <- arrangeGrob(plot, right = textGrob(footnote, x = 0, hjust = 0.5, vjust= 1, rot = 90, gp = gpar(fontface = "italic", fontsize = 12, col = "blue")), bottom = textGrob(footnote2, x = 0.015, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 9, col = "black")))#
grid.draw(g)#
#
myColors <- c("firebrick3","firebrick2","firebrick1","purple","dodgerblue1","dodgerblue2","dodgerblue3")#
names(myColors) <- levels(predict$pid)#
colFill <- scale_fill_manual("",values = myColors)#
#
plot <- ggplot(predict, aes(x=pid, y=fit, ymin=lower, ymax=upper, fill = pid)) + geom_bar(stat="identity") + colFill + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_y_continuous(limits=c(0,0.65), breaks=seq(0.10,0.60,0.10), expand = c(0,0), "Predicted Probability of Approving of Impeachment") + facet_wrap(~question) + scale_x_discrete("") + theme(legend.position="none") + geom_hline(yintercept = 0.50, colour = gray(1/2), lty = 2) + ggtitle("Probability of Approving of Impeachment Action against President Clinton by Partisanship, 1998")#
grid.newpage()#
footnote <- "Carlos Algara: @algaraca / Data: 1998 American National Election Study (ANES)"#
footnote2 <- "Probabilities estimated from bivariate logistic regression model. Confidence intervals estimated with Huber-White Robust standard errors."#
g <- arrangeGrob(plot, right = textGrob(footnote, x = 0, hjust = 0.5, vjust= 1, rot = 90, gp = gpar(fontface = "italic", fontsize = 12, col = "blue")), bottom = textGrob(footnote2, x = 0.015, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 9, col = "black")))#
grid.draw(g)
plot <- ggplot(predict, aes(x=pid, y=fit, ymin=lower, ymax=upper, fill = pid)) + geom_bar(stat="identity") + colFill + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_y_continuous(limits=c(0,0.65), breaks=seq(0.10,0.60,0.10), expand = c(0,0), "Predicted Probability of Approving of Impeachment") + facet_wrap(~question) + scale_x_discrete("") + theme(legend.position="none") + geom_hline(yintercept = 0.50, colour = gray(1/2), lty = 2) + ggtitle("Probability of Approving of Impeachment Action against President Clinton by Partisanship, 1998")#
grid.newpage()#
footnote <- "Data: 1998 American National Election Study (ANES)"#
footnote2 <- "Probabilities estimated from bivariate logistic regression model. Confidence intervals estimated with Huber-White Robust standard errors."#
g <- arrangeGrob(plot, right = textGrob(footnote, x = 0, hjust = 0.5, vjust= 1, rot = 90, gp = gpar(fontface = "italic", fontsize = 12, col = "blue")), bottom = textGrob(footnote2, x = 0.015, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 9, col = "black")))#
grid.draw(g)
library(foreign)#
library(MASS)#
library(UsingR)#
library(nlme)#
library(Zelig)#
library(lmtest)#
library(sandwich)#
library(car)#
library(directlabels)#
library(bbmle)#
library(maxLik)#
library(ggplot2)#
library(RGraphics)#
library(lattice)#
library(latticeExtra)#
library(VGAM)#
library(mvtnorm)#
library(ordinal)#
library(nnet)#
library(sampleSelection)#
library(pscl)#
library(lmtest)#
library(aod)#
library(scales)#
library(gridExtra)#
library(reshape2)#
library(network)#
library(Matrix)#
library(igraph)#
library(gmodels)#
library(pastecs)#
library(dplyr)#
library(plyr)#
library(arm)#
library(coefplot)#
library(psych)#
library(descr)#
library(data.table)#
library(multiwayvcov)#
library(compositions)#
library(rms)#
library(effects)#
#
library(readstata13)#
library(xlsx)#
#
options(scipen=999)#
#
# Impeachment Support by partisanship on Twitter#
#
nes <- read.dta13(paste("/Users/carlosalgara/Desktop/carlos_school/PhD_UC Davis/Research/Data/American Politics/ANES_Individual_Years/Data/NES",1974,".dta",sep=""),convert.factors = T, convert.underscore = FALSE, encoding ="UTF-8")#
#
freq(nes$V742162)#
freq(nes$V742204)#
#
nes$impeach <- ifelse(nes$V742162 == "1. APPROVE", 1, ifelse(nes$V742162 == "5. DISAPPROVE", 0, NA))#
nes$impeach <- as.numeric(nes$impeach)#
#
nes$pid <- as.character(nes$V742204)#
na <- data.frame(freq(nes$V742204))#
na$values <- rownames(na)#
rownames(na) <- NULL#
nes$pid[nes$pid %in% as.character(na[1,3])] <- "Strong Democrat"#
nes$pid[nes$pid %in% as.character(na[2,3])] <- "Weak Democrat"#
nes$pid[nes$pid %in% as.character(na[3,3])] <- "Lean Democrat"#
nes$pid[nes$pid %in% as.character(na[4,3])] <- "Independent"#
nes$pid[nes$pid %in% as.character(na[5,3])] <- "Lean Republican"#
nes$pid[nes$pid %in% as.character(na[6,3])] <- "Weak Republican"#
nes$pid[nes$pid %in% as.character(na[7,3])] <- "Strong Republican"#
nes$pid[nes$pid %in% as.character(na[8:10,3])] <- NA#
#
nes$pid <- factor(nes$pid,levels=c("Strong Republican","Weak Republican","Lean Republican","Independent","Lean Democrat","Weak Democrat","Strong Democrat"))#
#
summary(model <- glm(impeach ~ pid, data=nes, family = binomial(link = "logit")))#
coeftest(model, vcov = vcovHC(model, "HC3"))#
#
plot(predict <- effect("pid", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(vcov.=vcovHC(model, "HC3")))) # Plot the result#
predict <- data.frame(predict)#
#
predict$question <- "Question: Did you approve or disapprove of the House Judiciary Committee's Decision to Impeach Richard Nixon?"#
predict$pid <- ifelse(predict$pid == "Strong Republican", "Strong \nRepublican", ifelse(predict$pid == "Weak Republican", "Weak \nRepublican", ifelse(predict$pid == "Lean Republican", "Lean \nRepublican", ifelse(predict$pid == "Independent", "Independent", ifelse(predict$pid == "Strong Democrat", "Strong \nDemocrat", ifelse(predict$pid == "Weak Democrat", "Weak \nDemocrat", ifelse(predict$pid == "Lean Democrat", "Lean \nDemocrat", NA)))))))#
#
myColors <- c("firebrick1","firebrick2","firebrick3","purple","dodgerblue3","dodgerblue2","dodgerblue1")#
names(myColors) <- levels(predict$pid)#
colScale <- scale_colour_manual("",values = myColors)#
#
myShapes <- c(17,17,17,18,16,16,16)#
names(myShapes) <- levels(predict$cong_approval_dich)#
colShape <- scale_shape_manual("",values=myShapes)#
#
predict$pid <- factor(predict$pid,levels=c("Strong \nRepublican","Weak \nRepublican", "Lean \nRepublican", "Independent", "Lean \nDemocrat", "Weak \nDemocrat", "Strong \nDemocrat"))#
#
plot <- ggplot(predict, aes(x=pid, y=fit, ymin=lower, ymax=upper, colour = pid)) + geom_pointrange() + colScale + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_y_continuous(limits=c(0.20,1.0), breaks=seq(0.20,1.0,0.10), "Predicted Probability of Approving of Committee Impeachment") + facet_wrap(~question) + scale_x_discrete("") + theme(legend.position="none") + geom_hline(yintercept = 0.50, colour = gray(1/2), lty = 2) + ggtitle("Probability of Approving of Impeachment Action against President Nixon by Partisanship, 1974")#
grid.newpage()#
footnote <- "Carlos Algara: @algaraca / Data: 1974 American National Election Study (ANES)"#
footnote2 <- "Probabilities estimated from bivariate logistic regression model. Confidence intervals estimated with Huber-White Robust standard errors."#
g <- arrangeGrob(plot, right = textGrob(footnote, x = 0, hjust = 0.5, vjust= 1, rot = 90, gp = gpar(fontface = "italic", fontsize = 12, col = "blue")), bottom = textGrob(footnote2, x = 0.015, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 9, col = "black")))#
grid.draw(g)#
#
myColors <- c("firebrick3","firebrick2","firebrick1","purple","dodgerblue1","dodgerblue2","dodgerblue3")#
names(myColors) <- levels(predict$pid)#
colFill <- scale_fill_manual("",values = myColors)#
#
plot <- ggplot(predict, aes(x=pid, y=fit, ymin=lower, ymax=upper, fill = pid)) + geom_bar(stat="identity") + colFill + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_y_continuous(limits=c(0,1.0), breaks=seq(0.10,1.0,0.10), expand = c(0, 0), "Predicted Probability of Approving of Committee Impeachment") + facet_wrap(~question) + scale_x_discrete("") + theme(legend.position="none") + geom_hline(yintercept = 0.50, colour = gray(1/2), lty = 2) + ggtitle("Probability of Approving of Impeachment Action against President Nixon by Partisanship, 1974")#
grid.newpage()#
footnote <- "Data: 1974 American National Election Study (ANES)"#
footnote2 <- "Probabilities estimated from bivariate logistic regression model. Confidence intervals estimated with Huber-White Robust standard errors."#
g <- arrangeGrob(plot, right = textGrob(footnote, x = 0, hjust = 0.5, vjust= 1, rot = 90, gp = gpar(fontface = "italic", fontsize = 12, col = "blue")), bottom = textGrob(footnote2, x = 0.015, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 9, col = "black")))#
grid.draw(g)
library(foreign)#
library(MASS)#
library(UsingR)#
library(nlme)#
library(Zelig)#
library(lmtest)#
library(sandwich)#
library(car)#
library(directlabels)#
library(bbmle)#
library(maxLik)#
library(ggplot2)#
library(RGraphics)#
library(lattice)#
library(latticeExtra)#
library(VGAM)#
library(mvtnorm)#
library(ordinal)#
library(nnet)#
library(sampleSelection)#
library(pscl)#
library(lmtest)#
library(aod)#
library(scales)#
library(gridExtra)#
library(reshape2)#
library(network)#
library(Matrix)#
library(igraph)#
library(gmodels)#
library(pastecs)#
#library(dplyr)#
library(plyr)#
library(arm)#
library(coefplot)#
library(psych)#
library(descr)#
library(data.table)#
library(multiwayvcov)#
library(compositions)#
library(effects)#
library(grid)#
library(gridExtra)#
library(rms)#
#
library(readstata13)#
cces <- read.dta13("/Users/carlosalgara/Dropbox/CCES2016_Common_original/CCES2016.dta",convert.factors=F)#
#
cces$self_ideo <- cces$CC16_340a#
cces$self_ideo[cces$self_ideo == 8] <- NA #
cces$self_ideo <- cces$self_ideo - 4#
#
cces$dem_ideo <- cces$CC16_340n #
cces$dem_ideo[cces$dem_ideo == 8] <- NA #
cces$dem_ideo <- cces$dem_ideo - 4#
#
cces$rep_ideo <- cces$CC16_340o#
cces$rep_ideo[cces$rep_ideo == 8] <- NA #
cces$rep_ideo <- cces$rep_ideo - 4#
#
cces$cd_pre <- as.numeric(cces$cdid113)#
cces$cd_post <- as.numeric(cces$cdid115_post)#
cor(cces$cd_pre, cces$cd_post, use="complete.obs", method="pearson")#
#
cces$cd <- factor(cces$cdid115_post)#
cces$state <- as.character(cces$inputstate_post)#
#
#######
cces$state[cces$state=="1"] <- "AL"#
cces$state[cces$state=="2"] <- "AK"#
cces$state[cces$state=="4"] <- "AZ"#
cces$state[cces$state=="5"] <- "AR"#
cces$state[cces$state=="6"] <- "CA"#
cces$state[cces$state=="8"] <- "CO"#
cces$state[cces$state=="9"] <- "CT"#
cces$state[cces$state=="10"] <- "DE"#
cces$state[cces$state=="12"] <- "FL"#
cces$state[cces$state=="13"] <- "GA"#
cces$state[cces$state=="15"] <- "HI"#
cces$state[cces$state=="16"] <- "ID"#
cces$state[cces$state=="17"] <- "IL"#
cces$state[cces$state=="18"] <- "IN"#
cces$state[cces$state=="19"] <- "IA"#
cces$state[cces$state=="20"] <- "KS"#
cces$state[cces$state=="21"] <- "KY"#
cces$state[cces$state=="22"] <- "LA"#
cces$state[cces$state=="23"] <- "ME"#
cces$state[cces$state=="24"] <- "MD"#
cces$state[cces$state=="25"] <- "MA"#
cces$state[cces$state=="26"] <- "MI"#
cces$state[cces$state=="27"] <- "MN"#
cces$state[cces$state=="28"] <- "MS"#
cces$state[cces$state=="29"] <- "MO"#
cces$state[cces$state=="30"] <- "MT"#
cces$state[cces$state=="31"] <- "NE"#
cces$state[cces$state=="32"] <- "NV"#
cces$state[cces$state=="33"] <- "NH"#
cces$state[cces$state=="34"] <- "NJ"#
cces$state[cces$state=="35"] <- "NM"#
cces$state[cces$state=="36"] <- "NY"#
cces$state[cces$state=="37"] <- "NC"#
cces$state[cces$state=="38"] <- "ND"#
cces$state[cces$state=="39"] <- "OH"#
cces$state[cces$state=="40"] <- "OK"#
cces$state[cces$state=="41"] <- "OR"#
cces$state[cces$state=="42"] <- "PA"#
cces$state[cces$state=="44"] <- "RI"#
cces$state[cces$state=="45"] <- "SC"#
cces$state[cces$state=="46"] <- "SD"#
cces$state[cces$state=="47"] <- "TN"#
cces$state[cces$state=="48"] <- "TX"#
cces$state[cces$state=="49"] <- "UT"#
cces$state[cces$state=="50"] <- "VT"#
cces$state[cces$state=="51"] <- "VA"#
cces$state[cces$state=="53"] <- "WA"#
cces$state[cces$state=="54"] <- "WV"#
cces$state[cces$state=="55"] <- "WI"#
cces$state[cces$state=="56"] <- "WY"#
#
cces$stcd <- paste(cces$state,cces$cd,sep="")#
#
cces <- subset(cces,cces$state != "11")#
#
cces$stcd <- cces$stcd#
#
##################
cces$self_ideo <- as.numeric(cces$self_ideo)#
cces$weight <- as.numeric(cces$commonweight_post)#
#
house <- read.dta13("/Users/carlosalgara/Desktop/carlos_school/PhD_UC Davis/Research/Data/American Politics/Jacobson_House_Elections/GJ_ORIGINAL_1946-2016_House_Elex.dta",convert.factors = T, convert.underscore = FALSE, encoding ="UTF-8")#
#
house <- subset(house,house$year == 2016 & house$po2 != "Unopposed" & !is.na(house$dv))#
house$stcd <- paste(house$state,house$cd,sep="")#
#
cces <- merge(cces,house,by=c("stcd"))#
#
cces$dist <- factor(cces$stcd)#
cces$pid7 <- as.numeric(cces$pid7)#
cces$party <- ifelse(cces$pid7 == 1, "D", ifelse(cces$pid7 == 2, "D", ifelse(cces$pid7 == 3, "D", ifelse(cces$pid7 == 4, "I", ifelse(cces$pid7 == 5, "R", ifelse(cces$pid7 == 6, "R", ifelse(cces$pid7 == 7, "R", NA)))))))#
table(cces$party, cces$pid7)#
#
cces <- subset(cces, !is.na(cces$party))#
#
cces$dist_party <- paste(cces$dist,cces$party,sep=".")#
#
district_ideo <- ddply(cces, ~dist, summarize, "median_voter" = weighted.mean(self_ideo, weight, na.rm=TRUE))#
dem_ideo <- ddply(cces, ~dist,summarize, "dem_ideo" = weighted.mean(dem_ideo, weight, na.rm=TRUE))#
rep_ideo <- ddply(cces, ~dist,summarize, "rep_ideo" = weighted.mean(rep_ideo, weight, na.rm=TRUE))#
#
#dem_ideo <- ddply(cces, ~dist_party,summarize, "dem_ideo" = mean(dem_ideo, na.rm=TRUE))#
#rep_ideo <- ddply(cces, ~dist_party,summarize, "rep_ideo" = mean(rep_ideo, na.rm=TRUE))#
#
#dem_ideo$dist <- gsub("\\..*","",dem_ideo$dist_party)#
#dem_ideo <- ddply(dem_ideo, ~dist,summarize, "dem_ideo" = mean(dem_ideo, na.rm=TRUE))#
#
#rep_ideo$dist <- gsub("\\..*","",rep_ideo$dist_party)#
#rep_ideo <- ddply(rep_ideo, ~dist,summarize, "rep_ideo" = mean(rep_ideo, na.rm=TRUE))#
#
agg <- merge(district_ideo,dem_ideo,by="dist")#
agg <- merge(agg,rep_ideo,by="dist")#
#
agg2 <- reshape(agg, idvar = c("dist"), varying=c("dem_ideo","rep_ideo"), v.names=c("cand_ideo"), times=c("Democrat","Republican"), direction="long")#
names(agg2)[names(agg2) == 'time'] <- 'candidate'#
#
agg2 <- agg2[order(agg2$dist),]#
rownames(agg2) <- NULL#
#
agg2$candidate <- factor(agg2$candidate)#
myColors <- c("blue","red")#
names(myColors) <- levels(agg2$candidate)#
colScale <- scale_colour_manual("Candidate",values = myColors, guide = FALSE)#
#
m <- lm(cand_ideo ~ median_voter, data=subset(agg2, agg2$candidate == "Democrat"))#
#Dem Cand. Ideology = -0.87636 + 0.38131 * District Ideology, R-sq = 0.09#
m <- lm(cand_ideo ~ median_voter, data=subset(agg2, agg2$candidate == "Republican"))#
#Rep. Cand. Ideology = 0.84439 + 0.65029 * District Ideology, R-sq 0.19#
#
gg <- ggplot(agg2, aes(x = agg2$median_voter, y = agg2$cand_ideo, colour=candidate, shape = dist, label = dist, group=candidate)) + geom_text(size = 3.5, alpha = 1)  + geom_smooth(method = "glm", se=TRUE, color="black", linetype = "solid",size=0.75)#
gg_data <- ggplot_build(gg)#
gg2 <- gg_data$data[[2]]#
colnames(gg2)[colnames(gg2) == "group"] <- "candidate"#
gg2$candidate <- ifelse(gg2$candidate == 1, "Democrat", ifelse(gg2$candidate == 2, "Republican", NA))#
prob2 <- ggplot(agg2, aes(x = agg2$median_voter, y = agg2$cand_ideo, colour=candidate, label = dist)) + geom_text(size = 2.25, alpha = 1, show.legend = FALSE) + theme_bw() + theme(legend.position=c(0.18, 0.93), legend.key.size = unit(0.9,"line"), legend.key = element_blank(), legend.direction="horizontal") + scale_y_continuous(breaks=c(-2,-1,0,1,2), labels = c("-2","-1","0","1","2"), "Candidate Ideological Positions (Liberal-Conservative)") + scale_x_continuous(limits=c(-1.03,1.33),breaks=c(-1,-0.5,0,0.5,1,1.33), labels = c("-1\n Liberal", "-0.5","0","0.5","1","1.33\n Conservative"), "District Ideological Preferences") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())  + ggtitle("House Candidates' Ideological Positions by District Ideology Preferences in the 2016 Elections") + annotate("text", x=0.75, y=2.25, label= "Rep.~Cand.~Ideology==~ 0.85+0.65%*%~District~Ideology~list(,)~R^{2}== 0.19", parse=T, size = 2.65) + annotate("text", x=0.75, y=-2.05, label= "Dem.~Cand.~Ideology=
=~ -0.88+0.38%*%~District~Ideology~list(,)~ R^{2}== 0.09", parse=T, size = 2.65) +  geom_smooth(aes(group = candidate), method = "lm", formula = y ~ x, se = T, linetype = "solid", color="black", size=0.65,alpha=0.2, show.legend = T) + scale_colour_manual("",values = c("blue","red"), labels=c("Fitted Values","95% Confidence Intervals")) + guides(colour = guide_legend(override.aes = list(linetype=c("solid","blank"), fill=c("white","black")))) + geom_rug(color = "gray30", alpha=.2, size = 0.25, position='jitter')#
grid.newpage()#
footnote2 <- "Blue scatters indicate Democratic candidates & red scatters indicate Republican candidates. Measures calculated using weighted district means. N = 367 districts contested by both major-parties."#
footnote <- "Data: Cooperative Congressional Election Study 2016"#
g <- arrangeGrob(prob2, right = textGrob(footnote, x = 0, hjust = 0.5, vjust= 1, rot = 90, gp = gpar(fontface = "italic", fontsize = 10, col = "blue")), bottom = textGrob(footnote2, x = 0.025, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 9, col = "black")))#
grid.draw(g)
# Winning candidates scatter#
#
cong_data <- subset(house, select=c("stcd","dv","inc"))#
colnames(cong_data) <- c("dist","dv","inc")#
agg2 <- merge(agg2, cong_data,by=c("dist"))#
#
agg2$winning_cand <- ifelse(agg2$dv >= 50 & agg2$candidate == "Democrat", 1, ifelse(agg2$dv < 50 & agg2$candidate == "Republican", 1, 0))#
#
agg2$incumbent <- ifelse(agg2$inc == "GOP Incumbent" & agg2$candidate == "Republican", 1, ifelse(agg2$inc == "Democratic Incumbent" & agg2$candidate == "Democrat", 1, 0))#
#
agg2$winning_cand[agg2$dist == "LA4" & agg2$candidate == "Republican"] <- 1#
agg2$winning_cand[agg2$dist == "LA4" & agg2$candidate == "Democrat"] <- 0#
agg3 <- subset(agg2, agg2$winning_cand == 1)#
#
agg3$candidate <- factor(agg3$candidate)#
myColors <- c("blue","red")#
names(myColors) <- levels(agg3$candidate)#
colScale <- scale_colour_manual("Candidate",values = myColors, guide = FALSE)#
#
gg <- ggplot(agg3, aes(x = agg3$median_voter, y = agg3$cand_ideo, colour=candidate, shape = dist, label = dist, group=candidate)) + geom_text(size = 3.5, alpha = 1)  + geom_smooth(method = "glm", se=TRUE, color="black", linetype = "solid",size=0.75)#
gg_data <- ggplot_build(gg)#
gg2 <- gg_data$data[[2]]#
colnames(gg2)[colnames(gg2) == "group"] <- "candidate"#
gg2$candidate <- ifelse(gg2$candidate == 1, "Democrat", ifelse(gg2$candidate == 2, "Republican", NA))#
#
m <- lm(cand_ideo ~ median_voter, data=subset(agg3, agg3$candidate == "Democrat"))#
#Dem Cand. Ideology = -0.99 + 0.25 * District Ideology, R-sq = 0.04#
m <- lm(cand_ideo ~ median_voter, data=subset(agg3, agg3$candidate == "Republican"))#
#Rep. Cand. Ideology = 0.01886 + -0.01886 * District Ideology, R-sq = 0.06#
#
prob2 <- ggplot(agg3, aes(x = agg3$median_voter, y = agg3$cand_ideo, colour=candidate, label = dist)) + geom_text(size = 2.25, alpha = 1, show.legend = FALSE) + theme_bw() + theme(legend.position=c(0.18, 0.93), legend.key.size = unit(0.9,"line"), legend.key = element_blank(), legend.direction="horizontal") + scale_y_continuous(breaks=c(-2,-1,0,1,2), labels = c("-2","-1","0","1","2"), "Candidate Ideological Positions (Liberal-Conservative)") + scale_x_continuous(limits=c(-1.03,1.33),breaks=c(-1,-0.5,0,0.5,1,1.33), labels = c("-1\n Liberal", "-0.5","0","0.5","1","1.33\n Conservative"), "District Ideological Preferences") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())  + ggtitle("House Winning Candidates' Ideological Positions by District Ideology Preferences in the 2016 Elections") + annotate("text", x=0.75, y=2.25, label= "Rep.~Cand.~Ideology==~ 0.02+-0.02%*%~District~Ideology~list(,)~R^{2}== 0.06", parse=T, size = 2.65) + annotate("text", x=0.75, y=-2.05, label= "Dem.~Cand.~
Ideology==~ -0.99+0.25%*%~District~Ideology~list(,)~ R^{2}== 0.04", parse=T, size = 2.65) +  geom_smooth(aes(group = candidate), method = "lm", formula = y ~ x, se = T, linetype = "solid", color="black", size=0.65,alpha=0.2, show.legend = T) + scale_colour_manual("",values = c("blue","red"), labels=c("Fitted Values","95% Confidence Intervals")) + guides(colour = guide_legend(override.aes = list(linetype=c("solid","blank"), fill=c("white","black")))) + geom_rug(color = "gray30", alpha=.2, size = 0.25, position='jitter')#
grid.newpage()#
footnote2 <- "Blue scatters indicate Democratic candidates & red scatters indicate Republican candidates. Measures calculated using weighted district means. N = 367 districts contested by both major-parties."#
footnote <- "Data: Cooperative Congressional Election Study 2016"#
g <- arrangeGrob(prob2, right = textGrob(footnote, x = 0, hjust = 0.5, vjust= 1, rot = 90, gp = gpar(fontface = "italic", fontsize = 10, col = "blue")), bottom = textGrob(footnote2, x = 0.025, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 9, col = "black")))#
grid.draw(g)
library(foreign)#
library(MASS)#
library(UsingR)#
library(nlme)#
library(Zelig)#
library(lmtest)#
library(sandwich)#
library(car)#
library(directlabels)#
library(bbmle)#
library(maxLik)#
library(ggplot2)#
library(RGraphics)#
library(lattice)#
library(latticeExtra)#
library(VGAM)#
library(mvtnorm)#
library(ordinal)#
library(nnet)#
library(sampleSelection)#
library(pscl)#
library(lmtest)#
library(aod)#
library(scales)#
library(gridExtra)#
library(reshape2)#
library(network)#
library(Matrix)#
library(igraph)#
library(gmodels)#
library(pastecs)#
#library(dplyr)#
library(arm)#
library(coefplot)#
library(psych)#
library(descr)#
library(data.table)#
library(multiwayvcov)#
library(compositions)#
library(rms)#
library(effects)#
#
library(readstata13)#
#
stateleg <- read.dta13("/Users/carlosalgara/Desktop/carlos_school/PhD_UC Davis/Research/Data/American Politics/Shor_State_Leg_Data/shor mccarty 1993-2014 state individual legislator scores public June 2015.dta",convert.factors = TRUE, convert.underscore = FALSE)#
#
wa <- subset(stateleg, stateleg$st == "WA" & stateleg$party != "I")#
#
wa$color <- ifelse(wa$party == "D", "dodgerblue1", ifelse(wa$party == "R", "red1", NA))#
#
myColors <- c("blue","red")#
names(myColors) <- levels(wa$party_code)#
colScale <- scale_colour_manual("",values = myColors, guide = FALSE)#
#
plot <- ggplot(wa, aes(x=party, y=np_score, group=party, label = party, colour = party)) + geom_boxplot() + theme_bw() + theme(panel.grid.minor = element_blank()) + theme(legend.position=c(0.10, 0.875), legend.box.just = "left", legend.key.size = unit(1,"line"), legend.key = element_rect(size = 0, color = 'white'), legend.text.align = 0, legend.box = "horizontal") + scale_y_continuous("NPAT Common Space Scores (Liberal-Conservative)") + scale_x_discrete(labels=c("Democratic Caucus","Republican Conference"), "") + geom_text(size = 1.85, alpha = 1, position = "jitter") + colScale + ggtitle("Partisan Ideological Distribution of the Washington State Legislature, 1993-2014")#
grid.newpage()#
footnote <- "Data: McCarty & Shor (2015) Measuring American Legislatures Project. Scores estimated using chamber-specific rollcalls."#
footnote2 <- "Carlos Algara: @algaraca"#
g <- arrangeGrob(plot,  right = textGrob(footnote2, x = 0, hjust = 0.5, vjust= 1, rot = 90, gp = gpar(fontface = "italic", fontsize = 12, col = "blue")), bottom = textGrob(footnote, x = 0.015, y = 1, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 9, col = "black"))) #
grid.draw(g)
plot <- ggplot(wa, aes(x=party, y=np_score, group=party, label = party, colour = party)) + geom_boxplot() + theme_bw() + theme(panel.grid.minor = element_blank()) + theme(legend.position=c(0.10, 0.875), legend.box.just = "left", legend.key.size = unit(1,"line"), legend.key = element_rect(size = 0, color = 'white'), legend.text.align = 0, legend.box = "horizontal") + scale_y_continuous("NPAT Common Space Scores (Liberal-Conservative)") + scale_x_discrete(labels=c("Democratic Caucus","Republican Conference"), "") + geom_text(size = 1.85, alpha = 1, position = "jitter") + colScale + ggtitle("Partisan Ideological Distribution of the Washington State Legislature, 1993-2014")#
grid.newpage()#
footnote <- "Data: McCarty & Shor (2015) Measuring American Legislatures Project. Scores estimated using chamber-specific rollcalls."#
g <- arrangeGrob(plot, bottom = textGrob(footnote, x = 0.015, y = 1, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 9, col = "black"))) #
grid.draw(g)
library(foreign)#
library(MASS)#
library(UsingR)#
library(nlme)#
library(Zelig)#
library(lmtest)#
library(sandwich)#
library(car)#
library(directlabels)#
library(bbmle)#
library(maxLik)#
library(ggplot2)#
library(RGraphics)#
library(lattice)#
library(latticeExtra)#
library(VGAM)#
library(mvtnorm)#
library(ordinal)#
library(nnet)#
library(sampleSelection)#
library(pscl)#
library(lmtest)#
library(aod)#
library(scales)#
library(gridExtra)#
library(reshape2)#
library(network)#
library(Matrix)#
library(igraph)#
library(gmodels)#
library(pastecs)#
#library(dplyr)#
library(plyr)#
library(arm)#
library(coefplot)#
library(psych)#
library(descr)#
library(data.table)#
library(multiwayvcov)#
library(compositions)#
library(effects)#
library(grid)#
library(gridExtra)#
library(rms)#
#
# This R script contains the code necessary to clean the aggregate data of the entire universe of Senate elections from 1914-2014. The resulting output of these data is a clean codebook and a spreadsheet of ALL Senate races from 1914-2014. In the project, these data will be merged with the originally collected candidate quality data.#
#
########################################
#
rm(list=ls(all=TRUE))#
library(xlsx)#
#
cat <- read.xlsx("/Users/carlosalgara/Desktop/carlos_school/PhD_UC Davis/Research/Data/American Politics/Senate_Elections_UVA_Aggregate/missing_candidatequality_NEEDSCODING.xlsx", sheetName = "universe" , header = TRUE, stringsAsFactors = FALSE)#
library(readstata13)#
cces <- read.dta13("/Users/carlosalgara/Desktop/carlos_school/PhD_UC Davis/Research/Data/American Politics/Presidential_Vote/1868_2016_presvote.dta",convert.factors = FALSE, convert.underscore = FALSE)#
#
cces <- subset(cces, select=c("year","state","dvote","rvote"))#
colnames(cces) <- c("Year","State","dvote","rvote")#
#
cat <- merge(cces,cat,by=c("Year","State"))#
#
cat$ptynow <- ifelse(cat$seat_status == "Appointed Democratic Senator Election","Democratic",ifelse(cat$seat_status == "Democratic open seat","Democratic",ifelse(cat$seat_status=="Democratic Senator re-election","Democratic",ifelse(cat$seat_status=="Republican open seat","Republican",ifelse(cat$seat_status=="Republican Senator re-election","Republican", ifelse(cat$seat_status == "Independent Senator Re-election", "Democratic", NA))))))#
#
cat$State <- ifelse(cat$seat_status == "Appointed Democratic Senator Election",paste(cat$State,"*"),ifelse(cat$seat_status=="Democratic Senator re-election",paste(cat$State,"*"),ifelse(cat$seat_status=="Republican Senator re-election",paste(cat$State,"*"),cat$State)))#
#
cat$State <- trimws(cat$State)#
cat$State <- gsub(" ","",cat$State)#
cat$ptynow <- factor(cat$ptynow)#
myColors <- c("blue","red")#
names(myColors) <- levels(cat$ptynow)#
colScale <- scale_colour_manual("Seat Partisanship",values = myColors, guide = FALSE)#
cat$dem_senvote <- as.numeric(cat$X.)#
cat$rep_senvote <- as.numeric(cat$X..1)#
cat$dem_presmargin <- cat$dvote - cat$rvote#
cat$dem_senmargin <- cat$dem_senvote - cat$rep_senvote#
cat$dem_senmargin <- cat$dem_senmargin * 100#
#
cat$x <- cat$dem_presmargin#
cat$y <- cat$dem_senmargin#
cat <- subset(cat, cat$Year == 2016 | cat$Year == 2012 | cat$Year == 2008 | cat$Year == 2004)#
#cat$Year <- factor(cat$Year, levels=c("2016","2012","2008","2004"), labels=c("2016 Clinton/Trump","2012 Obama/Romney","2008 Obama/McCain","2004 Kerry/Bush"))#
cat$Year <- factor(cat$Year, labels=c("2004 Kerry/Bush","2008 Obama/McCain", "2012 Obama/Romney", "2016 Clinton/Trump"))#
#
lm_eqn = function(df){#
  m = lm(y ~ x, df);#
  eq <- substitute(beta == b*"," ~~italic(R)^2~"="~r2, #
                   list(b = format(coef(m)[2], digits = 2), r2 = format(summary(m)$r.squared, digits = 2)))#
  as.character(as.expression(eq));                 #
}#
eq <- ddply(cat,.(Year),lm_eqn)#
cat2 <- cat#
cat2 <-cat2[!(cat2$Republican == "None"),]#
cat2 <- cat2[!(cat2$State == "ID*" & cat2$Year == "2004 Kerry/Bush"),]#
cat$ptynow <- factor(cat$ptynow)#
myColors <- c("blue","red")#
names(myColors) <- levels(cat$ptynow)#
colScale <- scale_colour_manual("",values = myColors, guide = FALSE)#
rownames(cat2) <- NULL#
#cat2$Year <- factor(cat2$Year, levels=rev(levels(cat2$Year)))#
#eq$Year <- factor(eq$Year, levels=rev(levels(eq$Year)))#
#
plot <- ggplot(cat2, aes(x = cat2$x, y = cat2$y, label = State, colour=ptynow)) + geom_text(size = 2, alpha = 1) + theme_bw() + scale_shape_manual(values = State) + theme(legend.position=c(0.86, 0.86), legend.key.size = unit(1.70,"line")) + scale_y_continuous(limits=c(-62,62), breaks=c(-60,-40,-20,0,20,40,60), labels = c("-60%","-40%","-20%","0%","20%","40%","60%"), "Democratic Senate Margin") + scale_x_continuous(limits=c(-50,50), breaks=c(-40,-20,0.0,20,40), labels = c("-40%","-20%","0%","20%","40%"), "Democratic Presidential State Margin") + geom_vline(xintercept = 0, lty = "dashed", size = 0.33) + geom_hline(yintercept = 0, lty = "dashed", size = 0.33) + facet_wrap(~Year, ncol = 2, scales = "free_y") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + colScale + geom_smooth(method = "glm", se=FALSE, color="black",size=0.50) + ggtitle("Relationship Between Presidential State Margins & \n Senate Race Margins in the Last Four Presidential Elections") + geom_text(data=eq,aes(y
= -45, x = 30,label=V1), parse = TRUE, inherit.aes=FALSE, size = 3)#
#
footnote2 <- "* indicates incumbents. Blue indicates a Democratic-held Senate seat; red indicates a Republcan-held seat. Unopposed races (2004 ID, 2008 AR, 2016 CA) excluded."#
g <- arrangeGrob(plot, bottom = textGrob(footnote2, x = 0.025, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 9, col = "black")))#
grid.draw(g)
plot <- ggplot(cat2, aes(x = cat2$x, y = cat2$y, label = State, colour=ptynow)) + geom_text(size = 2, alpha = 1) + theme_bw() + scale_shape_manual(values = State) + theme(legend.position=c(0.86, 0.86), legend.key.size = unit(1.70,"line")) + scale_y_continuous(limits=c(-62,62), breaks=c(-60,-40,-20,0,20,40,60), labels = c("-60%","-40%","-20%","0%","20%","40%","60%"), "Democratic Senate Margin") + scale_x_continuous(limits=c(-50,50), breaks=c(-40,-20,0.0,20,40), labels = c("-40%","-20%","0%","20%","40%"), "Democratic Presidential State Margin") + geom_vline(xintercept = 0, lty = "dashed", size = 0.33) + geom_hline(yintercept = 0, lty = "dashed", size = 0.33) + facet_wrap(~Year, ncol = 2, scales = "free_y") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + colScale + geom_smooth(method = "glm", se=FALSE, color="black",size=0.50) + ggtitle("Relationship Between Presidential State Margins & \nSenate Race Margins in the Last Four Presidential Elections") + geom_text(data=eq,aes(y =
-45, x = 30,label=V1), parse = TRUE, inherit.aes=FALSE, size = 3)#
footnote2 <- "* indicates incumbents. Blue indicates a Democratic-held Senate seat; red indicates a Republcan-held seat. Unopposed races (2004 ID, 2008 AR, 2016 CA) excluded."#
g <- arrangeGrob(plot, bottom = textGrob(footnote2, x = 0.025, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 9, col = "black")))#
grid.draw(g)
plot <- ggplot(cat2, aes(x = cat2$x, y = cat2$y, label = State, colour=ptynow)) + geom_text(size = 2, alpha = 1) + theme_bw() + scale_shape_manual(values = State) + theme(legend.position=c(0.86, 0.86), legend.key.size = unit(1.70,"line")) + scale_y_continuous(limits=c(-62,62), breaks=c(-60,-40,-20,0,20,40,60), labels = c("-60%","-40%","-20%","0%","20%","40%","60%"), "Democratic Senate Margin") + scale_x_continuous(limits=c(-50,50), breaks=c(-40,-20,0.0,20,40), labels = c("-40%","-20%","0%","20%","40%"), "Democratic Presidential State Margin") + geom_vline(xintercept = 0, lty = "dashed", size = 0.33) + geom_hline(yintercept = 0, lty = "dashed", size = 0.33) + facet_wrap(~Year, ncol = 2, scales = "free_y") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + colScale + geom_smooth(method = "glm", se=FALSE, color="black",size=0.50) + ggtitle("Relationship Between Presidential State Margins & Senate Race Margins in the Last Four Presidential Elections") + geom_text(data=eq,aes(y = -
45, x = 30,label=V1), parse = TRUE, inherit.aes=FALSE, size = 3)#
footnote2 <- "* indicates incumbents. Blue indicates a Democratic-held Senate seat; red indicates a Republcan-held seat. Unopposed races (2004 ID, 2008 AR, 2016 CA) excluded."#
g <- arrangeGrob(plot, bottom = textGrob(footnote2, x = 0.025, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 9, col = "black")))#
grid.draw(g)
library(foreign)#
library(MASS)#
library(UsingR)#
library(nlme)#
library(Zelig)#
library(lmtest)#
library(sandwich)#
library(car)#
library(directlabels)#
library(bbmle)#
library(maxLik)#
library(ggplot2)#
library(RGraphics)#
library(lattice)#
library(latticeExtra)#
library(VGAM)#
library(mvtnorm)#
library(ordinal)#
library(nnet)#
library(sampleSelection)#
library(pscl)#
library(lmtest)#
library(aod)#
library(scales)#
library(gridExtra)#
library(reshape2)#
library(network)#
library(Matrix)#
library(igraph)#
library(gmodels)#
library(pastecs)#
#library(dplyr)#
library(plyr)#
library(arm)#
library(coefplot)#
library(psych)#
library(descr)#
library(data.table)#
library(multiwayvcov)#
library(compositions)#
library(effects)#
library(grid)#
library(gridExtra)#
library(rms)#
#
library(readstata13)#
#
pres <- read.dta13("/Users/carlosalgara/Desktop/carlos_school/PhD_UC Davis/Research/Data/American Politics/Presidential_Vote/1868_2016_presvote.dta",convert.factors = FALSE, convert.underscore = FALSE)#
#
us <- subset(pres, pres$state == "US")#
us$ovote[is.na(us$ovote)] <- 0#
us$d_twoparty_pop <- (us$dvote/(us$dvote + us$rvote)) * 100#
us$d_twoparty_ev <- (us$dev/(us$totev)) * 100#
us$r_twoparty_pop <- (us$rvote/(us$dvote + us$rvote)) * 100#
us$r_twoparty_ev <- (us$rev/(us$totev)) * 100#
#
us$d_threeparty_pop <- (us$dvote/(us$dvote + us$rvote + us$ovote)) * 100#
us$d_threeparty_ev <- (us$dev/(us$totev)) * 100#
us$r_threeparty_pop <- (us$rvote/(us$dvote + us$rvote + us$ovote)) * 100#
us$r_threeparty_ev <- (us$rev/(us$totev)) * 100#
us$o_threeparty_pop <- (us$ovote/(us$dvote + us$rvote + us$ovote)) * 100#
us$o_threeparty_ev <- (us$oev/(us$totev)) * 100#
#
# Raw Vote#
us2 <- subset(us,select=c("year","state","dvote"))#
us2 <- reshape(us2, timevar = "year", idvar = "state", direction = "wide")#
dvote <- reshape(us2, idvar = c("state"), varying=colnames(us2[,2:ncol(us2)]), v.names=c("vote"), times=seq(1868,2016,4), direction="long")#
dvote$party <- "Democrat"#
#
us2 <- subset(us,select=c("year","state","rvote"))#
us2 <- reshape(us2, timevar = "year", idvar = "state", direction = "wide")#
rvote <- reshape(us2, idvar = c("state"), varying=colnames(us2[,2:ncol(us2)]), v.names=c("vote"), times=seq(1868,2016,4), direction="long")#
rvote$party <- "Republican"#
#
us2 <- subset(us,select=c("year","state","ovote"))#
us2 <- reshape(us2, timevar = "year", idvar = "state", direction = "wide")#
ovote <- reshape(us2, idvar = c("state"), varying=colnames(us2[,2:ncol(us2)]), v.names=c("vote"), times=seq(1868,2016,4), direction="long")#
ovote$party <- "Third Party"#
#
vote <- rbind(dvote,rvote,ovote)#
#
# Electoral Vote#
us2 <- subset(us,select=c("year","state","dev"))#
us2 <- reshape(us2, timevar = "year", idvar = "state", direction = "wide")#
dev <- reshape(us2, idvar = c("state"), varying=colnames(us2[,2:ncol(us2)]), v.names=c("ev"), times=seq(1868,2016,4), direction="long")#
dev$party <- "Democrat"#
#
us2 <- subset(us,select=c("year","state","rev"))#
us2 <- reshape(us2, timevar = "year", idvar = "state", direction = "wide")#
rev <- reshape(us2, idvar = c("state"), varying=colnames(us2[,2:ncol(us2)]), v.names=c("ev"), times=seq(1868,2016,4), direction="long")#
rev$party <- "Republican"#
#
us2 <- subset(us,select=c("year","state","oev"))#
us2 <- reshape(us2, timevar = "year", idvar = "state", direction = "wide")#
oev <- reshape(us2, idvar = c("state"), varying=colnames(us2[,2:ncol(us2)]), v.names=c("ev"), times=seq(1868,2016,4), direction="long")#
oev$party <- "Third Party"#
#
ev <- rbind(dev,rev,oev)#
#
# Two-Party EV#
#
us2 <- subset(us,select=c("year","state","d_twoparty_ev"))#
us2 <- reshape(us2, timevar = "year", idvar = "state", direction = "wide")#
d_twoparty_ev <- reshape(us2, idvar = c("state"), varying=colnames(us2[,2:ncol(us2)]), v.names=c("twoparty_ev_vote"), times=seq(1868,2016,4), direction="long")#
d_twoparty_ev$party <- "Democrat"#
#
us2 <- subset(us,select=c("year","state","r_twoparty_ev"))#
us2 <- reshape(us2, timevar = "year", idvar = "state", direction = "wide")#
r_twoparty_ev <- reshape(us2, idvar = c("state"), varying=colnames(us2[,2:ncol(us2)]), v.names=c("twoparty_ev_vote"), times=seq(1868,2016,4), direction="long")#
r_twoparty_ev$party <- "Republican"#
#
twoparty_evvote <- rbind(d_twoparty_ev,r_twoparty_ev)#
#
# Two-Party vote#
#
us2 <- subset(us,select=c("year","state","d_twoparty_pop"))#
us2 <- reshape(us2, timevar = "year", idvar = "state", direction = "wide")#
d_twoparty_pop <- reshape(us2, idvar = c("state"), varying=colnames(us2[,2:ncol(us2)]), v.names=c("twoparty_vote"), times=seq(1868,2016,4), direction="long")#
d_twoparty_pop$party <- "Democrat"#
#
us2 <- subset(us,select=c("year","state","r_twoparty_pop"))#
us2 <- reshape(us2, timevar = "year", idvar = "state", direction = "wide")#
r_twoparty_pop <- reshape(us2, idvar = c("state"), varying=colnames(us2[,2:ncol(us2)]), v.names=c("twoparty_vote"), times=seq(1868,2016,4), direction="long")#
r_twoparty_pop$party <- "Republican"#
#
twoparty_vote <- rbind(d_twoparty_pop,r_twoparty_pop)#
#
# Three-Party Vote#
us2 <- subset(us,select=c("year","state","d_threeparty_pop"))#
us2 <- reshape(us2, timevar = "year", idvar = "state", direction = "wide")#
d_threeparty_pop <- reshape(us2, idvar = c("state"), varying=colnames(us2[,2:ncol(us2)]), v.names=c("threeparty_vote"), times=seq(1868,2016,4), direction="long")#
d_threeparty_pop$party <- "Democrat"#
#
us2 <- subset(us,select=c("year","state","r_threeparty_pop"))#
us2 <- reshape(us2, timevar = "year", idvar = "state", direction = "wide")#
r_threeparty_pop <- reshape(us2, idvar = c("state"), varying=colnames(us2[,2:ncol(us2)]), v.names=c("threeparty_vote"), times=seq(1868,2016,4), direction="long")#
r_threeparty_pop$party <- "Republican"#
#
us2 <- subset(us,select=c("year","state","o_threeparty_pop"))#
us2 <- reshape(us2, timevar = "year", idvar = "state", direction = "wide")#
o_threeparty_pop <- reshape(us2, idvar = c("state"), varying=colnames(us2[,2:ncol(us2)]), v.names=c("threeparty_vote"), times=seq(1868,2016,4), direction="long")#
o_threeparty_pop$party <- "Third Party"#
#
threeparty_vote <- rbind(d_threeparty_pop,r_threeparty_pop,o_threeparty_pop)#
#
# Three-Party EV#
us2 <- subset(us,select=c("year","state","d_threeparty_ev"))#
us2 <- reshape(us2, timevar = "year", idvar = "state", direction = "wide")#
d_threeparty_pop <- reshape(us2, idvar = c("state"), varying=colnames(us2[,2:ncol(us2)]), v.names=c("threeparty_ev_vote"), times=seq(1868,2016,4), direction="long")#
d_threeparty_pop$party <- "Democrat"#
#
us2 <- subset(us,select=c("year","state","r_threeparty_ev"))#
us2 <- reshape(us2, timevar = "year", idvar = "state", direction = "wide")#
r_threeparty_pop <- reshape(us2, idvar = c("state"), varying=colnames(us2[,2:ncol(us2)]), v.names=c("threeparty_ev_vote"), times=seq(1868,2016,4), direction="long")#
r_threeparty_pop$party <- "Republican"#
#
us2 <- subset(us,select=c("year","state","o_threeparty_ev"))#
us2 <- reshape(us2, timevar = "year", idvar = "state", direction = "wide")#
o_threeparty_pop <- reshape(us2, idvar = c("state"), varying=colnames(us2[,2:ncol(us2)]), v.names=c("threeparty_ev_vote"), times=seq(1868,2016,4), direction="long")#
o_threeparty_pop$party <- "Third Party"#
#
threeparty_ev_vote <- rbind(d_threeparty_pop,r_threeparty_pop,o_threeparty_pop)#
#
# Bind all together#
#
votes <- merge(vote,ev,by=c("state","time","party"), all=TRUE)#
votes <- merge(votes,twoparty_vote,by=c("state","time","party"), all=TRUE)#
votes <- merge(votes,twoparty_evvote,by=c("state","time","party"), all=TRUE)#
votes <- merge(votes,threeparty_vote,by=c("state","time","party"), all=TRUE)#
votes <- merge(votes,threeparty_ev_vote,by=c("state","time","party"), all=TRUE)#
#
# Candidates#
#
votes$candidates <- NA#
votes$candidates[votes$time == 2016 & votes$party == "Democrat"] <- "Clinton \n2016"#
votes$candidates[votes$time == 2016 & votes$party == "Republican"] <- "Trump \n2016"#
votes$candidates[votes$time == 2016 & votes$party == "Third Party"] <- "Johnson \n2016"#
votes$threeparty_vote[votes$time == 2016 & votes$party == "Third Party"] <- 3.28#
votes$candidates[votes$time == 2008 & votes$party == "Democrat"] <- "Obama \n2008"#
votes$candidates[votes$time == 2008 & votes$party == "Republican"] <- "McCain \n2008"#
votes$candidates[votes$time == 2012 & votes$party == "Democrat"] <- "Obama \n2012"#
votes$candidates[votes$time == 2012 & votes$party == "Republican"] <- "Romney \n2012"#
votes$candidates[votes$time == 2004 & votes$party == "Democrat"] <- "Kerry \n2004"#
votes$candidates[votes$time == 2004 & votes$party == "Republican"] <- "Bush \n2004"#
votes$candidates[votes$time == 2000 & votes$party == "Democrat"] <- "Gore \n2000"#
votes$candidates[votes$time == 2000 & votes$party == "Republican"] <- "Bush \n2000"#
votes$candidates[votes$time == 2000 & votes$party == "Third Party"] <- "Nader \n2000"#
votes$candidates[votes$time == 1996 & votes$party == "Democrat"] <- "Clinton \n1996"#
votes$candidates[votes$time == 1996 & votes$party == "Republican"] <- "Dole \n1996"#
votes$candidates[votes$time == 1996 & votes$party == "Third Party"] <- "Perot \n1996"#
votes$candidates[votes$time == 1992 & votes$party == "Democrat"] <- "Clinton \n1992"#
votes$candidates[votes$time == 1992 & votes$party == "Republican"] <- "Bush \n1992"#
votes$candidates[votes$time == 1992 & votes$party == "Third Party"] <- "Perot \n1992"#
votes$candidates[votes$time == 1988 & votes$party == "Democrat"] <- "Dukakis \n1988"#
votes$candidates[votes$time == 1988 & votes$party == "Republican"] <- "Bush \n1988"#
votes$candidates[votes$time == 1984 & votes$party == "Democrat"] <- "Mondale \n1984"#
votes$candidates[votes$time == 1984 & votes$party == "Republican"] <- "Reagan \n1984"#
votes$candidates[votes$time == 1980 & votes$party == "Democrat"] <- "Carter \n1980"#
votes$candidates[votes$time == 1980 & votes$party == "Republican"] <- "Reagan \n1980"#
votes$candidates[votes$time == 1980 & votes$party == "Third Party"] <- "Anderson \n1980"#
votes$threeparty_vote[votes$time == 1980 & votes$party == "Third Party"] <- 6.6#
votes$candidates[votes$time == 1976 & votes$party == "Democrat"] <- "Carter \n1976"#
votes$candidates[votes$time == 1976 & votes$party == "Republican"] <- "Ford \n1976"#
votes$candidates[votes$time == 1972 & votes$party == "Democrat"] <- "McGovern \n1972"#
votes$candidates[votes$time == 1972 & votes$party == "Republican"] <- "Nixon \n1972"#
votes$candidates[votes$time == 1968 & votes$party == "Democrat"] <- "Humphrey \n1968"#
votes$candidates[votes$time == 1968 & votes$party == "Republican"] <- "Nixon \n1968"#
votes$candidates[votes$time == 1968 & votes$party == "Third Party"] <- "Wallace \n1968"#
votes$candidates[votes$time == 1964 & votes$party == "Democrat"] <- "LBJ \n1964"#
votes$candidates[votes$time == 1964 & votes$party == "Republican"] <- "Goldwater \n1964"#
votes$candidates[votes$time == 1960 & votes$party == "Democrat"] <- "JFK \n1960"#
votes$candidates[votes$time == 1960 & votes$party == "Republican"] <- "Nixon \n1960"#
votes$candidates[votes$time == 1956 & votes$party == "Democrat"] <- "Stevenson \n1956"#
votes$candidates[votes$time == 1956 & votes$party == "Republican"] <- "IKE \n1956"#
votes$candidates[votes$time == 1952 & votes$party == "Democrat"] <- "Stevenson \n1952"#
votes$candidates[votes$time == 1952 & votes$party == "Republican"] <- "IKE \n1952"#
votes$candidates[votes$time == 1948 & votes$party == "Democrat"] <- "Truman \n1948"#
votes$candidates[votes$time == 1948 & votes$party == "Republican"] <- "Dewey \n1948"#
votes$candidates[votes$time == 1948 & votes$party == "Third Party"] <- "Thurmond \n1948"#
votes$candidates[votes$time == 1944 & votes$party == "Democrat"] <- "FDR \n1944"#
votes$candidates[votes$time == 1944 & votes$party == "Republican"] <- "Dewey \n1944"#
votes$candidates[votes$time == 1940 & votes$party == "Democrat"] <- "FDR \n1940"#
votes$candidates[votes$time == 1940 & votes$party == "Republican"] <- "Wilkie \n1940"#
votes$candidates[votes$time == 1936 & votes$party == "Democrat"] <- "FDR \n1936"#
votes$candidates[votes$time == 1936 & votes$party == "Republican"] <- "Landon \n1936"#
votes$candidates[votes$time == 1932 & votes$party == "Democrat"] <- "FDR \n1932"#
votes$candidates[votes$time == 1932 & votes$party == "Republican"] <- "Hoover \n1932"#
votes$candidates[votes$time == 1928 & votes$party == "Democrat"] <- "Smith \n1928"#
votes$candidates[votes$time == 1928 & votes$party == "Republican"] <- "Hoover \n1928"#
votes$candidates[votes$time == 1924 & votes$party == "Democrat"] <- "Davis \n1924"#
votes$candidates[votes$time == 1924 & votes$party == "Republican"] <- "Coolidge \n1924"#
votes$candidates[votes$time == 1924 & votes$party == "Third Party"] <- "La Follette \n1924"#
votes$candidates[votes$time == 1920 & votes$party == "Democrat"] <- "Cox \n1920"#
votes$candidates[votes$time == 1920 & votes$party == "Republican"] <- "Harding \n1920"#
votes$candidates[votes$time == 1916 & votes$party == "Democrat"] <- "Wilson \n1916"#
votes$candidates[votes$time == 1916 & votes$party == "Republican"] <- "Hughes \n1916"#
votes$candidates[votes$time == 1912 & votes$party == "Democrat"] <- "Wilson \n1912"#
votes$candidates[votes$time == 1912 & votes$party == "Republican"] <- "Taft \n1912"#
votes$candidates[votes$time == 1912 & votes$party == "Third Party"] <- "Teddy \n1912"#
votes$candidates[votes$time == 1908 & votes$party == "Democrat"] <- "Bryan \n1908"#
votes$candidates[votes$time == 1908 & votes$party == "Republican"] <- "Taft \n1908"#
votes$candidates[votes$time == 1904 & votes$party == "Democrat"] <- "Parker \n1904"#
votes$candidates[votes$time == 1904 & votes$party == "Republican"] <- "Teddy \n1904"#
votes$candidates[votes$time == 1900 & votes$party == "Democrat"] <- "Bryan \n1900"#
votes$candidates[votes$time == 1900 & votes$party == "Republican"] <- "McKinley \n1900"#
votes$candidates[votes$time == 1896 & votes$party == "Democrat"] <- "Bryan \n1896"#
votes$candidates[votes$time == 1896 & votes$party == "Republican"] <- "McKinley \n1896"#
votes$candidates[votes$time == 1892 & votes$party == "Democrat"] <- "Clevaland \n1892"#
votes$candidates[votes$time == 1892 & votes$party == "Republican"] <- "Harrison \n1892"#
votes$candidates[votes$time == 1892 & votes$party == "Third Party"] <- "Weaver \n1892"#
votes$candidates[votes$time == 1888 & votes$party == "Democrat"] <- "Clevaland \n1888"#
votes$candidates[votes$time == 1888 & votes$party == "Republican"] <- "Harrison \n1888"#
votes$candidates[votes$time == 1884 & votes$party == "Democrat"] <- "Clevaland \n1884"#
votes$candidates[votes$time == 1884 & votes$party == "Republican"] <- "Blaine \n1884"#
votes$candidates[votes$time == 1880 & votes$party == "Democrat"] <- "Hancock \n1880"#
votes$candidates[votes$time == 1880 & votes$party == "Republican"] <- "Garfield \n1880"#
votes$candidates[votes$time == 1876 & votes$party == "Democrat"] <- "Tilden \n1876"#
votes$candidates[votes$time == 1876 & votes$party == "Republican"] <- "Hayes \n1876"#
votes$candidates[votes$time == 1872 & votes$party == "Democrat"] <- "Greeley \n1872"#
votes$candidates[votes$time == 1872 & votes$party == "Republican"] <- "Grant \n1872"#
votes$candidates[votes$time == 1868 & votes$party == "Democrat"] <- "Seymour \n1868"#
votes$candidates[votes$time == 1868 & votes$party == "Republican"] <- "Grant \n1868"#
#
# candidates2#
#
votes$candidates2 <- NA#
votes$candidates2[votes$time == 2016 & votes$party == "Democrat"] <- "2016"#
votes$candidates2[votes$time == 2016 & votes$party == "Republican"] <- "2016"#
votes$candidates2[votes$time == 2016 & votes$party == "Third Party"] <- "2016"#
votes$candidates2[votes$time == 2008 & votes$party == "Democrat"] <- "2008"#
votes$candidates2[votes$time == 2008 & votes$party == "Republican"] <- "2008"#
votes$candidates2[votes$time == 2012 & votes$party == "Democrat"] <- "2012"#
votes$candidates2[votes$time == 2012 & votes$party == "Republican"] <- "2012"#
votes$candidates2[votes$time == 2004 & votes$party == "Democrat"] <- "2004"#
votes$candidates2[votes$time == 2004 & votes$party == "Republican"] <- "2004"#
votes$candidates2[votes$time == 2000 & votes$party == "Democrat"] <- "2000"#
votes$candidates2[votes$time == 2000 & votes$party == "Republican"] <- "2000"#
votes$candidates2[votes$time == 2000 & votes$party == "Third Party"] <- "2000"#
votes$candidates2[votes$time == 1996 & votes$party == "Democrat"] <- "1996"#
votes$candidates2[votes$time == 1996 & votes$party == "Republican"] <- "1996"#
votes$candidates2[votes$time == 1996 & votes$party == "Third Party"] <- "1996"#
votes$candidates2[votes$time == 1992 & votes$party == "Democrat"] <- "1992"#
votes$candidates2[votes$time == 1992 & votes$party == "Republican"] <- "1992"#
votes$candidates2[votes$time == 1992 & votes$party == "Third Party"] <- "1992"#
votes$candidates2[votes$time == 1988 & votes$party == "Democrat"] <- "1988"#
votes$candidates2[votes$time == 1988 & votes$party == "Republican"] <- "1988"#
votes$candidates2[votes$time == 1984 & votes$party == "Democrat"] <- "1984"#
votes$candidates2[votes$time == 1984 & votes$party == "Republican"] <- "1984"#
votes$candidates2[votes$time == 1980 & votes$party == "Democrat"] <- "1980"#
votes$candidates2[votes$time == 1980 & votes$party == "Republican"] <- "1980"#
votes$candidates2[votes$time == 1980 & votes$party == "Third Party"] <- "1980"#
votes$candidates2[votes$time == 1976 & votes$party == "Democrat"] <- "1976"#
votes$candidates2[votes$time == 1976 & votes$party == "Republican"] <- "1976"#
votes$candidates2[votes$time == 1972 & votes$party == "Democrat"] <- "1972"#
votes$candidates2[votes$time == 1972 & votes$party == "Republican"] <- "1972"#
votes$candidates2[votes$time == 1968 & votes$party == "Democrat"] <- "1968"#
votes$candidates2[votes$time == 1968 & votes$party == "Republican"] <- "1968"#
votes$candidates2[votes$time == 1968 & votes$party == "Third Party"] <- "1968"#
votes$candidates2[votes$time == 1964 & votes$party == "Democrat"] <- "1964"#
votes$candidates2[votes$time == 1964 & votes$party == "Republican"] <- "1964"#
votes$candidates2[votes$time == 1960 & votes$party == "Democrat"] <- "1960"#
votes$candidates2[votes$time == 1960 & votes$party == "Republican"] <- "1960"#
votes$candidates2[votes$time == 1956 & votes$party == "Democrat"] <- "1956"#
votes$candidates2[votes$time == 1956 & votes$party == "Republican"] <- "1956"#
votes$candidates2[votes$time == 1952 & votes$party == "Democrat"] <- "1952"#
votes$candidates2[votes$time == 1952 & votes$party == "Republican"] <- "1952"#
votes$candidates2[votes$time == 1948 & votes$party == "Democrat"] <- "1948"#
votes$candidates2[votes$time == 1948 & votes$party == "Republican"] <- "1948"#
votes$candidates2[votes$time == 1948 & votes$party == "Third Party"] <- "1948"#
votes$candidates2[votes$time == 1944 & votes$party == "Democrat"] <- "1944"#
votes$candidates2[votes$time == 1944 & votes$party == "Republican"] <- "1944"#
votes$candidates2[votes$time == 1940 & votes$party == "Democrat"] <- "1940"#
votes$candidates2[votes$time == 1940 & votes$party == "Republican"] <- "1940"#
votes$candidates2[votes$time == 1936 & votes$party == "Democrat"] <- "1936"#
votes$candidates2[votes$time == 1936 & votes$party == "Republican"] <- "1936"#
votes$candidates2[votes$time == 1932 & votes$party == "Democrat"] <- "1932"#
votes$candidates2[votes$time == 1932 & votes$party == "Republican"] <- "1932"#
votes$candidates2[votes$time == 1928 & votes$party == "Democrat"] <- "1928"#
votes$candidates2[votes$time == 1928 & votes$party == "Republican"] <- "1928"#
votes$candidates2[votes$time == 1924 & votes$party == "Democrat"] <- "1924"#
votes$candidates2[votes$time == 1924 & votes$party == "Republican"] <- "1924"#
votes$candidates2[votes$time == 1924 & votes$party == "Third Party"] <- "1924"#
votes$candidates2[votes$time == 1920 & votes$party == "Democrat"] <- "1920"#
votes$candidates2[votes$time == 1920 & votes$party == "Republican"] <- "1920"#
votes$candidates2[votes$time == 1916 & votes$party == "Democrat"] <- "1916"#
votes$candidates2[votes$time == 1916 & votes$party == "Republican"] <- "1916"#
votes$candidates2[votes$time == 1912 & votes$party == "Democrat"] <- "1912"#
votes$candidates2[votes$time == 1912 & votes$party == "Republican"] <- "1912"#
votes$candidates2[votes$time == 1912 & votes$party == "Third Party"] <- "1912"#
votes$candidates2[votes$time == 1908 & votes$party == "Democrat"] <- "1908"#
votes$candidates2[votes$time == 1908 & votes$party == "Republican"] <- "1908"#
votes$candidates2[votes$time == 1904 & votes$party == "Democrat"] <- "1904"#
votes$candidates2[votes$time == 1904 & votes$party == "Republican"] <- "1904"#
votes$candidates2[votes$time == 1900 & votes$party == "Democrat"] <- "1900"#
votes$candidates2[votes$time == 1900 & votes$party == "Republican"] <- "1900"#
votes$candidates2[votes$time == 1896 & votes$party == "Democrat"] <- "1896"#
votes$candidates2[votes$time == 1896 & votes$party == "Republican"] <- "1896"#
votes$candidates2[votes$time == 1892 & votes$party == "Democrat"] <- "1892"#
votes$candidates2[votes$time == 1892 & votes$party == "Republican"] <- "1892"#
votes$candidates2[votes$time == 1892 & votes$party == "Third Party"] <- "1892"#
votes$candidates2[votes$time == 1888 & votes$party == "Democrat"] <- "1888"#
votes$candidates2[votes$time == 1888 & votes$party == "Republican"] <- "1888"#
votes$candidates2[votes$time == 1884 & votes$party == "Democrat"] <- "1884"#
votes$candidates2[votes$time == 1884 & votes$party == "Republican"] <- "1884"#
votes$candidates2[votes$time == 1880 & votes$party == "Democrat"] <- "1880"#
votes$candidates2[votes$time == 1880 & votes$party == "Republican"] <- "1880"#
votes$candidates2[votes$time == 1876 & votes$party == "Democrat"] <- "1876"#
votes$candidates2[votes$time == 1876 & votes$party == "Republican"] <- "1876"#
votes$candidates2[votes$time == 1872 & votes$party == "Democrat"] <- "1872"#
votes$candidates2[votes$time == 1872 & votes$party == "Republican"] <- "1872"#
votes$candidates2[votes$time == 1868 & votes$party == "Democrat"] <- "1868"#
votes$candidates2[votes$time == 1868 & votes$party == "Republican"] <- "1868"#
#
votes$party <- factor(votes$party)#
myColors <- c("blue","red","orange")#
names(myColors) <- levels(votes$party)#
colScale <- scale_colour_manual("Candidate",values = myColors)#
myShapes <- c(17,15,18)#
names(myShapes) <- levels(votes$party)#
colShape <- scale_shape_manual("Candidate",values=myShapes)#
#
#Three-Party Vote#
#
plot <- ggplot(votes, aes(x = votes$threeparty_vote, y = votes$threeparty_ev_vote, label = candidates, colour=party)) + geom_text(size = 2, alpha = 1) + theme_bw() + scale_shape_manual(values = candidates) + theme(legend.position="none") + scale_y_continuous(limits=c(0,100), breaks=c(0,10,20,30,40,50,60,70,80,90,100), labels = c("0%","10%","20%","30%","40%","50%","60%","70%","80%","90%","100%"), "Percentage of Electoral Votes Won") + scale_x_continuous(limits=c(0,70), breaks=c(0,10,20,30,40,50,60,70), labels = c("0%","10%","20%","30%","40%","50%","60%","70%"), "Percentage of National Three-Party Popular Vote Won") + geom_vline(xintercept = 50, lty = "dashed", size = 0.33) + geom_hline(yintercept = 50, lty = "dashed", size = 0.33) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + colScale + geom_smooth(method = "glm", se=FALSE, color="black",size=0.50) + ggtitle("Relationship Between Popular Vote Percentage & \n Percentage of Electoral Votes Won, 1868-2016")#
grid.newpage()#
footnote <- "Carlos Algara: @algaraca / Data: CQ & @Redistrict 2016 Natl' Pop. Vote Tracker"#
footnote2 <- "DV: % of electoral votes won rather than votes casted, corrected for faithless electors & defection. 'Losers' that won popular vote: Tilden 1876, Cleveland 1888, Gore 2000, & Clinton 2016."#
g <- arrangeGrob(plot, right = textGrob(footnote, x = 0, hjust = 0.5, vjust= 1, rot = 90, gp = gpar(fontface = "italic", fontsize = 12, col = "blue")),  bottom = textGrob(footnote2, x = 0.025, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 7.5, col = "black")))#
grid.draw(g)#
#
plot <- ggplot(votes, aes(x = votes$threeparty_vote, y = votes$threeparty_ev_vote, label = candidates, colour=party)) + geom_text(size = 2, alpha = 1) + theme_bw() + scale_shape_manual(values = candidates) + theme(legend.position="none") + scale_y_continuous(limits=c(0,100), breaks=c(0,10,20,30,40,50,60,70,80,90,100), labels = c("0%","10%","20%","30%","40%","50%","60%","70%","80%","90%","100%"), "Percentage of Electoral Votes Won") + scale_x_continuous(limits=c(0,65), breaks=c(0,10,20,30,40,50,60), labels = c("0%","10%","20%","30%","40%","50%","60%"), "Percentage of National Three-Party Popular Vote Won") + geom_vline(xintercept = 50, lty = "dashed", size = 0.33) + geom_hline(yintercept = 50, lty = "dashed", size = 0.33) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + colScale + geom_smooth(method = "glm", se=FALSE, color="black",size=0.50) + ggtitle("Relationship Between Popular Vote Percentage & \n Percentage of Electoral Votes Won, 1868-2016") + geom_point(aes(x=votes$th
reeparty_vote[which(votes$candidates == "Clinton \n2016")], y= votes$threeparty_ev_vote[which(votes$candidates == "Clinton \n2016")]), data= votes, size= 10, shape=1, color="black", lwd=1) + geom_point(aes(x=votes$threeparty_vote[which(votes$candidates == "Trump \n2016")], y= votes$threeparty_ev_vote[which(votes$candidates == "Trump \n2016")]), data= votes, size= 10, shape=1, color="black", lwd=1)#
grid.newpage()#
footnote <- "Carlos Algara: @algaraca / Data: CQ & @Redistrict 2016 Natl' Pop. Vote Tracker"#
footnote2 <- "DV: % of electoral votes won rather than votes casted, corrected for faithless electors & defection. 'Losers' that won popular vote: Tilden 1876, Cleveland 1888, Gore 2000, & Clinton 2016."#
g <- arrangeGrob(plot, right = textGrob(footnote, x = 0, hjust = 0.5, vjust= 1, rot = 90, gp = gpar(fontface = "italic", fontsize = 12, col = "blue")),  bottom = textGrob(footnote2, x = 0.025, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 7.5, col = "black")))#
grid.draw(g)#
#
plot <- ggplot(votes, aes(x = votes$threeparty_vote, y = votes$threeparty_ev_vote, label = candidates2, colour=party)) + geom_text(size = 2, alpha = 1) + theme_bw() + scale_shape_manual(values = candidates2) + theme(legend.position="none") + scale_y_continuous(limits=c(0,100), breaks=c(0,10,20,30,40,50,60,70,80,90,100), labels = c("0%","10%","20%","30%","40%","50%","60%","70%","80%","90%","100%"), "Percentage of Electoral Votes Won") + scale_x_continuous(limits=c(0,65), breaks=c(0,10,20,30,40,50,60), labels = c("0%","10%","20%","30%","40%","50%","60%"), "Percentage of National Three-Party Popular Vote Won") + geom_vline(xintercept = 50, lty = "dashed", size = 0.33) + geom_hline(yintercept = 50, lty = "dashed", size = 0.33) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + colScale + geom_smooth(method = "glm", se=FALSE, color="black",size=0.50) + ggtitle("Relationship Between Popular Vote Percentage & \n Percentage of Electoral Votes Won, 1868-2016") + geom_point(aes(x=votes$
threeparty_vote[which(votes$candidates == "Clinton \n2016")], y= votes$threeparty_ev_vote[which(votes$candidates == "Clinton \n2016")]), data= votes, size= 10, shape=1, color="black", lwd=1) + geom_point(aes(x=votes$threeparty_vote[which(votes$candidates == "Trump \n2016")], y= votes$threeparty_ev_vote[which(votes$candidates == "Trump \n2016")]), data= votes, size= 10, shape=1, color="black", lwd=1)#
grid.newpage()#
footnote <- "Carlos Algara: @algaraca / Data: CQ & @Redistrict 2016 Natl' Pop. Vote Tracker"#
footnote2 <- "DV: % of electoral votes won rather than votes casted, corrected for faithless electors & defection. 'Losers' that won popular vote: Tilden 1876, Cleveland 1888, Gore 2000, & Clinton 2016."#
g <- arrangeGrob(plot, right = textGrob(footnote, x = 0, hjust = 0.5, vjust= 1, rot = 90, gp = gpar(fontface = "italic", fontsize = 12, col = "blue")),  bottom = textGrob(footnote2, x = 0.025, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 7.5, col = "black")))#
grid.draw(g)#
#
# Two-Party Voteshare#
#
plot <- ggplot(votes, aes(x = votes$twoparty_vote, y = votes$threeparty_ev_vote, label = candidates2, colour=party)) + geom_text(size = 2, alpha = 1) + theme_bw() + scale_shape_manual(values = candidates2) + theme(legend.position="none") + scale_y_continuous(limits=c(0,100), breaks=c(0,10,20,30,40,50,60,70,80,90,100), labels = c("0%","10%","20%","30%","40%","50%","60%","70%","80%","90%","100%"), "Percentage of Electoral Votes Won") + scale_x_continuous(limits=c(30,65), breaks=c(30,40,50,60), labels = c("30%","40%","50%","60%"), "Percentage of Two-Party National Popular Vote Won") + geom_vline(xintercept = 50, lty = "dashed", size = 0.33) + geom_hline(yintercept = 50, lty = "dashed", size = 0.33) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + colScale + geom_smooth(method = "glm", se=FALSE, color="black",size=0.50) + ggtitle("Relationship Between Popular Vote Percentage & \n Percentage of Electoral Votes Won, 1868-2016") + geom_point(aes(x=votes$twoparty_vote[which(votes$ca
ndidates == "Clinton \n2016")], y= votes$threeparty_ev_vote[which(votes$candidates == "Clinton \n2016")]), data= votes, size= 10, shape=1, color="black", lwd=1) + geom_point(aes(x=votes$twoparty_vote[which(votes$candidates == "Trump \n2016")], y= votes$threeparty_ev_vote[which(votes$candidates == "Trump \n2016")]), data= votes, size= 10, shape=1, color="black", lwd=1)#
grid.newpage()#
footnote <- "Carlos Algara: @algaraca / Data: CQ & @Redistrict 2016 Natl' Pop. Vote Tracker"#
footnote2 <- "DV: % of electoral votes won rather than votes casted, corrected for faithless electors & defection. 'Losers' that won popular vote: Tilden 1876, Cleveland 1888, Gore 2000, & Clinton 2016."#
g <- arrangeGrob(plot, right = textGrob(footnote, x = 0, hjust = 0.5, vjust= 1, rot = 90, gp = gpar(fontface = "italic", fontsize = 12, col = "blue")),  bottom = textGrob(footnote2, x = 0.025, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 7.5, col = "black")))#
grid.draw(g)#
#
plot <- ggplot(votes, aes(x = votes$twoparty_vote, y = votes$threeparty_ev_vote, label = candidates, colour=party)) + geom_text(size = 2, alpha = 1) + theme_bw() + scale_shape_manual(values = candidates) + theme(legend.position="none") + scale_y_continuous(limits=c(0,100), breaks=c(0,10,20,30,40,50,60,70,80,90,100), labels = c("0%","10%","20%","30%","40%","50%","60%","70%","80%","90%","100%"), "Percentage of Electoral Votes Won") + scale_x_continuous(limits=c(30,65), breaks=c(30,40,50,60), labels = c("30%","40%","50%","60%"), "Percentage of Two-Party National Popular Vote Won") + geom_vline(xintercept = 50, lty = "dashed", size = 0.33) + geom_hline(yintercept = 50, lty = "dashed", size = 0.33) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + colScale + geom_smooth(method = "glm", se=FALSE, color="black",size=0.50) + ggtitle("Relationship Between Popular Vote Percentage & \n Percentage of Electoral Votes Won, 1868-2016") + geom_point(aes(x=votes$twoparty_vote[which(votes$cand
idates == "Clinton \n2016")], y= votes$threeparty_ev_vote[which(votes$candidates == "Clinton \n2016")]), data= votes, size= 10, shape=1, color="black", lwd=1) + geom_point(aes(x=votes$twoparty_vote[which(votes$candidates == "Trump \n2016")], y= votes$threeparty_ev_vote[which(votes$candidates == "Trump \n2016")]), data= votes, size= 10, shape=1, color="black", lwd=1)#
grid.newpage()#
footnote <- "Carlos Algara: @algaraca / Data: CQ & @Redistrict 2016 Natl' Pop. Vote Tracker"#
footnote2 <- "DV: % of electoral votes won rather than votes casted, corrected for faithless electors & defection. 'Losers' that won popular vote: Tilden 1876, Cleveland 1888, Gore 2000, & Clinton 2016."#
g <- arrangeGrob(plot, right = textGrob(footnote, x = 0, hjust = 0.5, vjust= 1, rot = 90, gp = gpar(fontface = "italic", fontsize = 12, col = "blue")),  bottom = textGrob(footnote2, x = 0.025, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 7.5, col = "black")))#
grid.draw(g)
plot <- ggplot(votes, aes(x = votes$twoparty_vote, y = votes$threeparty_ev_vote, label = candidates2, colour=party)) + geom_text(size = 2, alpha = 1) + theme_bw() + scale_shape_manual(values = candidates2) + theme(legend.position="none") + scale_y_continuous(limits=c(0,100), breaks=c(0,10,20,30,40,50,60,70,80,90,100), labels = c("0%","10%","20%","30%","40%","50%","60%","70%","80%","90%","100%"), "Percentage of Electoral Votes Won") + scale_x_continuous(limits=c(30,65), breaks=c(30,40,50,60), labels = c("30%","40%","50%","60%"), "Percentage of Two-Party National Popular Vote Won") + geom_vline(xintercept = 50, lty = "dashed", size = 0.33) + geom_hline(yintercept = 50, lty = "dashed", size = 0.33) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + colScale + geom_smooth(method = "glm", se=FALSE, color="black",size=0.50) + ggtitle("Relationship Between Popular Vote Percentage & Percentage of Electoral Votes Won, 1868-2016") + geom_point(aes(x=votes$twoparty_vote[which(votes$candi
dates == "Clinton \n2016")], y= votes$threeparty_ev_vote[which(votes$candidates == "Clinton \n2016")]), data= votes, size= 10, shape=1, color="black", lwd=1) + geom_point(aes(x=votes$twoparty_vote[which(votes$candidates == "Trump \n2016")], y= votes$threeparty_ev_vote[which(votes$candidates == "Trump \n2016")]), data= votes, size= 10, shape=1, color="black", lwd=1)#
grid.newpage()#
footnote <- "Data: CQ & @Redistrict 2016 Natl' Pop. Vote Tracker"#
footnote2 <- "DV: % of electoral votes won rather than votes casted, corrected for faithless electors & defection. 'Losers' that won popular vote: Tilden 1876, Cleveland 1888, Gore 2000, & Clinton 2016."#
g <- arrangeGrob(plot, right = textGrob(footnote, x = 0, hjust = 0.5, vjust= 1, rot = 90, gp = gpar(fontface = "italic", fontsize = 12, col = "blue")),  bottom = textGrob(footnote2, x = 0.025, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 7.5, col = "black")))#
grid.draw(g)
plot <- ggplot(votes, aes(x = votes$threeparty_vote, y = votes$threeparty_ev_vote, label = candidates, colour=party)) + geom_text(size = 2, alpha = 1) + theme_bw() + scale_shape_manual(values = candidates) + theme(legend.position="none") + scale_y_continuous(limits=c(0,100), breaks=c(0,10,20,30,40,50,60,70,80,90,100), labels = c("0%","10%","20%","30%","40%","50%","60%","70%","80%","90%","100%"), "Percentage of Electoral Votes Won") + scale_x_continuous(limits=c(0,65), breaks=c(0,10,20,30,40,50,60), labels = c("0%","10%","20%","30%","40%","50%","60%"), "Percentage of National Three-Party Popular Vote Won") + geom_vline(xintercept = 50, lty = "dashed", size = 0.33) + geom_hline(yintercept = 50, lty = "dashed", size = 0.33) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + colScale + geom_smooth(method = "glm", se=FALSE, color="black",size=0.50) + ggtitle("Relationship Between Popular Vote Percentage & Percentage of Electoral Votes Won, 1868-2016") + geom_point(aes(x=votes$three
party_vote[which(votes$candidates == "Clinton \n2016")], y= votes$threeparty_ev_vote[which(votes$candidates == "Clinton \n2016")]), data= votes, size= 10, shape=1, color="black", lwd=1) + geom_point(aes(x=votes$threeparty_vote[which(votes$candidates == "Trump \n2016")], y= votes$threeparty_ev_vote[which(votes$candidates == "Trump \n2016")]), data= votes, size= 10, shape=1, color="black", lwd=1)#
grid.newpage()#
footnote <- "Data: CQ & @Redistrict 2016 Natl' Pop. Vote Tracker"#
footnote2 <- "DV: % of electoral votes won rather than votes casted, corrected for faithless electors & defection. 'Losers' that won popular vote: Tilden 1876, Cleveland 1888, Gore 2000, & Clinton 2016."#
g <- arrangeGrob(plot, right = textGrob(footnote, x = 0, hjust = 0.5, vjust= 1, rot = 90, gp = gpar(fontface = "italic", fontsize = 12, col = "blue")),  bottom = textGrob(footnote2, x = 0.025, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 7.5, col = "black")))#
grid.draw(g)
library(foreign)#
library(MASS)#
library(UsingR)#
library(nlme)#
library(Zelig)#
library(lmtest)#
library(sandwich)#
library(car)#
library(directlabels)#
library(bbmle)#
library(maxLik)#
library(ggplot2)#
library(RGraphics)#
library(lattice)#
library(latticeExtra)#
library(VGAM)#
library(mvtnorm)#
library(ordinal)#
library(nnet)#
library(sampleSelection)#
library(pscl)#
library(lmtest)#
library(aod)#
library(scales)#
library(gridExtra)#
library(reshape2)#
library(network)#
library(Matrix)#
library(igraph)#
library(gmodels)#
library(pastecs)#
#library(dplyr)#
library(plyr)#
library(arm)#
library(coefplot)#
library(psych)#
library(descr)#
library(data.table)#
library(multiwayvcov)#
library(compositions)#
library(rms)#
library(effects)#
#
load("/Users/carlosalgara/Desktop/carlos_school/PhD_UC Davis/Prospectus/Prospectus_Ch1_Analysis/Ch1.Rdata")#
#
# Make the introductory figures for House & Senate unity changes over time & the change in relative votes that are party unit votes over time#
#
sen_party_unity <- s_partyunity#
#
sen_party_unity$dem_maj <- ifelse(sen_party_unity$year %in% seq(1914,1918,1), 1, ifelse(sen_party_unity$year %in% seq(1933,1946,1), 1, ifelse(sen_party_unity$year %in% seq(1949,1952,1), 1, ifelse(sen_party_unity$year %in% seq(1955,1980,1), 1, ifelse(sen_party_unity$year %in% seq(1987,1994,1), 1, ifelse(sen_party_unity$year %in% seq(2001,2002,1), 1, ifelse(sen_party_unity$year %in% seq(2006,2014,1), 1, 0)))))))#
#
sen_party_unity$caucus <- ifelse(sen_party_unity$dem_maj == 1 & sen_party_unity$party == "D", "Democratic Majority", ifelse(sen_party_unity$dem_maj == 1 & sen_party_unity$party == "R", "Republican Minority", ifelse(sen_party_unity$dem_maj == 0 & sen_party_unity$party == "D", "Democratic Minority", ifelse(sen_party_unity$dem_maj == 0 & sen_party_unity$party == "R", "Republican Majority", NA))))#
#
hou_party_unity <- h_partyunity#
#
hou_party_unity$dem_maj <- ifelse(hou_party_unity$year %in% 1946,1, ifelse(hou_party_unity$year %in% seq(1949,1952,1), 1, ifelse(hou_party_unity$year %in% seq(1955,1994,1), 1, ifelse(hou_party_unity$year %in% seq(2007,2010,1), 1, 0))))#
#
hou_party_unity$caucus <- ifelse(hou_party_unity$dem_maj == 1 & hou_party_unity$party == "D", "Democratic Majority", ifelse(hou_party_unity$dem_maj == 1 & hou_party_unity$party == "R", "Republican Minority", ifelse(hou_party_unity$dem_maj == 0 & hou_party_unity$party == "D", "Democratic Minority", ifelse(hou_party_unity$dem_maj == 0 & hou_party_unity$party == "R", "Republican Majority", NA))))#
#
hou_party_unity$chamber <- "U.S. House"#
sen_party_unity$chamber <- "U.S. Senate"#
#
unity <- rbind(hou_party_unity,sen_party_unity)#
rm(hou_party_unity,sen_party_unity)#
#
unity$caucus <- factor(unity$caucus, levels=c("Democratic Majority","Democratic Minority","Republican Majority","Republican Minority"))#
myColors <- c("blue","blue","red","red")#
names(myColors) <- levels(unity$caucus)#
colScale <- scale_colour_manual("Mean Party Unity",values = myColors)#
myShapes <- c(16,1,17,2)#
names(myShapes) <- levels(unity$caucus)#
colShape <- scale_shape_manual("Mean Party Unity",values=myShapes)#
pd <- position_dodge(width=1)#
#
#CREATE PLOT HERE PICK UP WHERE LEFT OFF WITH FACET WRAP, ERROR BARS INDICATING QUANTILES AT MIN AND MAX, OVER TIME#
#
plot <- ggplot(subset(unity,unity$year >= 1974), aes(x=year, y=party_mean_unity, shape=caucus, group = caucus, colour=caucus)) + theme_bw() + facet_wrap(~chamber, ncol = 1, scales = "free_y") + colScale + colShape + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(size=8)) +  geom_pointrange(aes(ymin = party_unity_quantile1, ymax = party_unity_quantile3), position = pd) + guides(color=guide_legend(override.aes=list(linetype=c("blank","blank","blank","blank")))) + theme(legend.position=c(0.90, 0.65), legend.key.size = unit(0.8,"line"), legend.key = element_blank()) + scale_y_continuous(breaks=seq(0.40,1.0,0.10), "Congressional Party Unity") + scale_x_continuous(breaks=seq(1974,2016,2), "")#
grid.newpage()#
footnote <- "Point ranges indicate distance between 25% percentile to 75% quantile with respect to party unity."#
g <- arrangeGrob(plot, bottom = textGrob(footnote, x = 0.015, y = 1, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 9, col = "black"))) #
grid.draw(g)#
#
plot <- ggplot(unity, aes(x=year, y=party_mean_unity, shape=caucus, group = caucus, colour=caucus)) + theme_bw() + facet_wrap(~chamber, ncol = 1, scales = "free_y") + colScale + colShape + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(size=8)) +  geom_pointrange(aes(ymin = party_unity_quantile1, ymax = party_unity_quantile3), position = pd) + guides(color=guide_legend(override.aes=list(linetype=c("blank","blank","blank","blank")))) + theme(legend.position=c(0.90, 0.65), legend.key.size = unit(0.8,"line"), legend.key = element_blank()) + scale_y_continuous(breaks=seq(0.30,1.0,0.10), limits=c(0.40,1.0), "Congressional Party Unity") + scale_x_continuous(breaks=seq(1948,2016,4), "") + ggtitle("Congressional Party Unity during the Post-War Period, 1946-2016")#
grid.newpage()#
footnote <- "Point ranges indicate distance between 25% percentile to 75% quantile with respect to party unity."#
footnote2 <- "Carlos Algara: @algaraca / Data: Rvoteview Scrape"#
g <- arrangeGrob(plot,  right = textGrob(footnote2, x = 0, hjust = 0.5, vjust= 1, rot = 90, gp = gpar(fontface = "italic", fontsize = 12, col = "blue")), bottom = textGrob(footnote, x = 0.015, y = 1, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 9, col = "black"))) #
grid.draw(g)
plot <- ggplot(unity, aes(x=year, y=party_mean_unity, shape=caucus, group = caucus, colour=caucus)) + theme_bw() + facet_wrap(~chamber, ncol = 1, scales = "free_y") + colScale + colShape + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(size=8)) +  geom_pointrange(aes(ymin = party_unity_quantile1, ymax = party_unity_quantile3), position = pd) + guides(color=guide_legend(override.aes=list(linetype=c("blank","blank","blank","blank")))) + theme(legend.position=c(0.90, 0.65), legend.key.size = unit(0.8,"line"), legend.key = element_blank()) + scale_y_continuous(breaks=seq(0.30,1.0,0.10), limits=c(0.40,1.0), "Congressional Party Unity") + scale_x_continuous(breaks=seq(1948,2016,4), "") + ggtitle("Congressional Party Unity during the Post-War Period, 1946-2016")#
grid.newpage()#
footnote <- "Point ranges indicate distance between 25% percentile to 75% quantile with respect to party unity."#
footnote2 <- "Data: Rvoteview Scrape"#
g <- arrangeGrob(plot,  right = textGrob(footnote2, x = 0, hjust = 0.5, vjust= 1, rot = 90, gp = gpar(fontface = "italic", fontsize = 12, col = "blue")), bottom = textGrob(footnote, x = 0.015, y = 1, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 9, col = "black"))) #
grid.draw(g)
x <- read.csv("/Users/carlosalgara/Desktop/countries.csv", stringsAsFactors=FALSE, na.strings=c(""," ","NA"))#
#
x$country_factor <- factor(x$colonizer,levels=c("Britain","France","Russia"))#
x$country_num <- as.numeric(x$country_factor)#
x$democracy <- as.numeric(x$democracy)#
#
ggplot(x,aes(x=country_factor,y=democracy)) + geom_point() + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + geom_smooth(method = "glm", se=FALSE, color="black",size=0.50)#
#
plot <- ggplot(x, aes(x = x$country_num, y = x$democracy)) + theme_bw() + geom_point() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + geom_smooth(method = "glm", se=T, color="black",size=0.50) + scale_x_continuous("Colonizing Power",breaks=c(1,2,3), labels=c("Britian","France","Russia")) + scale_y_continuous("Levels of Democracy (Polity Scores)") + ggtitle("Effect of Colonizing Power on Levels of Democracy, 21 Years After Independence")#
grid.newpage()#
footnote <- "Higher scores on Polity scores indicate higher levels of democracy."#
g <- arrangeGrob(plot, bottom = textGrob(footnote, x = 0.015, y = 0.5, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 10, col = "black"))) #
grid.draw(g)
library(foreign)#
library(MASS)#
library(UsingR)#
library(nlme)#
library(Zelig)#
library(lmtest)#
library(sandwich)#
library(car)#
library(directlabels)#
library(bbmle)#
library(maxLik)#
library(ggplot2)#
library(RGraphics)#
library(lattice)#
library(latticeExtra)#
library(VGAM)#
library(mvtnorm)#
library(ordinal)#
library(nnet)#
library(sampleSelection)#
library(pscl)#
library(lmtest)#
library(aod)#
library(scales)#
library(gridExtra)#
library(reshape2)#
library(network)#
library(Matrix)#
library(igraph)#
library(gmodels)#
library(pastecs)#
library(dplyr)#
library(plyr)#
library(coefplot)#
library(psych)#
library(descr)#
library(data.table)#
library(multiwayvcov)#
library(compositions)#
library(rms)#
library(effects)
x <- read.csv("/Users/carlosalgara/Desktop/countries.csv", stringsAsFactors=FALSE, na.strings=c(""," ","NA"))#
#
x$country_factor <- factor(x$colonizer,levels=c("Britain","France","Russia"))#
x$country_num <- as.numeric(x$country_factor)#
x$democracy <- as.numeric(x$democracy)#
#
ggplot(x,aes(x=country_factor,y=democracy)) + geom_point() + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + geom_smooth(method = "glm", se=FALSE, color="black",size=0.50)#
#
plot <- ggplot(x, aes(x = x$country_num, y = x$democracy)) + theme_bw() + geom_point() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + geom_smooth(method = "glm", se=T, color="black",size=0.50) + scale_x_continuous("Colonizing Power",breaks=c(1,2,3), labels=c("Britian","France","Russia")) + scale_y_continuous("Levels of Democracy (Polity Scores)") + ggtitle("Effect of Colonizing Power on Levels of Democracy, 21 Years After Independence")#
grid.newpage()#
footnote <- "Higher scores on Polity scores indicate higher levels of democracy."#
g <- arrangeGrob(plot, bottom = textGrob(footnote, x = 0.015, y = 0.5, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 10, col = "black"))) #
grid.draw(g)
2000-1974
26 * 4
library(Rvoteview)#
s <- voteview_search("", chamber = "Senate", congress=115)#
sr <- voteview_download(s$id)#
#
library(wnominate)#
#
result <- wnominate(sr, ubeta = 15, uweights = 0.5, dims = 2, minvotes = 20, lop = 0.025, trials = 3, polarity=list("icpsr", c(sr$legis.data$icpsr[which.max(sr$legis.data$dim1)],sr$legis.data$icpsr[which.max(sr$legis.data$dim2)])))#
#
nrollcall <- 143 # Get the Saudi vote#
vote <- as.integer(sr$votes[,nrollcall]) # store legislator's votes in the vector "vote"#
DL1 <- result$rollcalls[nrollcall,7] # assign first dimension spread#
DL2 <- result$rollcalls[nrollcall,8] # assign second dimension spread#
ZM1 <- result$rollcalls[nrollcall,9] # assign first dimension midpoint#
ZM2 <- result$rollcalls[nrollcall,10] # assign second dimension midpoint#
YEA1 <- ZM1-DL1 # calculate the location of the yea alternative#
WEIGHT <- (result$weights[2])/(result$weights[1]) # calculate the dimension weight#
YEA2W <- (ZM2-DL2)*WEIGHT # ""#
NAY1 <- ZM1+DL1 # calculate the location of the nay alternative#
NAY2W <- (ZM2+DL2)*WEIGHT # ""#
A1 <- NAY1 - YEA1 # in order to calcuate the normal vector, calculate the distances on first dimension#
A2 <- NAY2W - YEA2W # in order to calcuate the normal vector, calculate the distances on second dimension#
#
# Calculate normal vector. "Note that the normal vector is reflected around the origin, and so#
# we can flip the coordinates N1W and N2W (multiplying both by −1) so that the first-dimension coordinate # of the normal vector is positive" (Armstrong et al. 2014). This will give us the normal vector for cutting plane of the vote#
ALENGTH <- sqrt(A1*A1 + A2*A2)#
N1W <- A1/ALENGTH#
N2W <- A2/ALENGTH#
if (N1W < 0){#
  N1W <- -N1W#
  N2W <- -N2W#
}#
#
# Calculate the cutting plane. "Specifically, the cutting plane is the line between the points (xws+N2W,yws-N1W) and (xws-N2W,yws+N1W)" (Armstrong et al. 2014)#
#
ws <- N1W*ZM1 + N2W*ZM2*WEIGHT#
xws <- ws*N1W#
yws <- ws*N2W#
#
# Make the plot#
#
x <- result$legislators#
x$lastname <- gsub(",.*$", "", x$name)#
x$state_abbrev <- paste("(",x$state_abbrev,")")#
x$state_abbrev <- gsub(" ","",x$state_abbrev)#
x$label <- paste(x$lastname,x$state_abbrev)#
x$party_code <- ifelse(x$party_code %in% 328, 100, x$party_code)#
x$party_code <- factor(x$party_code)#
#
myColors <- c("blue","red")#
names(myColors) <- levels(x$party_code)#
#
library(ggplot2)#
library(grid)#
library(gridExtra)#
#
colScale <- scale_colour_manual("",values = myColors, guide = FALSE)#
#
# Drop Sessions#
#
x <- subset(x,x$icpsr != 49700)#
#
x$leg <- s$text[s$rollnumber == 143]#
#
cutting_line <- data.frame(x_start = xws+N2W, y_start = yws-N1W, xend = xws-N2W, yend = yws+N1W)#
#
plot <- ggplot(x, aes(x = x$coord1D, y = x$coord2D, label = label, colour=party_code)) + geom_text(size = 2, alpha = 1) + theme_bw() + scale_shape_manual(values = label) + theme(legend.position=c(0.86, 0.86), legend.key.size = unit(1.70,"line")) + scale_y_continuous(limits=c(-1,1), breaks=seq(-1,1,0.5), "Second Dimension (W-NOMINATE)") + scale_x_continuous(limits=c(-1,1), breaks=seq(-1,1,0.5), "First Dimension (W-NOMINATE)") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + colScale + ggtitle("U.S. Senate Rollcall Vote #143 on Motion to Discharge S.J.Res.42; June 6, 2017") + facet_wrap(~leg, ncol = 1, scales = "free_x") +  geom_segment(data = cutting_line, aes(x = x_start, y = y_start, xend =xend, yend = yend), inherit.aes = F) + annotate(geom = "text", x = -0.5, y = -0.80, label = "Predicted Yea", color = "blue") + annotate(geom = "text", x = 0.5, y = 0.80, label = "Predicted Nay", color = "red") + geom_rug(aes(x=x$coord1D, y=1.01),color = "gray30", alpha=.5, size = 0.25, po
sition='jitter') + annotate(geom = "text", x = -0.5, y = -0.80, label = "Predicted Yea", color = "blue") + annotate(geom = "text", x = -0.95, y = 1, label = "Yea = 47", color = "blue") + annotate(geom = "text", x = -0.95, y = 0.925, label = "Nay = 53", color = "red")#
grid.newpage()#
footnote <- "Code estimating cutting plane from Armstrong, Bakker, Carroll, Hare & Poole (2014)."#
footnote2 <- "Carlos Algara: @algaraca / Data: Rvoteview Scrape"#
g <- arrangeGrob(plot, right = textGrob(footnote2, x = 0, hjust = 0.5, vjust= 1, rot = 90, gp = gpar(fontface = "italic", fontsize = 12, col = "blue")), bottom = textGrob(footnote, x = 0.015, y = 0.55, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 9, col = "black"))) #
grid.draw(g)
library(Rvoteview)#
library(ggplot2)#
library(grid)#
library(gridExtra)#
library(wnominate)#
#
s <- voteview_search("", chamber = "Senate", congress=115)#
sr <- voteview_download(s$id)#
#
result <- wnominate(sr, ubeta = 15, uweights = 0.5, dims = 2, minvotes = 20, lop = 0.025, trials = 3, polarity=list("icpsr", c(sr$legis.data$icpsr[which.max(sr$legis.data$dim1)],sr$legis.data$icpsr[which.max(sr$legis.data$dim2)])))#
#
nrollcall <- 143 # Get the Saudi vote#
vote <- as.integer(sr$votes[,nrollcall]) # store legislator's votes in the vector "vote"#
DL1 <- result$rollcalls[nrollcall,7] # assign first dimension spread#
DL2 <- result$rollcalls[nrollcall,8] # assign second dimension spread#
ZM1 <- result$rollcalls[nrollcall,9] # assign first dimension midpoint#
ZM2 <- result$rollcalls[nrollcall,10] # assign second dimension midpoint#
YEA1 <- ZM1-DL1 # calculate the location of the yea alternative#
WEIGHT <- (result$weights[2])/(result$weights[1]) # calculate the dimension weight#
YEA2W <- (ZM2-DL2)*WEIGHT # ""#
NAY1 <- ZM1+DL1 # calculate the location of the nay alternative#
NAY2W <- (ZM2+DL2)*WEIGHT # ""#
A1 <- NAY1 - YEA1 # in order to calcuate the normal vector, calculate the distances on first dimension#
A2 <- NAY2W - YEA2W # in order to calcuate the normal vector, calculate the distances on second dimension#
#
# Calculate normal vector. "Note that the normal vector is reflected around the origin, and so#
# we can flip the coordinates N1W and N2W (multiplying both by −1) so that the first-dimension coordinate # of the normal vector is positive" (Armstrong et al. 2014). This will give us the normal vector for cutting plane of the vote#
ALENGTH <- sqrt(A1*A1 + A2*A2)#
N1W <- A1/ALENGTH#
N2W <- A2/ALENGTH#
if (N1W < 0){#
  N1W <- -N1W#
  N2W <- -N2W#
}#
#
# Calculate the cutting plane. "Specifically, the cutting plane is the line between the points (xws+N2W,yws-N1W) and (xws-N2W,yws+N1W)" (Armstrong et al. 2014)#
#
ws <- N1W*ZM1 + N2W*ZM2*WEIGHT#
xws <- ws*N1W#
yws <- ws*N2W#
#
# Make the plot#
#
x <- result$legislators#
x$lastname <- gsub(",.*$", "", x$name)#
x$state_abbrev <- paste("(",x$state_abbrev,")")#
x$state_abbrev <- gsub(" ","",x$state_abbrev)#
x$label <- paste(x$lastname,x$state_abbrev)#
x$party_code <- ifelse(x$party_code %in% 328, 100, x$party_code)#
x$party_code <- factor(x$party_code)#
#
# Color based on observed votes#
#
obs_vote <- data.frame(vote = sr$votes[,nrollcall])#
obs_vote$icpsr <- rownames(obs_vote)#
# Drop Sessions#
obs_vote <- subset(obs_vote,obs_vote$icpsr != 49700)#
obs_vote$vote <- ifelse(obs_vote$vote == 6,"Nay",ifelse(obs_vote$vote == 1, "Yea", NA))#
obs_vote$vote <- factor(obs_vote$vote,levels=c("Nay","Yea"))#
#
# Drop Sessions again#
x <- subset(x,x$icpsr != 49700)#
x <- merge(x,obs_vote,by=c("icpsr"))#
#Specify color#
myColors <- c("red","blue")#
names(myColors) <- levels(x$vote)#
#
colScale <- scale_colour_manual("",values = myColors, guide = FALSE)#
#
# Substance of legislation#
x$leg <- s$text[s$rollnumber == 143]#
#
# Cutting plane coordinates#
cutting_line <- data.frame(x_start = xws+N2W, y_start = yws-N1W, xend = xws-N2W, yend = yws+N1W)#
#
plot <- ggplot(x, aes(x = x$coord1D, y = x$coord2D, label = label, colour=vote)) + geom_text(size = 2, alpha = 1) + theme_bw() + scale_shape_manual(values = label) + theme(legend.position=c(0.86, 0.86), legend.key.size = unit(1.70,"line")) + scale_y_continuous(limits=c(-1,1), breaks=seq(-1,1,0.5), "Second Dimension (W-NOMINATE)") + scale_x_continuous(limits=c(-1,1), breaks=seq(-1,1,0.5), "First Dimension (W-NOMINATE)") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + colScale + ggtitle("U.S. Senate Rollcall Vote #143 on Motion to Discharge S.J.Res.42; June 6, 2017") + facet_wrap(~leg, ncol = 1, scales = "free_x") +  geom_segment(data = cutting_line, aes(x = x_start, y = y_start, xend =xend, yend = yend), inherit.aes = F) + annotate(geom = "text", x = -0.5, y = -0.80, label = "Predicted Yea", color = "blue") + annotate(geom = "text", x = 0.5, y = 0.80, label = "Predicted Nay", color = "red") + geom_rug(aes(x=x$coord1D, y=1.01),color = "gray30", alpha=.5, size = 0.25, position
='jitter') + annotate(geom = "text", x = -0.5, y = -0.80, label = "Predicted Yea", color = "blue") + annotate(geom = "text", x = -0.95, y = 1, label = "Yea = 47", color = "blue") + annotate(geom = "text", x = -0.95, y = 0.925, label = "Nay = 53", color = "red")#
grid.newpage()#
footnote <- "Code estimating cutting plane from Armstrong, Bakker, Carroll, Hare & Poole (2014)."#
footnote2 <- "Carlos Algara: @algaraca / Data: Rvoteview Scrape"#
g <- arrangeGrob(plot, right = textGrob(footnote2, x = 0, hjust = 0.5, vjust= 1, rot = 90, gp = gpar(fontface = "italic", fontsize = 12, col = "blue")), bottom = textGrob(footnote, x = 0.015, y = 0.55, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 9, col = "black"))) #
grid.draw(g)
library(Rvoteview)#
library(ggplot2)#
library(grid)#
library(gridExtra)#
library(wnominate)#
#
s <- voteview_search("", chamber = "Senate", congress=115)#
sr <- voteview_download(s$id)#
#
result <- wnominate(sr, ubeta = 15, uweights = 0.5, dims = 2, minvotes = 20, lop = 0.025, trials = 3, polarity=list("icpsr", c(sr$legis.data$icpsr[which.max(sr$legis.data$dim1)],sr$legis.data$icpsr[which.max(sr$legis.data$dim2)])))#
#
nrollcall <- 143 # Get the Saudi vote#
vote <- as.integer(sr$votes[,nrollcall]) # store legislator's votes in the vector "vote"#
DL1 <- result$rollcalls[nrollcall,7] # assign first dimension spread#
DL2 <- result$rollcalls[nrollcall,8] # assign second dimension spread#
ZM1 <- result$rollcalls[nrollcall,9] # assign first dimension midpoint#
ZM2 <- result$rollcalls[nrollcall,10] # assign second dimension midpoint#
YEA1 <- ZM1-DL1 # calculate the location of the yea alternative#
WEIGHT <- (result$weights[2])/(result$weights[1]) # calculate the dimension weight#
YEA2W <- (ZM2-DL2)*WEIGHT # ""#
NAY1 <- ZM1+DL1 # calculate the location of the nay alternative#
NAY2W <- (ZM2+DL2)*WEIGHT # ""#
A1 <- NAY1 - YEA1 # in order to calcuate the normal vector, calculate the distances on first dimension#
A2 <- NAY2W - YEA2W # in order to calcuate the normal vector, calculate the distances on second dimension#
#
# Calculate normal vector. "Note that the normal vector is reflected around the origin, and so#
# we can flip the coordinates N1W and N2W (multiplying both by −1) so that the first-dimension coordinate # of the normal vector is positive" (Armstrong et al. 2014). This will give us the normal vector for cutting plane of the vote#
ALENGTH <- sqrt(A1*A1 + A2*A2)#
N1W <- A1/ALENGTH#
N2W <- A2/ALENGTH#
if (N1W < 0){#
  N1W <- -N1W#
  N2W <- -N2W#
}#
#
# Calculate the cutting plane. "Specifically, the cutting plane is the line between the points (xws+N2W,yws-N1W) and (xws-N2W,yws+N1W)" (Armstrong et al. 2014)#
#
ws <- N1W*ZM1 + N2W*ZM2*WEIGHT#
xws <- ws*N1W#
yws <- ws*N2W#
#
# Make the plot#
#
x <- result$legislators#
x$lastname <- gsub(",.*$", "", x$name)#
x$state_abbrev <- paste("(",x$state_abbrev,")")#
x$state_abbrev <- gsub(" ","",x$state_abbrev)#
x$label <- paste(x$lastname,x$state_abbrev)#
x$party_code <- ifelse(x$party_code %in% 328, 100, x$party_code)#
x$party_code <- factor(x$party_code)#
#
# Color based on observed votes#
#
obs_vote <- data.frame(vote = sr$votes[,nrollcall])#
obs_vote$icpsr <- rownames(obs_vote)#
# Drop Sessions#
obs_vote <- subset(obs_vote,obs_vote$icpsr != 49700)#
obs_vote$vote <- ifelse(obs_vote$vote == 6,"Nay",ifelse(obs_vote$vote == 1, "Yea", NA))#
obs_vote$vote <- factor(obs_vote$vote,levels=c("Nay","Yea"))#
#
# Drop Sessions again#
x <- subset(x,x$icpsr != 49700)#
x <- merge(x,obs_vote,by=c("icpsr"))#
#Specify color#
myColors <- c("red","blue")#
names(myColors) <- levels(x$vote)#
#
colScale <- scale_colour_manual("",values = myColors, guide = FALSE)#
#
# Substance of legislation#
x$leg <- s$text[s$rollnumber == 143]#
#
# Cutting plane coordinates#
cutting_line <- data.frame(x_start = xws+N2W, y_start = yws-N1W, xend = xws-N2W, yend = yws+N1W)#
#
# Number of errors#
X1 <- result$legislators$coord1D#
X2 <- (result$legislators$coord2D)*WEIGHT#
kpyea <- sum(vote==1)#
kpnay <- sum(vote==6)#
polarity <- X1*N1W + X2*N2W - ws#
errors1 <- vote==1 & polarity >= 0#
errors2 <- vote==6 & polarity <= 0#
errors3 <- vote==1 & polarity <= 0#
errors4 <- vote==6 & polarity >= 0#
kerrors12 <- sum(errors1==1,na.rm=T)+sum(errors2==1,na.rm=T)#
kerrors34 <- sum(errors3==1,na.rm=T)+sum(errors4==1,na.rm=T)#
if (kerrors12 >= kerrors34){#
  yeaerror <- errors3 #
  nayerror <- errors4#
}#
if (kerrors12 < kerrors34){#
  yeaerror <- errors1#
  nayerror <- errors2#
}#
kerrorsmin <- min(kerrors12,kerrors34)#
PRE <- (min(kpyea,kpnay) - kerrorsmin) / min(kpyea,kpnay) # Proportional Reduction in error#
errors <- paste("Errors =",kerrorsmin)#
prel <- paste("PRE =",round(PRE, digits = 3))#
#
plot <- ggplot(x, aes(x = x$coord1D, y = x$coord2D, label = label, colour=vote)) + geom_text(size = 2, alpha = 1) + theme_bw() + scale_shape_manual(values = label) + theme(legend.position=c(0.86, 0.86), legend.key.size = unit(1.70,"line")) + scale_y_continuous(limits=c(-1,1), breaks=seq(-1,1,0.5), "Second Dimension (W-NOMINATE)") + scale_x_continuous(limits=c(-1,1), breaks=seq(-1,1,0.5), "First Dimension (W-NOMINATE)") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + colScale + ggtitle("U.S. Senate Rollcall Vote #143 on Motion to Discharge S.J.Res.42; June 6, 2017") + facet_wrap(~leg, ncol = 1, scales = "free_x") +  geom_segment(data = cutting_line, aes(x = x_start, y = y_start, xend =xend, yend = yend), inherit.aes = F) + annotate(geom = "text", x = -0.5, y = -0.80, label = "Predicted Yea", color = "blue") + annotate(geom = "text", x = 0.5, y = 0.80, label = "Predicted Nay", color = "red") + geom_rug(aes(x=x$coord1D, y=1.01),color = "gray30", alpha=.5, size = 0.25, position
='jitter') + annotate(geom = "text", x = -0.5, y = -0.80, label = "Predicted Yea", color = "blue") + annotate(geom = "text", x = -0.95, y = 1, label = "Yea = 47", color = "blue") + annotate(geom = "text", x = -0.95, y = 0.925, label = "Nay = 53", color = "red") + annotate(geom = "text", x = -0.95, y = 0.85, label = errors, color = "black") + annotate(geom = "text", x = -0.95, y = 0.775, label = prel, color = "black")#
grid.newpage()#
footnote <- "Code estimating cutting plane, error, & PRE from Armstrong, Bakker, Carroll, Hare & Poole (2014)."#
footnote2 <- "Carlos Algara: @algaraca / Data: Rvoteview Scrape"#
g <- arrangeGrob(plot, right = textGrob(footnote2, x = 0, hjust = 0.5, vjust= 1, rot = 90, gp = gpar(fontface = "italic", fontsize = 12, col = "blue")), bottom = textGrob(footnote, x = 0.015, y = 0.55, hjust = 0, vjust= 0, gp = gpar(fontface = "italic", fontsize = 9, col = "black"))) #
grid.draw(g)
library(gsheet) # Use the gsheet package to scrape voter turnout data from the Elect Project#
turnout <- gsheet2tbl('https://docs.google.com/spreadsheets/d/1bH38j6_e8yA9xq8OMlyLOL6h_iTS7ABQMKNxzFgKBDo/edit?usp=sharing') #Turnout from 1789-2014#
turnout2016 <- gsheet2tbl('https://docs.google.com/spreadsheets/d/1VAcF0eJ06y_8T4o2gvIL4YcyQy8pxb1zYkgXF76Uu1s/edit#gid=2030096602')#
#
# Clean-up data#
pres_turnout <- turnout[,1:2]#
midterm_turnout <- turnout[,3:4]#
colnames(pres_turnout) <- c("year","vep_turnout_rate")#
colnames(midterm_turnout) <- c("year","vep_turnout_rate")#
pres_turnout$election <- "Presidential Election"#
midterm_turnout$election <- "Midterm Election"#
turnout <- rbind(pres_turnout,midterm_turnout)#
#
turnout2016 <- turnout2016[2,c(4)]#
colnames(turnout2016) <- "vep_turnout_rate"#
turnout2016$election <- "Presidential Election"#
turnout2016$year <- 2016#
turnout2016$vep_turnout_rate <- gsub("%","",turnout2016$vep_turnout_rate)#
#
turnout <- rbind(turnout,turnout2016)#
turnout$vep_turnout_rate <- as.numeric(turnout$vep_turnout_rate)#
turnout$election <- factor(turnout$election,levels=c("Presidential Election","Midterm Election"))
# Make the plot#
library(ggplot2)#
# One cumulative trend of decline in voter turnout since the Civil War#
ggplot(subset(turnout,turnout$year >= 1866), aes(x=year,y=vep_turnout_rate)) + geom_point(mapping=aes(x=year,y=vep_turnout_rate, shape=election,colour=election),inherit.aes = F) + scale_shape_manual("",values=c(16,18)) + scale_colour_manual("",values=c("cyan3","firebrick3")) + theme_bw() + theme(legend.position=c(0.875, 0.85), legend.key.size = unit(0.9,"line"), legend.key = element_blank()) + scale_y_continuous(limits=c(30,90),breaks=seq(30,90,10),labels=c("30%","40%","50%","60%","70%","80%","90%"), "Eligible Voter Turnout Rate") + scale_x_continuous(breaks=seq(1866,2016,10), "") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + geom_smooth(method = "loess", se=FALSE, color="black", size = 0.75) + ggtitle("National Voter-Turnout in Presidential & Midterm Elections in the United States, 1866-2016") + annotate(geom = "text", x = 1918, y = 80, label = "Women's Suffrage", color = "blue", angle = 90, size = 3.5) + geom_vline(xintercept=1920,linetype = "dashed",color="gray") + ann
otate(geom = "text", x = 1868, y = 40, label = "15th Amendment", color = "blue", angle = 90, size = 3.5) + geom_vline(xintercept=1870,linetype = "dashed",color="gray") + annotate(geom = "text", x = 1958, y = 80, label = "DC Suffrage", color = "blue", angle = 90, size = 3.5) + geom_vline(xintercept=1960,linetype = "dashed",color="gray") + annotate(geom = "text", x = 1963, y = 80, label = "Voting Rights Act", color = "blue", angle = 90, size = 3.5) + geom_vline(xintercept=1965,linetype = "dashed",color="gray") + annotate(geom = "text", x = 1969, y = 80, label = "Lowering Voting Age", color = "blue", angle = 90, size = 3.5) + geom_vline(xintercept=1971,linetype = "dashed",color="gray")
ggplot(subset(turnout,turnout$year >= 1866), aes(x=year,y=vep_turnout_rate, shape=election,colour=election)) + geom_point() + scale_shape_manual("",values=c(16,18)) + scale_colour_manual("",values=c("cyan3","firebrick3")) + theme_bw() + theme(legend.position=c(0.875, 0.85), legend.key.size = unit(0.9,"line"), legend.key = element_blank()) + scale_y_continuous(limits=c(30,90),breaks=seq(30,90,10),labels=c("30%","40%","50%","60%","70%","80%","90%"), "Eligible Voter Turnout Rate") + scale_x_continuous(breaks=seq(1866,2016,10), "") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + geom_smooth(method = "loess", se=FALSE, size = 0.75) + ggtitle("National Voter-Turnout in Presidential & Midterm Elections in the United States, 1866-2016") + annotate(geom = "text", x = 1918, y = 80, label = "Women's Suffrage", color = "blue", angle = 90, size = 3.5) + geom_vline(xintercept=1920,linetype = "dashed",color="gray") + annotate(geom = "text", x = 1868, y = 40, label = "15th Amendment", colo
r = "blue", angle = 90, size = 3.5) + geom_vline(xintercept=1870,linetype = "dashed",color="gray") + annotate(geom = "text", x = 1958, y = 80, label = "DC Suffrage", color = "blue", angle = 90, size = 3.5) + geom_vline(xintercept=1960,linetype = "dashed",color="gray") + annotate(geom = "text", x = 1963, y = 80, label = "Voting Rights Act", color = "blue", angle = 90, size = 3.5) + geom_vline(xintercept=1965,linetype = "dashed",color="gray") + annotate(geom = "text", x = 1969, y = 80, label = "Lowering Voting Age", color = "blue", angle = 90, size = 3.5) + geom_vline(xintercept=1971,linetype = "dashed",color="gray")
library(readstata13)#
cces <- read.dta13("/Users/carlosalgara/Dropbox/CCES2016_Common_original/CCES2016.dta")#
#
# Variation in political participation#
#
participation <- subset(cces,select=c(commonweight_post,CC16_300d_5,CC16_316,CC16_327,CC16_404,CC16_417a_1,CC16_417a_2,CC16_417a_3,CC16_417a_4,CC16_418a))#
colnames(participation) <- c("weight","social_media","pres_vote_12","pres_primary_vote","voting_time","attend_polmeetings","yard_sign","volunteer_campaign","donate_money","run_for_office")#
#
participation[] <- lapply(participation, as.character)#
participation[participation == "Yes"] <- 1#
participation[participation == "No"] <- 0#
participation[participation == "Yes, I definitely voted."] <- 1#
participation[participation == "I usually vote but did not vote in 2012"] <- 0#
participation[participation == "I am not sure"] <- 0#
#
participation[participation == "No, didn’t vote in a primary or caucus"] <- 0#
participation[participation == "Yes, voted in a primary or caucus"] <- 1#
#
participation$voting_time[participation$voting_time == "Don't know"] <- NA#
participation$voting_time[participation$voting_time == "Not at all"] <- 0#
participation$voting_time[participation$voting_time == "Less than 10 minutes"] <- 1#
participation$voting_time[participation$voting_time == "10 - 30 minutes"] <- 2#
participation$voting_time[participation$voting_time == "31 minutes - 1 hour"] <- 3#
participation$voting_time[participation$voting_time == "More than 1 hour"] <- 4#
#
participation[] <- lapply(participation, as.numeric)#
library(descr)#
#
frequencies <- list()#
for(i in 2:ncol(participation)){#
  x <- data.frame(freq(participation[,i],w=participation$weight))#
  x$category <- rownames(x)#
  x <- x[,3:4]#
  x <- subset(x,x$category != "Total")#
  x <- subset(x,x$category != "NA's")#
  x$activity <- colnames(participation)[[i]]#
  frequencies[[i]] <- x#
}#
library(plyr)#
frequencies <- ldply(frequencies, data.frame)#
#
frequencies$category[frequencies$activity != "voting_time" & frequencies$category == 1] <- "Yes"#
frequencies$category[frequencies$activity != "voting_time" & frequencies$category == 0] <- "No"#
frequencies$category[frequencies$activity == "voting_time" & frequencies$category == 0] <- "0 \nNo Wait"#
frequencies$category[frequencies$activity == "voting_time" & frequencies$category == 4] <- "4 \n>1 Hour"#
#
frequencies$activity[frequencies$activity == "attend_polmeetings"] <- "Attend local political meetings?"#
frequencies$activity[frequencies$activity == "donate_money"] <- "Donate money to a candidate, campaign, or political organization?"#
frequencies$activity[frequencies$activity == "pres_primary_vote"] <- "Voted in the 2012 Presidential Primaries?"#
frequencies$activity[frequencies$activity == "run_for_office"] <- "Ever run for elective office"#
frequencies$activity[frequencies$activity == "social_media"] <- "Forwarded a story, photo, video or link about politics to friends?"#
frequencies$activity[frequencies$activity == "volunteer_campaign"] <- "Work for a candidate or campaign?"#
frequencies$activity[frequencies$activity == "yard_sign"] <- "Put up a political sign?"#
frequencies$activity[frequencies$activity == "pres_vote_12"] <- "Voted in the 2012 Presidential Election?"#
frequencies$activity[frequencies$activity == "voting_time"] <- "Time took to vote"#
#
ggplot(frequencies, aes(x=category,y=Valid.Percent)) + theme_bw() + geom_bar(stat="identity") + theme_bw()  + facet_wrap(~activity, ncol = 3, scales = "free") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + ggtitle("Variation in Different Activities of Political Participation, 2016 Cooperative Congressional Election Study") + scale_y_continuous("Weighted Percentage") + scale_x_discrete("")
library(readstata13)#
cces <- read.dta13("/Users/carlosalgara/Dropbox/CCES2016_Common_original/CCES2016.dta")#
#
# Variation in political participation#
#
participation <- subset(cces,select=c(commonweight_post,CC16_300d_5,CC16_316,CC16_327,CC16_404,CC16_417a_1,CC16_417a_2,CC16_417a_3,CC16_417a_4,CC16_418a))#
colnames(participation) <- c("weight","social_media","pres_vote_12","pres_primary_vote","voting_time","attend_polmeetings","yard_sign","volunteer_campaign","donate_money","run_for_office")#
#
participation[] <- lapply(participation, as.character)#
participation[participation == "Yes"] <- 1#
participation[participation == "No"] <- 0#
participation[participation == "Yes, I definitely voted."] <- 1#
participation[participation == "I usually vote but did not vote in 2012"] <- 0#
participation[participation == "I am not sure"] <- 0#
#
participation[participation == "No, didn’t vote in a primary or caucus"] <- 0#
participation[participation == "Yes, voted in a primary or caucus"] <- 1#
#
participation$voting_time[participation$voting_time == "Don't know"] <- NA#
participation$voting_time[participation$voting_time == "Not at all"] <- 0#
participation$voting_time[participation$voting_time == "Less than 10 minutes"] <- 1#
participation$voting_time[participation$voting_time == "10 - 30 minutes"] <- 2#
participation$voting_time[participation$voting_time == "31 minutes - 1 hour"] <- 3#
participation$voting_time[participation$voting_time == "More than 1 hour"] <- 4#
#
participation[] <- lapply(participation, as.numeric)#
library(descr)#
#
frequencies <- list()#
for(i in 2:ncol(participation)){#
  x <- data.frame(freq(participation[,i],w=participation$weight))#
  x$category <- rownames(x)#
  x <- x[,3:4]#
  x <- subset(x,x$category != "Total")#
  x <- subset(x,x$category != "NA's")#
  x$activity <- colnames(participation)[[i]]#
  frequencies[[i]] <- x#
}#
library(plyr)#
frequencies <- ldply(frequencies, data.frame)#
#
frequencies$category[frequencies$activity != "voting_time" & frequencies$category == 1] <- "Yes"#
frequencies$category[frequencies$activity != "voting_time" & frequencies$category == 0] <- "No"#
frequencies$category[frequencies$activity == "voting_time" & frequencies$category == 0] <- "0 \nNo Wait"#
frequencies$category[frequencies$activity == "voting_time" & frequencies$category == 4] <- "4 \n>1 Hour"#
#
frequencies$activity[frequencies$activity == "attend_polmeetings"] <- "Attend local political meetings?"#
frequencies$activity[frequencies$activity == "donate_money"] <- "Donate money to a candidate, campaign, or \npolitical organization?"#
frequencies$activity[frequencies$activity == "pres_primary_vote"] <- "Voted in the 2012 Presidential Primaries?"#
frequencies$activity[frequencies$activity == "run_for_office"] <- "Ever run for elective office?"#
frequencies$activity[frequencies$activity == "social_media"] <- "Forwarded a story, photo, video or link \nabout politics to friends?"#
frequencies$activity[frequencies$activity == "volunteer_campaign"] <- "Work for a candidate or campaign?"#
frequencies$activity[frequencies$activity == "yard_sign"] <- "Put up a political sign?"#
frequencies$activity[frequencies$activity == "pres_vote_12"] <- "Voted in the 2012 Presidential Election?"#
frequencies$activity[frequencies$activity == "voting_time"] <- "Time took to vote"#
#
ggplot(frequencies, aes(x=category,y=Valid.Percent)) + theme_bw() + geom_bar(stat="identity") + theme_bw()  + facet_wrap(~activity, ncol = 3, scales = "free") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + ggtitle("Variation in Different Activities of Political Participation, 2016 Cooperative Congressional Election Study") + scale_y_continuous("Weighted Percentage") + scale_x_discrete("")
donors <- subset(cces,select=c(commonweight_post,CC16_417e_1,CC16_417e_2,CC16_417e_3,CC16_417e_5))#
colnames(donors) <- c("weight","policy_influence","business","network","civic_duty")#
#
frequencies <- list()#
for(i in 2:ncol(donors)){#
  x <- data.frame(freq(donors[,i],w=donors$weight,plot=F))#
  x$category <- rownames(x)#
  x <- x[,3:4]#
  x <- subset(x,x$category != "Total")#
  x <- subset(x,x$category != "NA's")#
  x <- subset(x,x$category != "Skipped")#
  x <- subset(x,x$category != "Not Asked")#
  x$activity <- colnames(donors)[[i]]#
  frequencies[[i]] <- x#
}#
frequencies <- ldply(frequencies, data.frame)#
#
frequencies$activity[frequencies$activity == "business"] <- "Effective way to help my business/industry"#
frequencies$activity[frequencies$activity == "civic_duty"] <- "For anyone who can afford to contribute, it is \na civic duty to contribute financially to campaigns"#
frequencies$activity[frequencies$activity == "network"] <- "Allow me to be part of a network with other contributors"#
frequencies$activity[frequencies$activity == "policy_influence"] <- "Effective way to influence public policy"#
#
frequencies$category <- factor(frequencies$category,levels=c("Strongly disagree","Somewhat disagree","Neither agree nor disagree","Somewhat agree","Strongly agree"),labels=c("Strongly \ndisagree", "Somewhat \ndisagree","Neutral","Somewhat \nagree","Strongly \nagree"))#
#
ggplot(frequencies, aes(x=category,y=Valid.Percent)) + theme_bw() + geom_bar(stat="identity") + theme_bw()  + facet_wrap(~activity, ncol = 2, scales = "free") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + ggtitle("Variation in the Incentive for Political Donors to Donate to Campaigns, 2016 Cooperative Congressional Election Study") + scale_y_continuous("Weighted Percentage") + scale_x_discrete("")
cces <- read.dta13(paste("/Users/carlosalgara/Desktop/carlos_school/PhD_UC Davis/Research/Data/American Politics/CCES/CCES",2014,".dta",sep=""),convert.factors = T, convert.underscore = FALSE, encoding ="UTF-8")#
#
resources <- subset(cces,select=c(weight,cdid,CC401,CC417a_4,faminc,educ))#
resources[] <- lapply(resources, as.character)#
colnames(resources) <- c("weight","cdid","turnout","contribute","income","education")#
#
resources$turnout[resources$turnout == "I did not vote in the election this November."] <- 0#
resources$turnout[resources$turnout == "I thought about voting this time â€“ but didn't."] <- 0#
resources$turnout[resources$turnout == "I usually vote, but didn't this time."] <- 0#
resources$turnout[resources$turnout == "I attempted to vote but did not or could not."] <- 0#
resources$turnout[resources$turnout == "I definitely voted in the Midterm Election on November 4th."] <- 1#
#
resources$contribute[resources$contribute == "No"] <- 0#
resources$contribute[resources$contribute == "Yes"] <- 1#
#
na <- data.frame(freq(resources$income,plot=F))#
na$category <- rownames(na)#
rownames(na) <- NULL#
#
resources$income[resources$income %in% as.character(na[18,4])] <- 0#
resources$income[resources$income %in% as.character(na[1,4])] <- 1#
resources$income[resources$income %in% as.character(na[6,4])] <- 2#
resources$income[resources$income %in% as.character(na[10,4])] <- 3#
resources$income[resources$income %in% as.character(na[12,4])] <- 4#
resources$income[resources$income %in% as.character(na[13,4])] <- 5#
resources$income[resources$income %in% as.character(na[15,4])] <- 6#
resources$income[resources$income %in% as.character(na[16,4])] <- 7#
resources$income[resources$income %in% as.character(na[17,4])] <- 8#
resources$income[resources$income %in% as.character(na[2,4])] <- 9#
resources$income[resources$income %in% as.character(na[3,4])] <- 10#
resources$income[resources$income %in% as.character(na[4,4])] <- 11#
resources$income[resources$income %in% as.character(na[7,4])] <- 12#
resources$income[resources$income %in% as.character(na[8,4])] <- 13#
resources$income[resources$income %in% as.character(na[11,4])] <- 14#
resources$income[resources$income %in% as.character(na[14,4])] <- 15#
resources$income[resources$income %in% as.character(na[9,4])] <- 13#
resources$income[resources$income %in% as.character(na[5,4])] <- 11#
resources$income[resources$income %in% as.character(na[c(19,20),4])] <- NA#
#
resources$education <- factor(resources$education,levels=c("No HS","High school graduate","Some college","2-year","4-year","Post-grad"))#
#
resources$income <- as.numeric(resources$income)#
resources$weight <- as.numeric(resources$weight)#
resources$turnout <- as.numeric(resources$turnout)#
resources$contribute <- as.numeric(resources$contribute)#
#
library(effects)#
library(sandwich)#
library(lmtest)#
library(multiwayvcov)#
#
# Turnout ~ Education#
#
model <- glm(turnout ~ education, data=resources, weights=weight, family = binomial(link = "logit"))#
coeftest(model, vcov = cluster.vcov(model, cluster=resources$cdid))#
predict <- data.frame(effect("education", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(vcov. = cluster.vcov(model, cluster=resources$cdid))))#
#
predict$education <- factor(predict$education,levels=c("No HS","High school graduate","Some college","2-year","4-year","Post-grad"))#
#
ggplot(data= predict, mapping=aes(x=education, y=fit, ymin=lower, ymax=upper, fill=education)) + geom_bar(stat="identity") + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_discrete("Voter Education Level") + scale_y_continuous(limits=c(0,1.0), breaks=seq(0,1.0,0.05), "Probability of Turning Out to Vote") + ggtitle("Probability of Voter Turnout by Education Level in the 2014 Midterm Elections") + coord_cartesian(ylim=c(0.70,1.0)) + scale_fill_discrete(guide=FALSE)
model <- glm(turnout ~ income, data=resources, weights=weight, family = binomial(link = "logit"))#
coeftest(model, vcov = cluster.vcov(model, cluster=resources$cdid))#
predict <- data.frame(effect("income", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(income = seq(0,15,1), (vcov. = cluster.vcov(model, cluster=resources$cdid)))))#
#
ggplot(data= predict, mapping=aes(x=income, y=fit)) + geom_line(aes(x = income, y = fit), size = 0.50) + geom_ribbon(aes(ymin=lower, ymax=upper), alpha = .2) + scale_colour_manual("",values="black") + scale_fill_manual("",values="grey12") + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous(limits=c(0,15), breaks=c(0,15), labels=c("Less than \n$10,000", "Greater than \n$500,000"), "Voter Income") + scale_y_continuous(limits=c(0.7,1.0), breaks=seq(0.7,1.0,0.05), "Probability of Turning Out to Vote") + ggtitle("Probability of Voter Turnout by Income Level in the 2014 Midterm Elections")
model <- glm(contribute ~ education, data=resources, weights=weight, family = binomial(link = "logit"))#
coeftest(model, vcov = cluster.vcov(model, cluster=resources$cdid))#
predict <- data.frame(effect("education", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(vcov. = cluster.vcov(model, cluster=resources$cdid))))#
#
predict$education <- factor(predict$education,levels=c("No HS","High school graduate","Some college","2-year","4-year","Post-grad"))#
#
ggplot(data= predict, mapping=aes(x=education, y=fit, ymin=lower, ymax=upper, fill=education)) + geom_bar(stat="identity") + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_discrete("Voter Education Level") + scale_y_continuous(limits=c(0,1.0), breaks=seq(0.05,0.35,0.05), expand=c(0,0), "Probability of Contributing to a Campaign") + ggtitle("Probability of Being a Campaign Donor by Education Level in the 2014 Midterm Elections") + coord_cartesian(ylim=c(0,0.375)) + scale_fill_discrete(guide=FALSE)
model <- glm(contribute ~ income, data=resources, weights=weight, family = binomial(link = "logit"))#
coeftest(model, vcov = cluster.vcov(model, cluster=resources$cdid))#
predict <- data.frame(effect("income", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(income = seq(0,15,1), (vcov. = cluster.vcov(model, cluster=resources$cdid)))))
ggplot(data= predict, mapping=aes(x=income, y=fit)) + geom_line(aes(x = income, y = fit), size = 0.50) + geom_ribbon(aes(ymin=lower, ymax=upper), alpha = .2) + scale_colour_manual("",values="black") + scale_fill_manual("",values="grey12") + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous(limits=c(0,15), breaks=c(0,15), labels=c("Less than \n$10,000", "Greater than \n$500,000"), "Voter Income") + scale_y_continuous(limits=c(0,0.55), breaks=seq(0,0.55,0.05), "Probability of Contributing to a Campaign") + ggtitle("Probability of Being a Campaign Donor by Income Level in the 2014 Midterm Elections")
cces <- read.dta13("/Users/carlosalgara/Dropbox/CCES2016_Common_original/CCES2016.dta")#
voting <- subset(cces,select=c(commonweight_post,cdid115,CC16_302,CC16_303,CC16_304,CC16_364c,CC16_365,CC16_367))#
voting[] <- lapply(voting, as.character)#
colnames(voting) <- c("weight","cdid","retro_economy","retro_income","prospective_income","pres_vote","sen_vote","house_vote")#
#
na <- data.frame(freq(voting$retro_economy,plot=F))#
na$category <- rownames(na)#
rownames(na) <- NULL#
voting$retro_economy[voting$retro_economy %in% as.character(na[1,4])] <- 1#
voting$retro_economy[voting$retro_economy %in% as.character(na[2,4])] <- 2#
voting$retro_economy[voting$retro_economy %in% as.character(na[3,4])] <- -2#
voting$retro_economy[voting$retro_economy %in% as.character(na[4,4])] <- -1#
voting$retro_economy[voting$retro_economy %in% as.character(na[5,4])] <- NA#
voting$retro_economy[voting$retro_economy %in% as.character(na[6,4])] <- 0#
voting$retro_economy[voting$retro_economy %in% as.character(na[7,4])] <- NA#
#
na <- data.frame(freq(voting$retro_income,plot=F))#
na$category <- rownames(na)#
rownames(na) <- NULL#
voting$retro_income[voting$retro_income %in% as.character(na[1,4])] <- -2#
voting$retro_income[voting$retro_income %in% as.character(na[2,4])] <- -1#
voting$retro_income[voting$retro_income %in% as.character(na[3,4])] <- 2#
voting$retro_income[voting$retro_income %in% as.character(na[4,4])] <- 1#
voting$retro_income[voting$retro_income %in% as.character(na[5,4])] <- 0#
voting$retro_income[voting$retro_income %in% as.character(na[6,4])] <- NA#
#
na <- data.frame(freq(voting$prospective_income,plot=F))#
na$category <- rownames(na)#
rownames(na) <- NULL#
voting$prospective_income[voting$prospective_income %in% as.character(na[1,4])] <- 2#
voting$prospective_income[voting$prospective_income %in% as.character(na[2,4])] <- -2#
voting$prospective_income[voting$prospective_income %in% as.character(na[3,4])] <- 1#
voting$prospective_income[voting$prospective_income %in% as.character(na[4,4])] <- -1#
voting$prospective_income[voting$prospective_income %in% as.character(na[5,4])] <- NA#
voting$prospective_income[voting$prospective_income %in% as.character(na[6,4])] <- 0#
voting$prospective_income[voting$prospective_income %in% as.character(na[7,4])] <- NA#
#
na <- data.frame(freq(voting$pres_vote,plot=F))#
na$category <- rownames(na)#
rownames(na) <- NULL#
voting$pres_vote[voting$pres_vote %in% as.character(na[1,4])] <- 0#
voting$pres_vote[voting$pres_vote %in% as.character(na[3,4])] <- 1#
voting$pres_vote[voting$pres_vote %in% as.character(na[c(2,4:8),4])] <- NA#
#
na <- data.frame(freq(voting$sen_vote,plot=F))#
na$category <- rownames(na)#
rownames(na) <- NULL#
voting$sen_vote[voting$sen_vote %in% as.character(na[1,4])] <- 1#
voting$sen_vote[voting$sen_vote %in% as.character(na[2,4])] <- 0#
voting$sen_vote[voting$sen_vote %in% as.character(na[c(3:8),4])] <- NA#
#
na <- data.frame(freq(voting$house_vote,plot=F))#
na$category <- rownames(na)#
rownames(na) <- NULL#
voting$house_vote[voting$house_vote %in% as.character(na[3,4])] <- 1#
voting$house_vote[voting$house_vote %in% as.character(na[4,4])] <- 0#
voting$house_vote[voting$house_vote %in% as.character(na[c(1:2,5:15),4])] <- NA#
#
voting[] <- lapply(voting, as.numeric)#
#
# Voting Democratic (i.e. for the in-party) in the 2016 election as a function of retrospective and prospective economic evaluations#
#
# Presidential vote ~ Retrospective economic evaluations#
#
model <- glm(pres_vote ~ retro_economy, data=voting, weights=weight, family = binomial(link = "logit"))#
coeftest(model, vcov = cluster.vcov(model, cluster=voting$cdid))#
predict <- data.frame(effect("retro_economy", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(retro_economy = seq(-2,2,1), (vcov. = cluster.vcov(model, cluster=voting$cdid)))))#
predict$retro_economy <- factor(predict$retro_economy,levels=c(-2,-1,0,1,2),labels=c("Much \nWorse","Somewhat \nWorse","Stayed \nSame","Somewhat \nBetter","Much \nBetter"))#
#
ggplot(data= predict, mapping=aes(x=retro_economy, y=fit, ymin=lower, ymax=upper, fill=retro_economy)) + geom_bar(stat="identity") + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_discrete("Retrospective Economic Evaluations") + scale_y_continuous(limits=c(0,1), breaks=seq(0,1,0.10), "Probability of Voting Democratic") + ggtitle("Probability of Voting Democratic by Retrospective Economic Evaluations in the \n2016 Presidential Election, Cooperative Congressional Election Study") + scale_fill_discrete(guide=FALSE)
model <- glm(pres_vote ~ retro_income, data=voting, weights=weight, family = binomial(link = "logit"))#
coeftest(model, vcov = cluster.vcov(model, cluster=voting$cdid))#
predict <- data.frame(effect("retro_income", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(retro_income = seq(-2,2,1), (vcov. = cluster.vcov(model, cluster=voting$cdid)))))#
predict$retro_income <- factor(predict$retro_income,levels=c(-2,-1,0,1,2),labels=c("Decreased \nAlot","Decreased \nSomewhat","Stayed \nSame","Increased \nSomewhat","Increased \nAlot"))#
#
ggplot(data= predict, mapping=aes(x=retro_income, y=fit, ymin=lower, ymax=upper, fill=retro_income)) + geom_bar(stat="identity") + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_discrete("Retrospective Income Evaluations") + scale_y_continuous(limits=c(0,0.9), breaks=seq(0,0.9,0.10), "Probability of Voting Democratic") + ggtitle("Probability of Voting Democratic by Retrospective Income Evaluations in the \n2016 Presidential Election, Cooperative Congressional Election Study") + scale_fill_discrete(guide=FALSE)
model <- glm(sen_vote ~ retro_income, data=voting, weights=weight, family = binomial(link = "logit"))#
coeftest(model, vcov = cluster.vcov(model, cluster=voting$cdid))#
predict <- data.frame(effect("retro_income", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(retro_income = seq(-2,2,1), (vcov. = cluster.vcov(model, cluster=voting$cdid)))))#
predict$retro_income <- factor(predict$retro_income,levels=c(-2,-1,0,1,2),labels=c("Decreased \nAlot","Decreased \nSomewhat","Stayed \nSame","Increased \nSomewhat","Increased \nAlot"))#
#
ggplot(data= predict, mapping=aes(x=retro_income, y=fit, ymin=lower, ymax=upper, fill=retro_income)) + geom_bar(stat="identity") + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_discrete("Retrospective Income Evaluations") + scale_y_continuous(limits=c(0,0.9), breaks=seq(0,0.9,0.10), "Probability of Voting Democratic") + ggtitle("Probability of Voting Democratic by Retrospective Income Evaluations in the \n2016 Senate Elections, Cooperative Congressional Election Study") + scale_fill_discrete(guide=FALSE)
model <- glm(house_vote ~ retro_income, data=voting, weights=weight, family = binomial(link = "logit"))#
coeftest(model, vcov = cluster.vcov(model, cluster=voting$cdid))#
predict <- data.frame(effect("retro_income", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(retro_income = seq(-2,2,1), (vcov. = cluster.vcov(model, cluster=voting$cdid)))))#
predict$retro_income <- factor(predict$retro_income,levels=c(-2,-1,0,1,2),labels=c("Decreased \nAlot","Decreased \nSomewhat","Stayed \nSame","Increased \nSomewhat","Increased \nAlot"))#
#
ggplot(data= predict, mapping=aes(x=retro_income, y=fit, ymin=lower, ymax=upper, fill=retro_income)) + geom_bar(stat="identity") + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_discrete("Retrospective Income Evaluations") + scale_y_continuous(limits=c(0,0.9), breaks=seq(0,0.9,0.10), "Probability of Voting Democratic") + ggtitle("Probability of Voting Democratic by Retrospective Income Evaluations in the \n2016 House Elections, Cooperative Congressional Election Study") + scale_fill_discrete(guide=FALSE)
model <- glm(pres_vote ~ prospective_income, data=voting, weights=weight, family = binomial(link = "logit"))#
coeftest(model, vcov = cluster.vcov(model, cluster=voting$cdid))#
predict <- data.frame(effect("prospective_income", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(prospective_income = seq(-2,2,1), (vcov. = cluster.vcov(model, cluster=voting$cdid)))))#
predict$prospective_income <- factor(predict$prospective_income,levels=c(-2,-1,0,1,2),labels=c("Get Much \nWorse","Get Somewhat \nWorse","Stay \nSame","Get Somewhat \nBetter","Get Much \nBetter"))#
#
ggplot(data= predict, mapping=aes(x=prospective_income, y=fit, ymin=lower, ymax=upper, fill=prospective_income)) + geom_bar(stat="identity") + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_discrete("Prospective Income Evaluations") + scale_y_continuous(limits=c(0,1.0), breaks=seq(0,1,0.10), "Probability of Voting Democratic") + ggtitle("Probability of Voting Democratic by Prospective Income Evaluations in the \n2016 Presidential Election, Cooperative Congressional Election Study") + scale_fill_discrete(guide=FALSE)
model <- glm(sen_vote ~ prospective_income, data=voting, weights=weight, family = binomial(link = "logit"))#
coeftest(model, vcov = cluster.vcov(model, cluster=voting$cdid))#
predict <- data.frame(effect("prospective_income", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(prospective_income = seq(-2,2,1), (vcov. = cluster.vcov(model, cluster=voting$cdid)))))#
predict$prospective_income <- factor(predict$prospective_income,levels=c(-2,-1,0,1,2),labels=c("Get Much \nWorse","Get Somewhat \nWorse","Stay \nSame","Get Somewhat \nBetter","Get Much \nBetter"))#
#
ggplot(data= predict, mapping=aes(x=prospective_income, y=fit, ymin=lower, ymax=upper, fill=prospective_income)) + geom_bar(stat="identity") + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_discrete("Prospective Income Evaluations") + scale_y_continuous(limits=c(0,1.0), breaks=seq(0,1,0.10), "Probability of Voting Democratic") + ggtitle("Probability of Voting Democratic by Prospective Income Evaluations in the \n2016 Senate Elections, Cooperative Congressional Election Study") + scale_fill_discrete(guide=FALSE)
model <- glm(house_vote ~ prospective_income, data=voting, weights=weight, family = binomial(link = "logit"))#
coeftest(model, vcov = cluster.vcov(model, cluster=voting$cdid))#
predict <- data.frame(effect("prospective_income", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(prospective_income = seq(-2,2,1), (vcov. = cluster.vcov(model, cluster=voting$cdid)))))#
predict$prospective_income <- factor(predict$prospective_income,levels=c(-2,-1,0,1,2),labels=c("Get Much \nWorse","Get Somewhat \nWorse","Stay \nSame","Get Somewhat \nBetter","Get Much \nBetter"))#
#
ggplot(data= predict, mapping=aes(x=prospective_income, y=fit, ymin=lower, ymax=upper, fill=prospective_income)) + geom_bar(stat="identity") + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_discrete("Prospective Income Evaluations") + scale_y_continuous(limits=c(0,1.0), breaks=seq(0,1,0.10), "Probability of Voting Democratic") + ggtitle("Probability of Voting Democratic by Prospective Income Evaluations in the \n2016 House Elections, Cooperative Congressional Election Study") + scale_fill_discrete(guide=FALSE)
library(readstata13)
library(effects)#
library(sandwich)#
library(lmtest)#
library(multiwayvcov)
nes <- read.dta13(paste("/Users/carlosalgara/Desktop/carlos_school/PhD_UC Davis/Research/Data/American Politics/ANES_Individual_Years/Data/NES",2016,".dta",sep=""),convert.factors = T, convert.underscore = FALSE, encoding ="UTF-8")#
#
# Correct Recall of Offices: Biden (V162072), Ryan (V162073a), John Roberts (V162076b), House Majority (V161515), Senate Majority (V161516)#
#
recall <- subset(nes,select=c(V160102,V162072,V162073a,V162076b,V161515,V161516,V162074a,V162075a,V161270,V161361x))#
colnames(recall) <- c("weight","biden","ryan","roberts","housemaj","senmaj","merkel","putin","educ","income")#
recall$housemaj[recall$housemaj %in% 1] <- 0#
recall$housemaj[recall$housemaj %in% 2] <- 1 #
recall$senmaj[recall$senmaj %in% 1] <- 0#
recall$senmaj[recall$senmaj %in% 2] <- 1#
x <- c(-7,-6,-5,-9)#
recall[recall == -9] <- NA#
recall[recall == -5] <- NA#
recall[recall == -6] <- NA#
recall[recall == -7] <- NA#
#
recall$knowledge_scale <- rowSums(recall[,c(2:8)])#
#
recall$educ[recall$educ %in% seq(1,8,1)] <- 1 # > HS#
recall$educ[recall$educ %in% 9] <- 2 # HS#
recall$educ[recall$educ %in% 10] <- 3 # Some college#
recall$educ[recall$educ %in% seq(11,12,1)] <- 4 # 2-yr college#
recall$educ[recall$educ %in% 13] <- 5 # BA#
recall$educ[recall$educ %in% seq(14,16,1)] <- 6 #Post-BA#
recall$educ[recall$educ %in% 90] <- 2#
recall$educ[recall$educ %in% 95] <- 2#
#
model <- lm(knowledge_scale~educ,data=recall,weights = weight)#
coeftest(model, vcov = vcovHC(model, "HC0"))#
predict <- data.frame(effect("educ", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(educ=seq(1,6,1),vcov. = vcovHC(model, "HC0"))))#
#
ggplot(data= predict, mapping=aes(x=educ, y=fit)) + geom_line(aes(x = educ, y = fit), size = 0.50) + geom_ribbon(aes(ymin=lower, ymax=upper), alpha = .2) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous("Voter Education Level",limits=c(1,6),breaks=c(1,2,3,4,5,6),labels=c("> HS", "HS","Some \nCollege","2-Yr \nCollege","BA","Post-Grad")) + scale_y_continuous(limits=c(3.2,5.65), breaks=seq(3.5,5.5,0.5), "Estimaed Political Knowledge") + ggtitle("Effect of Education on Citizen Political Knowledge, \n2016 American National Election Study")
library(ggplot)
library(ggplot2)
nes <- read.dta13(paste("/Users/carlosalgara/Desktop/carlos_school/PhD_UC Davis/Research/Data/American Politics/ANES_Individual_Years/Data/NES",2016,".dta",sep=""),convert.factors = T, convert.underscore = FALSE, encoding ="UTF-8")#
#
# Correct Recall of Offices: Biden (V162072), Ryan (V162073a), John Roberts (V162076b), House Majority (V161515), Senate Majority (V161516)#
#
recall <- subset(nes,select=c(V160102,V162072,V162073a,V162076b,V161515,V161516,V162074a,V162075a,V161270,V161361x))#
colnames(recall) <- c("weight","biden","ryan","roberts","housemaj","senmaj","merkel","putin","educ","income")#
recall$housemaj[recall$housemaj %in% 1] <- 0#
recall$housemaj[recall$housemaj %in% 2] <- 1 #
recall$senmaj[recall$senmaj %in% 1] <- 0#
recall$senmaj[recall$senmaj %in% 2] <- 1#
x <- c(-7,-6,-5,-9)#
recall[recall == -9] <- NA#
recall[recall == -5] <- NA#
recall[recall == -6] <- NA#
recall[recall == -7] <- NA#
#
recall$knowledge_scale <- rowSums(recall[,c(2:8)])#
#
recall$educ[recall$educ %in% seq(1,8,1)] <- 1 # > HS#
recall$educ[recall$educ %in% 9] <- 2 # HS#
recall$educ[recall$educ %in% 10] <- 3 # Some college#
recall$educ[recall$educ %in% seq(11,12,1)] <- 4 # 2-yr college#
recall$educ[recall$educ %in% 13] <- 5 # BA#
recall$educ[recall$educ %in% seq(14,16,1)] <- 6 #Post-BA#
recall$educ[recall$educ %in% 90] <- 2#
recall$educ[recall$educ %in% 95] <- 2#
#
model <- lm(knowledge_scale~educ,data=recall,weights = weight)#
coeftest(model, vcov = vcovHC(model, "HC0"))#
predict <- data.frame(effect("educ", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(educ=seq(1,6,1),vcov. = vcovHC(model, "HC0"))))#
#
ggplot(data= predict, mapping=aes(x=educ, y=fit)) + geom_line(aes(x = educ, y = fit), size = 0.50) + geom_ribbon(aes(ymin=lower, ymax=upper), alpha = .2) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous("Voter Education Level",limits=c(1,6),breaks=c(1,2,3,4,5,6),labels=c("> HS", "HS","Some \nCollege","2-Yr \nCollege","BA","Post-Grad")) + scale_y_continuous(limits=c(3.2,5.65), breaks=seq(3.5,5.5,0.5), "Estimaed Political Knowledge") + ggtitle("Effect of Education on Citizen Political Knowledge, \n2016 American National Election Study")
model <- lm(knowledge_scale~income,data=recall,weights = weight)#
coeftest(model, vcov = vcovHC(model, "HC0"))#
predict <- data.frame(effect("income", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(income=seq(1,28,1),vcov. = vcovHC(model, "HC0"))))#
#
ggplot(data= predict, mapping=aes(x=income, y=fit)) + geom_line(aes(x = income, y = fit), size = 0.50) + geom_ribbon(aes(ymin=lower, ymax=upper), alpha = .2) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous("Voter Income Level",limits=c(1,28),breaks=c(1,28),labels=c("< $5,000","> $250,000")) + scale_y_continuous("Estimaed Political Knowledge") + ggtitle("Effect of Income on Citizen Political Knowledge, \n2016 American National Election Study")
library(gsheet) # Use the gsheet package to scrape voter turnout data from the Elect Project#
turnout <- gsheet2tbl('https://docs.google.com/spreadsheets/d/1bH38j6_e8yA9xq8OMlyLOL6h_iTS7ABQMKNxzFgKBDo/edit?usp=sharing') #Turnout from 1789-2014#
turnout2016 <- gsheet2tbl('https://docs.google.com/spreadsheets/d/1VAcF0eJ06y_8T4o2gvIL4YcyQy8pxb1zYkgXF76Uu1s/edit#gid=2030096602')#
#
# Clean-up data#
pres_turnout <- turnout[,1:2]#
midterm_turnout <- turnout[,3:4]#
colnames(pres_turnout) <- c("year","vep_turnout_rate")#
colnames(midterm_turnout) <- c("year","vep_turnout_rate")#
pres_turnout$election <- "Presidential Election"#
midterm_turnout$election <- "Midterm Election"#
turnout <- rbind(pres_turnout,midterm_turnout)#
#
turnout2016 <- turnout2016[2,c(4)]#
colnames(turnout2016) <- "vep_turnout_rate"#
turnout2016$election <- "Presidential Election"#
turnout2016$year <- 2016#
turnout2016$vep_turnout_rate <- gsub("%","",turnout2016$vep_turnout_rate)#
#
turnout <- rbind(turnout,turnout2016)#
turnout$vep_turnout_rate <- as.numeric(turnout$vep_turnout_rate)#
turnout$election <- factor(turnout$election,levels=c("Presidential Election","Midterm Election"))#
#
# Make the plot#
library(ggplot2)#
# One cumulative trend of decline in voter turnout since the Civil War#
ggplot(subset(turnout,turnout$year >= 1866), aes(x=year,y=vep_turnout_rate)) + geom_point(mapping=aes(x=year,y=vep_turnout_rate, shape=election,colour=election),inherit.aes = F) + scale_shape_manual("",values=c(16,18)) + scale_colour_manual("",values=c("cyan3","firebrick3")) + theme_bw() + theme(legend.position=c(0.875, 0.85), legend.key.size = unit(0.9,"line"), legend.key = element_blank()) + scale_y_continuous(limits=c(30,90),breaks=seq(30,90,10),labels=c("30%","40%","50%","60%","70%","80%","90%"), "Eligible Voter Turnout Rate") + scale_x_continuous(breaks=seq(1866,2016,10), "") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + geom_smooth(method = "loess", se=FALSE, color="black", size = 0.75) + ggtitle("National Voter-Turnout in Presidential & Midterm Elections in the United States, 1866-2016") + annotate(geom = "text", x = 1918, y = 80, label = "Women's Suffrage", color = "blue", angle = 90, size = 3.5) + geom_vline(xintercept=1920,linetype = "dashed",color="gray") + ann
otate(geom = "text", x = 1868, y = 40, label = "15th Amendment", color = "blue", angle = 90, size = 3.5) + geom_vline(xintercept=1870,linetype = "dashed",color="gray") + annotate(geom = "text", x = 1958, y = 80, label = "DC Suffrage", color = "blue", angle = 90, size = 3.5) + geom_vline(xintercept=1960,linetype = "dashed",color="gray") + annotate(geom = "text", x = 1963, y = 80, label = "Voting Rights Act", color = "blue", angle = 90, size = 3.5) + geom_vline(xintercept=1965,linetype = "dashed",color="gray") + annotate(geom = "text", x = 1969, y = 80, label = "Lowering Voting Age", color = "blue", angle = 90, size = 3.5) + geom_vline(xintercept=1971,linetype = "dashed",color="gray")#
#
# One lowess regression line per election type (presidential/midterm)#
ggplot(subset(turnout,turnout$year >= 1866), aes(x=year,y=vep_turnout_rate, shape=election,colour=election)) + geom_point() + scale_shape_manual("",values=c(16,18)) + scale_colour_manual("",values=c("cyan3","firebrick3")) + theme_bw() + theme(legend.position=c(0.875, 0.85), legend.key.size = unit(0.9,"line"), legend.key = element_blank()) + scale_y_continuous(limits=c(30,90),breaks=seq(30,90,10),labels=c("30%","40%","50%","60%","70%","80%","90%"), "Eligible Voter Turnout Rate") + scale_x_continuous(breaks=seq(1866,2016,10), "") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + geom_smooth(method = "loess", se=FALSE, size = 0.75) + ggtitle("National Voter-Turnout in Presidential & Midterm Elections in the United States, 1866-2016") + annotate(geom = "text", x = 1918, y = 80, label = "Women's Suffrage", color = "blue", angle = 90, size = 3.5) + geom_vline(xintercept=1920,linetype = "dashed",color="gray") + annotate(geom = "text", x = 1868, y = 40, label = "15th Amendment", colo
r = "blue", angle = 90, size = 3.5) + geom_vline(xintercept=1870,linetype = "dashed",color="gray") + annotate(geom = "text", x = 1958, y = 80, label = "DC Suffrage", color = "blue", angle = 90, size = 3.5) + geom_vline(xintercept=1960,linetype = "dashed",color="gray") + annotate(geom = "text", x = 1963, y = 80, label = "Voting Rights Act", color = "blue", angle = 90, size = 3.5) + geom_vline(xintercept=1965,linetype = "dashed",color="gray") + annotate(geom = "text", x = 1969, y = 80, label = "Lowering Voting Age", color = "blue", angle = 90, size = 3.5) + geom_vline(xintercept=1971,linetype = "dashed",color="gray")#
#
########
#
library(readstata13)#
cces <- read.dta13("/Users/carlosalgara/Dropbox/CCES2016_Common_original/CCES2016.dta")#
#
# Variation in political participation#
#
participation <- subset(cces,select=c(commonweight_post,CC16_300d_5,CC16_316,CC16_327,CC16_404,CC16_417a_1,CC16_417a_2,CC16_417a_3,CC16_417a_4,CC16_418a))#
colnames(participation) <- c("weight","social_media","pres_vote_12","pres_primary_vote","voting_time","attend_polmeetings","yard_sign","volunteer_campaign","donate_money","run_for_office")#
#
participation[] <- lapply(participation, as.character)#
participation[participation == "Yes"] <- 1#
participation[participation == "No"] <- 0#
participation[participation == "Yes, I definitely voted."] <- 1#
participation[participation == "I usually vote but did not vote in 2012"] <- 0#
participation[participation == "I am not sure"] <- 0#
#
participation[participation == "No, didn’t vote in a primary or caucus"] <- 0#
participation[participation == "Yes, voted in a primary or caucus"] <- 1#
#
participation$voting_time[participation$voting_time == "Don't know"] <- NA#
participation$voting_time[participation$voting_time == "Not at all"] <- 0#
participation$voting_time[participation$voting_time == "Less than 10 minutes"] <- 1#
participation$voting_time[participation$voting_time == "10 - 30 minutes"] <- 2#
participation$voting_time[participation$voting_time == "31 minutes - 1 hour"] <- 3#
participation$voting_time[participation$voting_time == "More than 1 hour"] <- 4#
#
participation[] <- lapply(participation, as.numeric)#
library(descr)#
#
frequencies <- list()#
for(i in 2:ncol(participation)){#
  x <- data.frame(freq(participation[,i],w=participation$weight))#
  x$category <- rownames(x)#
  x <- x[,3:4]#
  x <- subset(x,x$category != "Total")#
  x <- subset(x,x$category != "NA's")#
  x$activity <- colnames(participation)[[i]]#
  frequencies[[i]] <- x#
}#
library(plyr)#
frequencies <- ldply(frequencies, data.frame)#
#
frequencies$category[frequencies$activity != "voting_time" & frequencies$category == 1] <- "Yes"#
frequencies$category[frequencies$activity != "voting_time" & frequencies$category == 0] <- "No"#
frequencies$category[frequencies$activity == "voting_time" & frequencies$category == 0] <- "0 \nNo Wait"#
frequencies$category[frequencies$activity == "voting_time" & frequencies$category == 4] <- "4 \n>1 Hour"#
#
frequencies$activity[frequencies$activity == "attend_polmeetings"] <- "Attend local political meetings?"#
frequencies$activity[frequencies$activity == "donate_money"] <- "Donate money to a candidate, campaign, or \npolitical organization?"#
frequencies$activity[frequencies$activity == "pres_primary_vote"] <- "Voted in the 2012 Presidential Primaries?"#
frequencies$activity[frequencies$activity == "run_for_office"] <- "Ever run for elective office?"#
frequencies$activity[frequencies$activity == "social_media"] <- "Forwarded a story, photo, video or link \nabout politics to friends?"#
frequencies$activity[frequencies$activity == "volunteer_campaign"] <- "Work for a candidate or campaign?"#
frequencies$activity[frequencies$activity == "yard_sign"] <- "Put up a political sign?"#
frequencies$activity[frequencies$activity == "pres_vote_12"] <- "Voted in the 2012 Presidential Election?"#
frequencies$activity[frequencies$activity == "voting_time"] <- "Time took to vote"#
#
ggplot(frequencies, aes(x=category,y=Valid.Percent)) + theme_bw() + geom_bar(stat="identity") + theme_bw()  + facet_wrap(~activity, ncol = 3, scales = "free") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + ggtitle("Variation in Different Activities of Political Participation, 2016 Cooperative Congressional Election Study") + scale_y_continuous("Weighted Percentage") + scale_x_discrete("")#
#
# Why do people give money?#
#
donors <- subset(cces,select=c(commonweight_post,CC16_417e_1,CC16_417e_2,CC16_417e_3,CC16_417e_5))#
colnames(donors) <- c("weight","policy_influence","business","network","civic_duty")#
#
frequencies <- list()#
for(i in 2:ncol(donors)){#
  x <- data.frame(freq(donors[,i],w=donors$weight,plot=F))#
  x$category <- rownames(x)#
  x <- x[,3:4]#
  x <- subset(x,x$category != "Total")#
  x <- subset(x,x$category != "NA's")#
  x <- subset(x,x$category != "Skipped")#
  x <- subset(x,x$category != "Not Asked")#
  x$activity <- colnames(donors)[[i]]#
  frequencies[[i]] <- x#
}#
frequencies <- ldply(frequencies, data.frame)#
#
frequencies$activity[frequencies$activity == "business"] <- "Effective way to help my business/industry"#
frequencies$activity[frequencies$activity == "civic_duty"] <- "For anyone who can afford to contribute, it is \na civic duty to contribute financially to campaigns"#
frequencies$activity[frequencies$activity == "network"] <- "Allow me to be part of a network with other contributors"#
frequencies$activity[frequencies$activity == "policy_influence"] <- "Effective way to influence public policy"#
#
frequencies$category <- factor(frequencies$category,levels=c("Strongly disagree","Somewhat disagree","Neither agree nor disagree","Somewhat agree","Strongly agree"),labels=c("Strongly \ndisagree", "Somewhat \ndisagree","Neutral","Somewhat \nagree","Strongly \nagree"))#
#
ggplot(frequencies, aes(x=category,y=Valid.Percent)) + theme_bw() + geom_bar(stat="identity") + theme_bw()  + facet_wrap(~activity, ncol = 2, scales = "free") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + ggtitle("Variation in the Incentive for Political Donors to Donate to Campaigns, 2016 Cooperative Congressional Election Study") + scale_y_continuous("Weighted Percentage") + scale_x_discrete("")#
#
# Role of resources in predicting campaign contributions & voting. This section articulates the resource bias in participation & voting#
#
cces <- read.dta13(paste("/Users/carlosalgara/Desktop/carlos_school/PhD_UC Davis/Research/Data/American Politics/CCES/CCES",2014,".dta",sep=""),convert.factors = T, convert.underscore = FALSE, encoding ="UTF-8")#
#
resources <- subset(cces,select=c(weight,cdid,CC401,CC417a_4,faminc,educ))#
resources[] <- lapply(resources, as.character)#
colnames(resources) <- c("weight","cdid","turnout","contribute","income","education")#
#
resources$turnout[resources$turnout == "I did not vote in the election this November."] <- 0#
resources$turnout[resources$turnout == "I thought about voting this time â€“ but didn't."] <- 0#
resources$turnout[resources$turnout == "I usually vote, but didn't this time."] <- 0#
resources$turnout[resources$turnout == "I attempted to vote but did not or could not."] <- 0#
resources$turnout[resources$turnout == "I definitely voted in the Midterm Election on November 4th."] <- 1#
#
resources$contribute[resources$contribute == "No"] <- 0#
resources$contribute[resources$contribute == "Yes"] <- 1#
#
na <- data.frame(freq(resources$income,plot=F))#
na$category <- rownames(na)#
rownames(na) <- NULL#
#
resources$income[resources$income %in% as.character(na[18,4])] <- 0#
resources$income[resources$income %in% as.character(na[1,4])] <- 1#
resources$income[resources$income %in% as.character(na[6,4])] <- 2#
resources$income[resources$income %in% as.character(na[10,4])] <- 3#
resources$income[resources$income %in% as.character(na[12,4])] <- 4#
resources$income[resources$income %in% as.character(na[13,4])] <- 5#
resources$income[resources$income %in% as.character(na[15,4])] <- 6#
resources$income[resources$income %in% as.character(na[16,4])] <- 7#
resources$income[resources$income %in% as.character(na[17,4])] <- 8#
resources$income[resources$income %in% as.character(na[2,4])] <- 9#
resources$income[resources$income %in% as.character(na[3,4])] <- 10#
resources$income[resources$income %in% as.character(na[4,4])] <- 11#
resources$income[resources$income %in% as.character(na[7,4])] <- 12#
resources$income[resources$income %in% as.character(na[8,4])] <- 13#
resources$income[resources$income %in% as.character(na[11,4])] <- 14#
resources$income[resources$income %in% as.character(na[14,4])] <- 15#
resources$income[resources$income %in% as.character(na[9,4])] <- 13#
resources$income[resources$income %in% as.character(na[5,4])] <- 11#
resources$income[resources$income %in% as.character(na[c(19,20),4])] <- NA#
#
resources$education <- factor(resources$education,levels=c("No HS","High school graduate","Some college","2-year","4-year","Post-grad"))#
#
resources$income <- as.numeric(resources$income)#
resources$weight <- as.numeric(resources$weight)#
resources$turnout <- as.numeric(resources$turnout)#
resources$contribute <- as.numeric(resources$contribute)#
#
library(effects)#
library(sandwich)#
library(lmtest)#
library(multiwayvcov)#
#
# Turnout ~ Education#
#
model <- glm(turnout ~ education, data=resources, weights=weight, family = binomial(link = "logit"))#
coeftest(model, vcov = cluster.vcov(model, cluster=resources$cdid))#
predict <- data.frame(effect("education", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(vcov. = cluster.vcov(model, cluster=resources$cdid))))#
#
predict$education <- factor(predict$education,levels=c("No HS","High school graduate","Some college","2-year","4-year","Post-grad"))#
#
ggplot(data= predict, mapping=aes(x=education, y=fit, ymin=lower, ymax=upper, fill=education)) + geom_bar(stat="identity") + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_discrete("Voter Education Level") + scale_y_continuous(limits=c(0,1.0), breaks=seq(0,1.0,0.05), "Probability of Turning Out to Vote") + ggtitle("Probability of Voter Turnout by Education Level in the 2014 Midterm Elections") + coord_cartesian(ylim=c(0.70,1.0)) + scale_fill_discrete(guide=FALSE)#
#
# Turnout ~ Income#
#
model <- glm(turnout ~ income, data=resources, weights=weight, family = binomial(link = "logit"))#
coeftest(model, vcov = cluster.vcov(model, cluster=resources$cdid))#
predict <- data.frame(effect("income", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(income = seq(0,15,1), (vcov. = cluster.vcov(model, cluster=resources$cdid)))))#
#
ggplot(data= predict, mapping=aes(x=income, y=fit)) + geom_line(aes(x = income, y = fit), size = 0.50) + geom_ribbon(aes(ymin=lower, ymax=upper), alpha = .2) + scale_colour_manual("",values="black") + scale_fill_manual("",values="grey12") + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous(limits=c(0,15), breaks=c(0,15), labels=c("Less than \n$10,000", "Greater than \n$500,000"), "Voter Income") + scale_y_continuous(limits=c(0.7,1.0), breaks=seq(0.7,1.0,0.05), "Probability of Turning Out to Vote") + ggtitle("Probability of Voter Turnout by Income Level in the 2014 Midterm Elections")#
#
# Contribution ~ Education#
#
model <- glm(contribute ~ education, data=resources, weights=weight, family = binomial(link = "logit"))#
coeftest(model, vcov = cluster.vcov(model, cluster=resources$cdid))#
predict <- data.frame(effect("education", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(vcov. = cluster.vcov(model, cluster=resources$cdid))))#
#
predict$education <- factor(predict$education,levels=c("No HS","High school graduate","Some college","2-year","4-year","Post-grad"))#
#
ggplot(data= predict, mapping=aes(x=education, y=fit, ymin=lower, ymax=upper, fill=education)) + geom_bar(stat="identity") + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_discrete("Voter Education Level") + scale_y_continuous(limits=c(0,1.0), breaks=seq(0.05,0.35,0.05), expand=c(0,0), "Probability of Contributing to a Campaign") + ggtitle("Probability of Being a Campaign Donor by Education Level in the 2014 Midterm Elections") + coord_cartesian(ylim=c(0,0.375)) + scale_fill_discrete(guide=FALSE)#
#
# Contribution ~ Income#
#
model <- glm(contribute ~ income, data=resources, weights=weight, family = binomial(link = "logit"))#
coeftest(model, vcov = cluster.vcov(model, cluster=resources$cdid))#
predict <- data.frame(effect("income", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(income = seq(0,15,1), (vcov. = cluster.vcov(model, cluster=resources$cdid)))))#
#
ggplot(data= predict, mapping=aes(x=income, y=fit)) + geom_line(aes(x = income, y = fit), size = 0.50) + geom_ribbon(aes(ymin=lower, ymax=upper), alpha = .2) + scale_colour_manual("",values="black") + scale_fill_manual("",values="grey12") + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous(limits=c(0,15), breaks=c(0,15), labels=c("Less than \n$10,000", "Greater than \n$500,000"), "Voter Income") + scale_y_continuous(limits=c(0,0.55), breaks=seq(0,0.55,0.05), "Probability of Contributing to a Campaign") + ggtitle("Probability of Being a Campaign Donor by Income Level in the 2014 Midterm Elections")#
#
# Role of retrospective and prospective voting in voting#
#
cces <- read.dta13("/Users/carlosalgara/Dropbox/CCES2016_Common_original/CCES2016.dta")#
voting <- subset(cces,select=c(commonweight_post,cdid115,CC16_302,CC16_303,CC16_304,CC16_364c,CC16_365,CC16_367))#
voting[] <- lapply(voting, as.character)#
colnames(voting) <- c("weight","cdid","retro_economy","retro_income","prospective_income","pres_vote","sen_vote","house_vote")#
#
na <- data.frame(freq(voting$retro_economy,plot=F))#
na$category <- rownames(na)#
rownames(na) <- NULL#
voting$retro_economy[voting$retro_economy %in% as.character(na[1,4])] <- 1#
voting$retro_economy[voting$retro_economy %in% as.character(na[2,4])] <- 2#
voting$retro_economy[voting$retro_economy %in% as.character(na[3,4])] <- -2#
voting$retro_economy[voting$retro_economy %in% as.character(na[4,4])] <- -1#
voting$retro_economy[voting$retro_economy %in% as.character(na[5,4])] <- NA#
voting$retro_economy[voting$retro_economy %in% as.character(na[6,4])] <- 0#
voting$retro_economy[voting$retro_economy %in% as.character(na[7,4])] <- NA#
#
na <- data.frame(freq(voting$retro_income,plot=F))#
na$category <- rownames(na)#
rownames(na) <- NULL#
voting$retro_income[voting$retro_income %in% as.character(na[1,4])] <- -2#
voting$retro_income[voting$retro_income %in% as.character(na[2,4])] <- -1#
voting$retro_income[voting$retro_income %in% as.character(na[3,4])] <- 2#
voting$retro_income[voting$retro_income %in% as.character(na[4,4])] <- 1#
voting$retro_income[voting$retro_income %in% as.character(na[5,4])] <- 0#
voting$retro_income[voting$retro_income %in% as.character(na[6,4])] <- NA#
#
na <- data.frame(freq(voting$prospective_income,plot=F))#
na$category <- rownames(na)#
rownames(na) <- NULL#
voting$prospective_income[voting$prospective_income %in% as.character(na[1,4])] <- 2#
voting$prospective_income[voting$prospective_income %in% as.character(na[2,4])] <- -2#
voting$prospective_income[voting$prospective_income %in% as.character(na[3,4])] <- 1#
voting$prospective_income[voting$prospective_income %in% as.character(na[4,4])] <- -1#
voting$prospective_income[voting$prospective_income %in% as.character(na[5,4])] <- NA#
voting$prospective_income[voting$prospective_income %in% as.character(na[6,4])] <- 0#
voting$prospective_income[voting$prospective_income %in% as.character(na[7,4])] <- NA#
#
na <- data.frame(freq(voting$pres_vote,plot=F))#
na$category <- rownames(na)#
rownames(na) <- NULL#
voting$pres_vote[voting$pres_vote %in% as.character(na[1,4])] <- 0#
voting$pres_vote[voting$pres_vote %in% as.character(na[3,4])] <- 1#
voting$pres_vote[voting$pres_vote %in% as.character(na[c(2,4:8),4])] <- NA#
#
na <- data.frame(freq(voting$sen_vote,plot=F))#
na$category <- rownames(na)#
rownames(na) <- NULL#
voting$sen_vote[voting$sen_vote %in% as.character(na[1,4])] <- 1#
voting$sen_vote[voting$sen_vote %in% as.character(na[2,4])] <- 0#
voting$sen_vote[voting$sen_vote %in% as.character(na[c(3:8),4])] <- NA#
#
na <- data.frame(freq(voting$house_vote,plot=F))#
na$category <- rownames(na)#
rownames(na) <- NULL#
voting$house_vote[voting$house_vote %in% as.character(na[3,4])] <- 1#
voting$house_vote[voting$house_vote %in% as.character(na[4,4])] <- 0#
voting$house_vote[voting$house_vote %in% as.character(na[c(1:2,5:15),4])] <- NA#
#
voting[] <- lapply(voting, as.numeric)#
#
# Voting Democratic (i.e. for the in-party) in the 2016 election as a function of retrospective and prospective economic evaluations#
#
# Presidential vote ~ Retrospective economic evaluations#
#
model <- glm(pres_vote ~ retro_economy, data=voting, weights=weight, family = binomial(link = "logit"))#
coeftest(model, vcov = cluster.vcov(model, cluster=voting$cdid))#
predict <- data.frame(effect("retro_economy", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(retro_economy = seq(-2,2,1), (vcov. = cluster.vcov(model, cluster=voting$cdid)))))#
predict$retro_economy <- factor(predict$retro_economy,levels=c(-2,-1,0,1,2),labels=c("Much \nWorse","Somewhat \nWorse","Stayed \nSame","Somewhat \nBetter","Much \nBetter"))#
#
ggplot(data= predict, mapping=aes(x=retro_economy, y=fit, ymin=lower, ymax=upper, fill=retro_economy)) + geom_bar(stat="identity") + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_discrete("Retrospective Economic Evaluations") + scale_y_continuous(limits=c(0,1), breaks=seq(0,1,0.10), "Probability of Voting Democratic") + ggtitle("Probability of Voting Democratic by Retrospective Economic Evaluations in the \n2016 Presidential Election, Cooperative Congressional Election Study") + scale_fill_discrete(guide=FALSE)#
#
# Presidential vote ~ Retrospective income evaluations#
#
model <- glm(pres_vote ~ retro_income, data=voting, weights=weight, family = binomial(link = "logit"))#
coeftest(model, vcov = cluster.vcov(model, cluster=voting$cdid))#
predict <- data.frame(effect("retro_income", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(retro_income = seq(-2,2,1), (vcov. = cluster.vcov(model, cluster=voting$cdid)))))#
predict$retro_income <- factor(predict$retro_income,levels=c(-2,-1,0,1,2),labels=c("Decreased \nAlot","Decreased \nSomewhat","Stayed \nSame","Increased \nSomewhat","Increased \nAlot"))#
#
ggplot(data= predict, mapping=aes(x=retro_income, y=fit, ymin=lower, ymax=upper, fill=retro_income)) + geom_bar(stat="identity") + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_discrete("Retrospective Income Evaluations") + scale_y_continuous(limits=c(0,0.9), breaks=seq(0,0.9,0.10), "Probability of Voting Democratic") + ggtitle("Probability of Voting Democratic by Retrospective Income Evaluations in the \n2016 Presidential Election, Cooperative Congressional Election Study") + scale_fill_discrete(guide=FALSE)#
#
# Senate vote ~ Retrospective income evaluations#
#
model <- glm(sen_vote ~ retro_income, data=voting, weights=weight, family = binomial(link = "logit"))#
coeftest(model, vcov = cluster.vcov(model, cluster=voting$cdid))#
predict <- data.frame(effect("retro_income", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(retro_income = seq(-2,2,1), (vcov. = cluster.vcov(model, cluster=voting$cdid)))))#
predict$retro_income <- factor(predict$retro_income,levels=c(-2,-1,0,1,2),labels=c("Decreased \nAlot","Decreased \nSomewhat","Stayed \nSame","Increased \nSomewhat","Increased \nAlot"))#
#
ggplot(data= predict, mapping=aes(x=retro_income, y=fit, ymin=lower, ymax=upper, fill=retro_income)) + geom_bar(stat="identity") + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_discrete("Retrospective Income Evaluations") + scale_y_continuous(limits=c(0,0.9), breaks=seq(0,0.9,0.10), "Probability of Voting Democratic") + ggtitle("Probability of Voting Democratic by Retrospective Income Evaluations in the \n2016 Senate Elections, Cooperative Congressional Election Study") + scale_fill_discrete(guide=FALSE)#
#
# House vote ~ Retrospective income evaluations#
#
model <- glm(house_vote ~ retro_income, data=voting, weights=weight, family = binomial(link = "logit"))#
coeftest(model, vcov = cluster.vcov(model, cluster=voting$cdid))#
predict <- data.frame(effect("retro_income", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(retro_income = seq(-2,2,1), (vcov. = cluster.vcov(model, cluster=voting$cdid)))))#
predict$retro_income <- factor(predict$retro_income,levels=c(-2,-1,0,1,2),labels=c("Decreased \nAlot","Decreased \nSomewhat","Stayed \nSame","Increased \nSomewhat","Increased \nAlot"))#
#
ggplot(data= predict, mapping=aes(x=retro_income, y=fit, ymin=lower, ymax=upper, fill=retro_income)) + geom_bar(stat="identity") + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_discrete("Retrospective Income Evaluations") + scale_y_continuous(limits=c(0,0.9), breaks=seq(0,0.9,0.10), "Probability of Voting Democratic") + ggtitle("Probability of Voting Democratic by Retrospective Income Evaluations in the \n2016 House Elections, Cooperative Congressional Election Study") + scale_fill_discrete(guide=FALSE)#
#
# Pres vote ~ Prospective Income Evaluations#
#
model <- glm(pres_vote ~ prospective_income, data=voting, weights=weight, family = binomial(link = "logit"))#
coeftest(model, vcov = cluster.vcov(model, cluster=voting$cdid))#
predict <- data.frame(effect("prospective_income", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(prospective_income = seq(-2,2,1), (vcov. = cluster.vcov(model, cluster=voting$cdid)))))#
predict$prospective_income <- factor(predict$prospective_income,levels=c(-2,-1,0,1,2),labels=c("Get Much \nWorse","Get Somewhat \nWorse","Stay \nSame","Get Somewhat \nBetter","Get Much \nBetter"))#
#
ggplot(data= predict, mapping=aes(x=prospective_income, y=fit, ymin=lower, ymax=upper, fill=prospective_income)) + geom_bar(stat="identity") + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_discrete("Prospective Income Evaluations") + scale_y_continuous(limits=c(0,1.0), breaks=seq(0,1,0.10), "Probability of Voting Democratic") + ggtitle("Probability of Voting Democratic by Prospective Income Evaluations in the \n2016 Presidential Election, Cooperative Congressional Election Study") + scale_fill_discrete(guide=FALSE)#
#
# Sen vote ~ Prospective Income Evaluations#
#
model <- glm(sen_vote ~ prospective_income, data=voting, weights=weight, family = binomial(link = "logit"))#
coeftest(model, vcov = cluster.vcov(model, cluster=voting$cdid))#
predict <- data.frame(effect("prospective_income", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(prospective_income = seq(-2,2,1), (vcov. = cluster.vcov(model, cluster=voting$cdid)))))#
predict$prospective_income <- factor(predict$prospective_income,levels=c(-2,-1,0,1,2),labels=c("Get Much \nWorse","Get Somewhat \nWorse","Stay \nSame","Get Somewhat \nBetter","Get Much \nBetter"))#
#
ggplot(data= predict, mapping=aes(x=prospective_income, y=fit, ymin=lower, ymax=upper, fill=prospective_income)) + geom_bar(stat="identity") + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_discrete("Prospective Income Evaluations") + scale_y_continuous(limits=c(0,1.0), breaks=seq(0,1,0.10), "Probability of Voting Democratic") + ggtitle("Probability of Voting Democratic by Prospective Income Evaluations in the \n2016 Senate Elections, Cooperative Congressional Election Study") + scale_fill_discrete(guide=FALSE)#
#
# House vote ~ Prospective Income Evaluations#
#
model <- glm(house_vote ~ prospective_income, data=voting, weights=weight, family = binomial(link = "logit"))#
coeftest(model, vcov = cluster.vcov(model, cluster=voting$cdid))#
predict <- data.frame(effect("prospective_income", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(prospective_income = seq(-2,2,1), (vcov. = cluster.vcov(model, cluster=voting$cdid)))))#
predict$prospective_income <- factor(predict$prospective_income,levels=c(-2,-1,0,1,2),labels=c("Get Much \nWorse","Get Somewhat \nWorse","Stay \nSame","Get Somewhat \nBetter","Get Much \nBetter"))#
#
ggplot(data= predict, mapping=aes(x=prospective_income, y=fit, ymin=lower, ymax=upper, fill=prospective_income)) + geom_bar(stat="identity") + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_discrete("Prospective Income Evaluations") + scale_y_continuous(limits=c(0,1.0), breaks=seq(0,1,0.10), "Probability of Voting Democratic") + ggtitle("Probability of Voting Democratic by Prospective Income Evaluations in the \n2016 House Elections, Cooperative Congressional Election Study") + scale_fill_discrete(guide=FALSE)#
#
# Variation in political information#
#
nes <- read.dta13(paste("/Users/carlosalgara/Desktop/carlos_school/PhD_UC Davis/Research/Data/American Politics/ANES_Individual_Years/Data/NES",2016,".dta",sep=""),convert.factors = T, convert.underscore = FALSE, encoding ="UTF-8")#
#
# Correct Recall of Offices: Biden (V162072), Ryan (V162073a), John Roberts (V162076b), House Majority (V161515), Senate Majority (V161516)#
#
recall <- subset(nes,select=c(V160102,V162072,V162073a,V162076b,V161515,V161516,V162074a,V162075a,V161270,V161361x))#
colnames(recall) <- c("weight","biden","ryan","roberts","housemaj","senmaj","merkel","putin","educ","income")#
recall$housemaj[recall$housemaj %in% 1] <- 0#
recall$housemaj[recall$housemaj %in% 2] <- 1 #
recall$senmaj[recall$senmaj %in% 1] <- 0#
recall$senmaj[recall$senmaj %in% 2] <- 1#
x <- c(-7,-6,-5,-9)#
recall[recall == -9] <- NA#
recall[recall == -5] <- NA#
recall[recall == -6] <- NA#
recall[recall == -7] <- NA#
#
recall$knowledge_scale <- rowSums(recall[,c(2:8)])#
#
recall$educ[recall$educ %in% seq(1,8,1)] <- 1 # > HS#
recall$educ[recall$educ %in% 9] <- 2 # HS#
recall$educ[recall$educ %in% 10] <- 3 # Some college#
recall$educ[recall$educ %in% seq(11,12,1)] <- 4 # 2-yr college#
recall$educ[recall$educ %in% 13] <- 5 # BA#
recall$educ[recall$educ %in% seq(14,16,1)] <- 6 #Post-BA#
recall$educ[recall$educ %in% 90] <- 2#
recall$educ[recall$educ %in% 95] <- 2#
#
model <- lm(knowledge_scale~educ,data=recall,weights = weight)#
coeftest(model, vcov = vcovHC(model, "HC0"))#
predict <- data.frame(effect("educ", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(educ=seq(1,6,1),vcov. = vcovHC(model, "HC0"))))#
#
ggplot(data= predict, mapping=aes(x=educ, y=fit)) + geom_line(aes(x = educ, y = fit), size = 0.50) + geom_ribbon(aes(ymin=lower, ymax=upper), alpha = .2) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous("Voter Education Level",limits=c(1,6),breaks=c(1,2,3,4,5,6),labels=c("> HS", "HS","Some \nCollege","2-Yr \nCollege","BA","Post-Grad")) + scale_y_continuous(limits=c(3.2,5.65), breaks=seq(3.5,5.5,0.5), "Estimaed Political Knowledge") + ggtitle("Effect of Education on Citizen Political Knowledge, \n2016 American National Election Study")#
#
model <- lm(knowledge_scale~income,data=recall,weights = weight)#
coeftest(model, vcov = vcovHC(model, "HC0"))#
predict <- data.frame(effect("income", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(income=seq(1,28,1),vcov. = vcovHC(model, "HC0"))))#
#
ggplot(data= predict, mapping=aes(x=income, y=fit)) + geom_line(aes(x = income, y = fit), size = 0.50) + geom_ribbon(aes(ymin=lower, ymax=upper), alpha = .2) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous("Voter Income Level",limits=c(1,28),breaks=c(1,28),labels=c("< $5,000","> $250,000")) + scale_y_continuous("Estimaed Political Knowledge") + ggtitle("Effect of Income on Citizen Political Knowledge, \n2016 American National Election Study")#
#
# Partisanship & Proximity voting in Elections#
#
cces <- read.dta13("/Users/carlosalgara/Dropbox/CCES2016_Common_original/CCES2016.dta")#
#
# Variation in political participation#
#
vote <- subset(cces,select=c(commonweight_post,inputstate,cdid115,CC16_364c,CC16_365,CC16_367,pid7,CC16_340a,CC16_340d,CC16_340e,CC16_340l,CC16_340m,CC16_340n,CC16_340o))#
colnames(vote) <- c("weight","state","cd","pres_vote","senate_vote","house_vote","party_id","ideo_self","ideo_clinton","ideo_trump","ideo_dem_sen","ideo_rep_sen","ideo_dem_house","ideo_rep_house")#
#
na <- data.frame(freq(vote$pres_vote,plot=F))#
na$category <- rownames(na)#
rownames(na) <- NULL#
#
vote[] <- lapply(vote, as.character)#
#
vote$pres_vote[vote$pres_vote %in% as.character(na[1,4])] <- 0#
vote$pres_vote[vote$pres_vote %in% as.character(na[2,4])] <- 1#
vote$pres_vote[vote$pres_vote %in% as.character(na[c(3:10),4])] <- NA#
#
na <- data.frame(freq(vote$senate_vote,plot=F))#
na$category <- rownames(na)#
rownames(na) <- NULL#
#
vote$senate_vote[vote$senate_vote %in% as.character(na[1,4])] <- 1#
vote$senate_vote[vote$senate_vote %in% as.character(na[2,4])] <- 0#
vote$senate_vote[vote$senate_vote %in% as.character(na[c(3:8),4])] <- NA#
#
na <- data.frame(freq(vote$house_vote,plot=F))#
na$category <- rownames(na)#
rownames(na) <- NULL#
#
vote$house_vote[vote$house_vote %in% as.character(na[3,4])] <- 1#
vote$house_vote[vote$house_vote %in% as.character(na[4,4])] <- 0#
vote$house_vote[vote$house_vote %in% as.character(na[c(1:2,5:15),4])] <- NA#
#
na <- data.frame(freq(vote$party_id,plot=F))#
na$category <- rownames(na)#
rownames(na) <- NULL#
#
vote$party_id[vote$party_id %in% as.character(na[4,4])] <- NA#
vote$party_id[vote$party_id %in% as.character(na[9,4])] <- NA#
#
vote$party_id <- factor(vote$party_id,levels=c("Strong Republican","Not very strong Republican","Lean Republican","Independent","Lean Democrat","Not very strong Democrat","Strong Democrat"))#
# Partisanship & Presidential Voting#
#
vote$pres_vote <- as.numeric(vote$pres_vote)#
vote$house_vote <- as.numeric(vote$house_vote)#
vote$senate_vote <- as.numeric(vote$senate_vote)#
vote$weight <- as.numeric(vote$weight)#
#
model <- glm(pres_vote ~ party_id, data=vote, weights=weight, family = binomial(link = "logit"))#
coeftest(model, vcov = cluster.vcov(model, cluster=vote$state))#
predict <- data.frame(effect("party_id", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(vcov. = cluster.vcov(model, cluster=vote$state))))#
predict$party_id <- factor(predict$party_id,levels=c("Strong Republican","Lean Republican","Not very strong Republican","Independent","Not very strong Democrat","Lean Democrat","Strong Democrat"),labels=c("Strong \nRepublican","Lean \nRepublican","Weak \nRepublican","Independent","Weak \nDemocrat","Lean \nDemocrat","Strong \nDemocrat"))#
#
ggplot(predict, aes(x=party_id, y=fit, ymin=lower, ymax=upper, fill = party_id)) + geom_bar(stat="identity") + scale_fill_manual("",values = c("firebrick3","firebrick2","firebrick1","purple","dodgerblue1","dodgerblue2","dodgerblue3")) + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_y_continuous(limits=c(0,1.02), breaks=seq(0.10,1.0,0.10), expand = c(0, 0), "Predicted Probability of Democratic Vote") + scale_x_discrete("") + theme(legend.position="none") + geom_hline(yintercept = 0.50, colour = gray(1/2), lty = 2) + ggtitle("Probability of Voting Democratic by Partisanship Group, \n2016 Presidential Election (CCES)")#
#
# Senate Vote#
#
model <- glm(senate_vote ~ party_id, data=vote, weights=weight, family = binomial(link = "logit"))#
coeftest(model, vcov = cluster.vcov(model, cluster=vote$state))#
predict <- data.frame(effect("party_id", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(vcov. = cluster.vcov(model, cluster=vote$state))))#
predict$party_id <- factor(predict$party_id,levels=c("Strong Republican","Lean Republican","Not very strong Republican","Independent","Not very strong Democrat","Lean Democrat","Strong Democrat"),labels=c("Strong \nRepublican","Lean \nRepublican","Weak \nRepublican","Independent","Weak \nDemocrat","Lean \nDemocrat","Strong \nDemocrat"))#
#
ggplot(predict, aes(x=party_id, y=fit, ymin=lower, ymax=upper, fill = party_id)) + geom_bar(stat="identity") + scale_fill_manual("",values = c("firebrick3","firebrick2","firebrick1","purple","dodgerblue1","dodgerblue2","dodgerblue3")) + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_y_continuous(limits=c(0,1.02), breaks=seq(0.10,1.0,0.10), expand = c(0, 0), "Predicted Probability of Democratic Vote") + scale_x_discrete("") + theme(legend.position="none") + geom_hline(yintercept = 0.50, colour = gray(1/2), lty = 2) + ggtitle("Probability of Voting Democratic by Partisanship Group, \n2016 Senate Elections (CCES)")#
#
# House Vote#
#
vote$district <- paste(vote$state,vote$cd,sep="")#
#
model <- glm(house_vote ~ party_id, data=vote, weights=weight, family = binomial(link = "logit"))#
coeftest(model, vcov = cluster.vcov(model, cluster=vote$district))#
predict <- data.frame(effect("party_id", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(vcov. = cluster.vcov(model, cluster=vote$district))))#
predict$party_id <- factor(predict$party_id,levels=c("Strong Republican","Lean Republican","Not very strong Republican","Independent","Not very strong Democrat","Lean Democrat","Strong Democrat"),labels=c("Strong \nRepublican","Lean \nRepublican","Weak \nRepublican","Independent","Weak \nDemocrat","Lean \nDemocrat","Strong \nDemocrat"))#
#
ggplot(predict, aes(x=party_id, y=fit, ymin=lower, ymax=upper, fill = party_id)) + geom_bar(stat="identity") + scale_fill_manual("",values = c("firebrick3","firebrick2","firebrick1","purple","dodgerblue1","dodgerblue2","dodgerblue3")) + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_y_continuous(limits=c(0,1.02), breaks=seq(0.10,1.0,0.10), expand = c(0, 0), "Predicted Probability of Democratic Vote") + scale_x_discrete("") + theme(legend.position="none") + geom_hline(yintercept = 0.50, colour = gray(1/2), lty = 2) + ggtitle("Probability of Voting Democratic by Partisanship Group, \n2016 House Elections (CCES)")#
#
# Proximity Voting#
#
vote[vote == "Very Conservative"] <- 1#
vote[vote == "Conservative"] <- 2#
vote[vote == "Somewhat Conservative"] <- 3#
vote[vote == "Middle of the Road"] <- 4#
vote[vote == "Somewhat Liberal"] <- 5#
vote[vote == "Liberal"] <- 6#
vote[vote == "Very Liberal"] <- 7#
vote[vote == "Not sure"] <- NA#
#
# Correct Placement #
#
for(i in 8:14){#
  vote[,i] <- as.numeric(vote[,i])#
}#
#
vote$pres_ideo_correct <- ifelse(vote$ideo_clinton > vote$ideo_trump, 1, ifelse(vote$ideo_clinton <= vote$ideo_trump, 0, NA))#
#
vote$sen_ideo_correct <- ifelse(vote$ideo_dem_sen > vote$ideo_rep_sen, 1, ifelse(vote$ideo_dem_sen <= vote$ideo_rep_sen, 0, NA))#
#
vote$house_ideo_correct <- ifelse(vote$ideo_dem_house > vote$ideo_rep_house, 1, ifelse(vote$ideo_dem_house <= vote$ideo_rep_house, 0, NA))#
#
# Dem proximity rule#
#
vote$pres_proximity <- abs(vote$ideo_trump - vote$ideo_self) - abs(vote$ideo_clinton - vote$ideo_self)#
vote$house_proximity <- abs(vote$ideo_rep_house - vote$ideo_self) - abs(vote$ideo_dem_house - vote$ideo_self)#
vote$senate_proximity <- abs(vote$ideo_rep_sen - vote$ideo_self) - abs(vote$ideo_dem_sen - vote$ideo_self)#
#
# Proximity Voting & Effect by Correct Placement#
#
model <- glm(pres_vote ~ pres_proximity*pres_ideo_correct + party_id, data=vote, weights=weight, family = binomial(link = "logit")) # President#
coeftest(model, vcov = cluster.vcov(model, cluster=vote$state))#
predict <- data.frame(effect("pres_proximity*pres_ideo_correct", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(pres_proximity=unique(na.omit(vote$pres_proximity)),pres_ideo_correct=c(0,1),vcov. = cluster.vcov(model, cluster=vote$state))))#
#
predict$pres_ideo_correct <- factor(predict$pres_ideo_correct,levels=c(0,1),labels=c("Incorrect Placement","Correct Placement"))#
#
ggplot(data= predict, mapping=aes(x=pres_proximity, y=fit, group=pres_ideo_correct,fill=pres_ideo_correct,linetype=pres_ideo_correct)) + geom_line(aes(x = pres_proximity, y = fit), size = 0.50) + geom_ribbon(aes(ymin=lower, ymax=upper), alpha = .2) + scale_fill_manual("",values=c("red1","dodgerblue1")) + scale_linetype_manual("",values=c("dashed","solid")) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous(limits=c(-6,6), breaks=c(-6,0,6), labels=c("-6 \nConservative", "0","0 \nLiberal"), "Voter Candidate Proximity") + scale_y_continuous(limits=c(0,1.0), breaks=seq(0,1.0,0.10), "Probability of Voting Democratic") + ggtitle("Probability of Voting Democratic by Ideological Proximity & Correct Ideological Placement of Candidates, \n2016 Presidential Election (CCES)") + theme(legend.position=c(0.85, 0.10), legend.box.just = "left", legend.key.size = unit(1,"line"), legend.key = element_rect(size = 0, color = 'white'), legend.text.align = 0, legend.b
ox = "horizontal") + guides(fill = guide_legend(reverse=T), linetype = guide_legend(reverse=T))#
#
model <- glm(pres_vote ~ pres_proximity*pres_ideo_correct, data=vote, weights=weight, family = binomial(link = "logit")) # Senate#
coeftest(model, vcov = cluster.vcov(model, cluster=vote$state))#
predict <- data.frame(effect("pres_proximity*pres_ideo_correct", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(pres_proximity=unique(na.omit(vote$pres_proximity)),pres_ideo_correct=c(0,1),vcov. = cluster.vcov(model, cluster=vote$state))))#
#
predict$pres_ideo_correct <- factor(predict$pres_ideo_correct,levels=c(0,1),labels=c("Incorrect Placement","Correct Placement"))#
#
ggplot(data= predict, mapping=aes(x=pres_proximity, y=fit, group=pres_ideo_correct,fill=pres_ideo_correct,linetype=pres_ideo_correct)) + geom_line(aes(x = pres_proximity, y = fit), size = 0.50) + geom_ribbon(aes(ymin=lower, ymax=upper), alpha = .2) + scale_fill_manual("",values=c("red1","dodgerblue1")) + scale_linetype_manual("",values=c("dashed","solid")) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous(limits=c(-6,6), breaks=c(-6,0,6), labels=c("-6 \nConservative", "0","0 \nLiberal"), "Voter Candidate Proximity") + scale_y_continuous(limits=c(0,1.0), breaks=seq(0,1.0,0.10), "Probability of Voting Democratic") + ggtitle("Probability of Voting Democratic by Ideological Proximity & Correct Ideological Placement of Candidates, \n2016 Presidential Election (CCES)") + theme(legend.position=c(0.85, 0.10), legend.box.just = "left", legend.key.size = unit(1,"line"), legend.key = element_rect(size = 0, color = 'white'), legend.text.align = 0, legend.b
ox = "horizontal") + guides(fill = guide_legend(reverse=T), linetype = guide_legend(reverse=T))#
#
model <- glm(senate_vote ~ senate_proximity*sen_ideo_correct, data=vote, weights=weight, family = binomial(link = "logit")) # Senate#
coeftest(model, vcov = cluster.vcov(model, cluster=vote$state))#
predict <- data.frame(effect("senate_proximity*sen_ideo_correct", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(senate_proximity=unique(na.omit(vote$senate_proximity)),sen_ideo_correct=c(0,1),vcov. = cluster.vcov(model, cluster=vote$state))))#
#
predict$sen_ideo_correct <- factor(predict$sen_ideo_correct,levels=c(0,1),labels=c("Incorrect Placement","Correct Placement"))#
#
ggplot(data= predict, mapping=aes(x=senate_proximity, y=fit, group=sen_ideo_correct,fill=sen_ideo_correct,linetype=sen_ideo_correct)) + geom_line(aes(x = senate_proximity, y = fit), size = 0.50) + geom_ribbon(aes(ymin=lower, ymax=upper), alpha = .2) + scale_fill_manual("",values=c("red1","dodgerblue1")) + scale_linetype_manual("",values=c("dashed","solid")) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous(limits=c(-6,6), breaks=c(-6,0,6), labels=c("-6 \nConservative", "0","0 \nLiberal"), "Voter Candidate Proximity") + scale_y_continuous(limits=c(0,1.0), breaks=seq(0,1.0,0.10), "Probability of Voting Democratic") + ggtitle("Probability of Voting Democratic by Ideological Proximity & Correct Ideological Placement of Candidates, \n2016 Senate Elections (CCES)") + theme(legend.position=c(0.85, 0.10), legend.box.just = "left", legend.key.size = unit(1,"line"), legend.key = element_rect(size = 0, color = 'white'), legend.text.align = 0, legend.box =
"horizontal") + guides(fill = guide_legend(reverse=T), linetype = guide_legend(reverse=T))#
#
model <- glm(senate_vote ~ senate_proximity*sen_ideo_correct, data=vote, weights=weight, family = binomial(link = "logit")) # Senate#
coeftest(model, vcov = cluster.vcov(model, cluster=vote$state))#
predict <- data.frame(effect("senate_proximity*sen_ideo_correct", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(senate_proximity=unique(na.omit(vote$senate_proximity)),sen_ideo_correct=c(0,1),vcov. = cluster.vcov(model, cluster=vote$state))))#
#
predict$sen_ideo_correct <- factor(predict$sen_ideo_correct,levels=c(0,1),labels=c("Incorrect Placement","Correct Placement"))#
#
ggplot(data= predict, mapping=aes(x=senate_proximity, y=fit, group=sen_ideo_correct,fill=sen_ideo_correct,linetype=sen_ideo_correct)) + geom_line(aes(x = senate_proximity, y = fit), size = 0.50) + geom_ribbon(aes(ymin=lower, ymax=upper), alpha = .2) + scale_fill_manual("",values=c("red1","dodgerblue1")) + scale_linetype_manual("",values=c("dashed","solid")) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous(limits=c(-6,6), breaks=c(-6,0,6), labels=c("-6 \nConservative", "0","0 \nLiberal"), "Voter Candidate Proximity") + scale_y_continuous(limits=c(0,1.0), breaks=seq(0,1.0,0.10), "Probability of Voting Democratic") + ggtitle("Probability of Voting Democratic by Ideological Proximity & Correct Ideological Placement of Candidates, \n2016 Senate Elections (CCES)") + theme(legend.position=c(0.85, 0.10), legend.box.just = "left", legend.key.size = unit(1,"line"), legend.key = element_rect(size = 0, color = 'white'), legend.text.align = 0, legend.box =
"horizontal") + guides(fill = guide_legend(reverse=T), linetype = guide_legend(reverse=T))#
#
model <- glm(house_vote ~ house_proximity*house_ideo_correct, data=vote, weights=weight, family = binomial(link = "logit")) # House#
coeftest(model, vcov = cluster.vcov(model, cluster=vote$district))#
predict <- data.frame(effect("house_proximity*house_ideo_correct", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(house_proximity=unique(na.omit(vote$house_proximity)),house_ideo_correct=c(0,1),vcov. = cluster.vcov(model, cluster=vote$district))))#
#
predict$house_ideo_correct <- factor(predict$house_ideo_correct,levels=c(0,1),labels=c("Incorrect Placement","Correct Placement"))#
#
ggplot(data= predict, mapping=aes(x=house_proximity, y=fit, group=house_ideo_correct,fill=house_ideo_correct,linetype=house_ideo_correct)) + geom_line(aes(x = house_proximity, y = fit), size = 0.50) + geom_ribbon(aes(ymin=lower, ymax=upper), alpha = .2) + scale_fill_manual("",values=c("red1","dodgerblue1")) + scale_linetype_manual("",values=c("dashed","solid")) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous(limits=c(-6,6), breaks=c(-6,0,6), labels=c("-6 \nConservative", "0","0 \nLiberal"), "Voter Candidate Proximity") + scale_y_continuous(limits=c(0,1.0), breaks=seq(0,1.0,0.10), "Probability of Voting Democratic") + ggtitle("Probability of Voting Democratic by Ideological Proximity & Correct Ideological Placement of Candidates, \n2016 House Elections (CCES)") + theme(legend.position=c(0.85, 0.10), legend.box.just = "left", legend.key.size = unit(1,"line"), legend.key = element_rect(size = 0, color = 'white'), legend.text.align = 0, legend.bo
x = "horizontal") + guides(fill = guide_legend(reverse=T), linetype = guide_legend(reverse=T))
library(gsheet) # Use the gsheet package to scrape voter turnout data from the Elect Project#
turnout <- gsheet2tbl('https://docs.google.com/spreadsheets/d/1bH38j6_e8yA9xq8OMlyLOL6h_iTS7ABQMKNxzFgKBDo/edit?usp=sharing') #Turnout from 1789-2014#
turnout2016 <- gsheet2tbl('https://docs.google.com/spreadsheets/d/1VAcF0eJ06y_8T4o2gvIL4YcyQy8pxb1zYkgXF76Uu1s/edit#gid=2030096602')#
#
# Clean-up data#
pres_turnout <- turnout[,1:2]#
midterm_turnout <- turnout[,3:4]#
colnames(pres_turnout) <- c("year","vep_turnout_rate")#
colnames(midterm_turnout) <- c("year","vep_turnout_rate")#
pres_turnout$election <- "Presidential Election"#
midterm_turnout$election <- "Midterm Election"#
turnout <- rbind(pres_turnout,midterm_turnout)#
#
turnout2016 <- turnout2016[2,c(4)]#
colnames(turnout2016) <- "vep_turnout_rate"#
turnout2016$election <- "Presidential Election"#
turnout2016$year <- 2016#
turnout2016$vep_turnout_rate <- gsub("%","",turnout2016$vep_turnout_rate)#
#
turnout <- rbind(turnout,turnout2016)#
turnout$vep_turnout_rate <- as.numeric(turnout$vep_turnout_rate)#
turnout$election <- factor(turnout$election,levels=c("Presidential Election","Midterm Election"))#
#
# Make the plot#
library(ggplot2)#
# One cumulative trend of decline in voter turnout since the Civil War#
ggplot(subset(turnout,turnout$year >= 1866), aes(x=year,y=vep_turnout_rate)) + geom_point(mapping=aes(x=year,y=vep_turnout_rate, shape=election,colour=election),inherit.aes = F) + scale_shape_manual("",values=c(16,18)) + scale_colour_manual("",values=c("cyan3","firebrick3")) + theme_bw() + theme(legend.position=c(0.875, 0.85), legend.key.size = unit(0.9,"line"), legend.key = element_blank()) + scale_y_continuous(limits=c(30,90),breaks=seq(30,90,10),labels=c("30%","40%","50%","60%","70%","80%","90%"), "Eligible Voter Turnout Rate") + scale_x_continuous(breaks=seq(1866,2016,10), "") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + geom_smooth(method = "loess", se=FALSE, color="black", size = 0.75) + ggtitle("National Voter-Turnout in Presidential & Midterm Elections in the United States, 1866-2016") + annotate(geom = "text", x = 1918, y = 80, label = "Women's Suffrage", color = "blue", angle = 90, size = 3.5) + geom_vline(xintercept=1920,linetype = "dashed",color="gray") + ann
otate(geom = "text", x = 1868, y = 40, label = "15th Amendment", color = "blue", angle = 90, size = 3.5) + geom_vline(xintercept=1870,linetype = "dashed",color="gray") + annotate(geom = "text", x = 1958, y = 80, label = "DC Suffrage", color = "blue", angle = 90, size = 3.5) + geom_vline(xintercept=1960,linetype = "dashed",color="gray") + annotate(geom = "text", x = 1963, y = 80, label = "Voting Rights Act", color = "blue", angle = 90, size = 3.5) + geom_vline(xintercept=1965,linetype = "dashed",color="gray") + annotate(geom = "text", x = 1969, y = 80, label = "Lowering Voting Age", color = "blue", angle = 90, size = 3.5) + geom_vline(xintercept=1971,linetype = "dashed",color="gray")#
#
# One lowess regression line per election type (presidential/midterm)#
ggplot(subset(turnout,turnout$year >= 1866), aes(x=year,y=vep_turnout_rate, shape=election,colour=election)) + geom_point() + scale_shape_manual("",values=c(16,18)) + scale_colour_manual("",values=c("cyan3","firebrick3")) + theme_bw() + theme(legend.position=c(0.875, 0.85), legend.key.size = unit(0.9,"line"), legend.key = element_blank()) + scale_y_continuous(limits=c(30,90),breaks=seq(30,90,10),labels=c("30%","40%","50%","60%","70%","80%","90%"), "Eligible Voter Turnout Rate") + scale_x_continuous(breaks=seq(1866,2016,10), "") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + geom_smooth(method = "loess", se=FALSE, size = 0.75) + ggtitle("National Voter-Turnout in Presidential & Midterm Elections in the United States, 1866-2016") + annotate(geom = "text", x = 1918, y = 80, label = "Women's Suffrage", color = "blue", angle = 90, size = 3.5) + geom_vline(xintercept=1920,linetype = "dashed",color="gray") + annotate(geom = "text", x = 1868, y = 40, label = "15th Amendment", colo
r = "blue", angle = 90, size = 3.5) + geom_vline(xintercept=1870,linetype = "dashed",color="gray") + annotate(geom = "text", x = 1958, y = 80, label = "DC Suffrage", color = "blue", angle = 90, size = 3.5) + geom_vline(xintercept=1960,linetype = "dashed",color="gray") + annotate(geom = "text", x = 1963, y = 80, label = "Voting Rights Act", color = "blue", angle = 90, size = 3.5) + geom_vline(xintercept=1965,linetype = "dashed",color="gray") + annotate(geom = "text", x = 1969, y = 80, label = "Lowering Voting Age", color = "blue", angle = 90, size = 3.5) + geom_vline(xintercept=1971,linetype = "dashed",color="gray")#
#
########
#
library(readstata13)#
cces <- read.dta13("/Users/carlosalgara/Dropbox/CCES2016_Common_original/CCES2016.dta")#
#
# Variation in political participation#
#
participation <- subset(cces,select=c(commonweight_post,CC16_300d_5,CC16_316,CC16_327,CC16_404,CC16_417a_1,CC16_417a_2,CC16_417a_3,CC16_417a_4,CC16_418a))#
colnames(participation) <- c("weight","social_media","pres_vote_12","pres_primary_vote","voting_time","attend_polmeetings","yard_sign","volunteer_campaign","donate_money","run_for_office")#
#
participation[] <- lapply(participation, as.character)#
participation[participation == "Yes"] <- 1#
participation[participation == "No"] <- 0#
participation[participation == "Yes, I definitely voted."] <- 1#
participation[participation == "I usually vote but did not vote in 2012"] <- 0#
participation[participation == "I am not sure"] <- 0#
#
participation[participation == "No, didn’t vote in a primary or caucus"] <- 0#
participation[participation == "Yes, voted in a primary or caucus"] <- 1#
#
participation$voting_time[participation$voting_time == "Don't know"] <- NA#
participation$voting_time[participation$voting_time == "Not at all"] <- 0#
participation$voting_time[participation$voting_time == "Less than 10 minutes"] <- 1#
participation$voting_time[participation$voting_time == "10 - 30 minutes"] <- 2#
participation$voting_time[participation$voting_time == "31 minutes - 1 hour"] <- 3#
participation$voting_time[participation$voting_time == "More than 1 hour"] <- 4#
#
participation[] <- lapply(participation, as.numeric)#
library(descr)#
#
frequencies <- list()#
for(i in 2:ncol(participation)){#
  x <- data.frame(freq(participation[,i],w=participation$weight))#
  x$category <- rownames(x)#
  x <- x[,3:4]#
  x <- subset(x,x$category != "Total")#
  x <- subset(x,x$category != "NA's")#
  x$activity <- colnames(participation)[[i]]#
  frequencies[[i]] <- x#
}#
library(plyr)#
frequencies <- ldply(frequencies, data.frame)#
#
frequencies$category[frequencies$activity != "voting_time" & frequencies$category == 1] <- "Yes"#
frequencies$category[frequencies$activity != "voting_time" & frequencies$category == 0] <- "No"#
frequencies$category[frequencies$activity == "voting_time" & frequencies$category == 0] <- "0 \nNo Wait"#
frequencies$category[frequencies$activity == "voting_time" & frequencies$category == 4] <- "4 \n>1 Hour"#
#
frequencies$activity[frequencies$activity == "attend_polmeetings"] <- "Attend local political meetings?"#
frequencies$activity[frequencies$activity == "donate_money"] <- "Donate money to a candidate, campaign, or \npolitical organization?"#
frequencies$activity[frequencies$activity == "pres_primary_vote"] <- "Voted in the 2012 Presidential Primaries?"#
frequencies$activity[frequencies$activity == "run_for_office"] <- "Ever run for elective office?"#
frequencies$activity[frequencies$activity == "social_media"] <- "Forwarded a story, photo, video or link \nabout politics to friends?"#
frequencies$activity[frequencies$activity == "volunteer_campaign"] <- "Work for a candidate or campaign?"#
frequencies$activity[frequencies$activity == "yard_sign"] <- "Put up a political sign?"#
frequencies$activity[frequencies$activity == "pres_vote_12"] <- "Voted in the 2012 Presidential Election?"#
frequencies$activity[frequencies$activity == "voting_time"] <- "Time took to vote"#
#
ggplot(frequencies, aes(x=category,y=Valid.Percent)) + theme_bw() + geom_bar(stat="identity") + theme_bw()  + facet_wrap(~activity, ncol = 3, scales = "free") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + ggtitle("Variation in Different Activities of Political Participation, 2016 Cooperative Congressional Election Study") + scale_y_continuous("Weighted Percentage") + scale_x_discrete("")#
#
# Why do people give money?#
#
donors <- subset(cces,select=c(commonweight_post,CC16_417e_1,CC16_417e_2,CC16_417e_3,CC16_417e_5))#
colnames(donors) <- c("weight","policy_influence","business","network","civic_duty")#
#
frequencies <- list()#
for(i in 2:ncol(donors)){#
  x <- data.frame(freq(donors[,i],w=donors$weight,plot=F))#
  x$category <- rownames(x)#
  x <- x[,3:4]#
  x <- subset(x,x$category != "Total")#
  x <- subset(x,x$category != "NA's")#
  x <- subset(x,x$category != "Skipped")#
  x <- subset(x,x$category != "Not Asked")#
  x$activity <- colnames(donors)[[i]]#
  frequencies[[i]] <- x#
}#
frequencies <- ldply(frequencies, data.frame)#
#
frequencies$activity[frequencies$activity == "business"] <- "Effective way to help my business/industry"#
frequencies$activity[frequencies$activity == "civic_duty"] <- "For anyone who can afford to contribute, it is \na civic duty to contribute financially to campaigns"#
frequencies$activity[frequencies$activity == "network"] <- "Allow me to be part of a network with other contributors"#
frequencies$activity[frequencies$activity == "policy_influence"] <- "Effective way to influence public policy"#
#
frequencies$category <- factor(frequencies$category,levels=c("Strongly disagree","Somewhat disagree","Neither agree nor disagree","Somewhat agree","Strongly agree"),labels=c("Strongly \ndisagree", "Somewhat \ndisagree","Neutral","Somewhat \nagree","Strongly \nagree"))#
#
ggplot(frequencies, aes(x=category,y=Valid.Percent)) + theme_bw() + geom_bar(stat="identity") + theme_bw()  + facet_wrap(~activity, ncol = 2, scales = "free") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + ggtitle("Variation in the Incentive for Political Donors to Donate to Campaigns, 2016 Cooperative Congressional Election Study") + scale_y_continuous("Weighted Percentage") + scale_x_discrete("")#
#
# Role of resources in predicting campaign contributions & voting. This section articulates the resource bias in participation & voting#
#
cces <- read.dta13(paste("/Users/carlosalgara/Desktop/carlos_school/PhD_UC Davis/Research/Data/American Politics/CCES/CCES",2014,".dta",sep=""),convert.factors = T, convert.underscore = FALSE, encoding ="UTF-8")#
#
resources <- subset(cces,select=c(weight,cdid,CC401,CC417a_4,faminc,educ))#
resources[] <- lapply(resources, as.character)#
colnames(resources) <- c("weight","cdid","turnout","contribute","income","education")#
#
resources$turnout[resources$turnout == "I did not vote in the election this November."] <- 0#
resources$turnout[resources$turnout == "I thought about voting this time â€“ but didn't."] <- 0#
resources$turnout[resources$turnout == "I usually vote, but didn't this time."] <- 0#
resources$turnout[resources$turnout == "I attempted to vote but did not or could not."] <- 0#
resources$turnout[resources$turnout == "I definitely voted in the Midterm Election on November 4th."] <- 1#
#
resources$contribute[resources$contribute == "No"] <- 0#
resources$contribute[resources$contribute == "Yes"] <- 1#
#
na <- data.frame(freq(resources$income,plot=F))#
na$category <- rownames(na)#
rownames(na) <- NULL#
#
resources$income[resources$income %in% as.character(na[18,4])] <- 0#
resources$income[resources$income %in% as.character(na[1,4])] <- 1#
resources$income[resources$income %in% as.character(na[6,4])] <- 2#
resources$income[resources$income %in% as.character(na[10,4])] <- 3#
resources$income[resources$income %in% as.character(na[12,4])] <- 4#
resources$income[resources$income %in% as.character(na[13,4])] <- 5#
resources$income[resources$income %in% as.character(na[15,4])] <- 6#
resources$income[resources$income %in% as.character(na[16,4])] <- 7#
resources$income[resources$income %in% as.character(na[17,4])] <- 8#
resources$income[resources$income %in% as.character(na[2,4])] <- 9#
resources$income[resources$income %in% as.character(na[3,4])] <- 10#
resources$income[resources$income %in% as.character(na[4,4])] <- 11#
resources$income[resources$income %in% as.character(na[7,4])] <- 12#
resources$income[resources$income %in% as.character(na[8,4])] <- 13#
resources$income[resources$income %in% as.character(na[11,4])] <- 14#
resources$income[resources$income %in% as.character(na[14,4])] <- 15#
resources$income[resources$income %in% as.character(na[9,4])] <- 13#
resources$income[resources$income %in% as.character(na[5,4])] <- 11#
resources$income[resources$income %in% as.character(na[c(19,20),4])] <- NA#
#
resources$education <- factor(resources$education,levels=c("No HS","High school graduate","Some college","2-year","4-year","Post-grad"))#
#
resources$income <- as.numeric(resources$income)#
resources$weight <- as.numeric(resources$weight)#
resources$turnout <- as.numeric(resources$turnout)#
resources$contribute <- as.numeric(resources$contribute)#
#
library(effects)#
library(sandwich)#
library(lmtest)#
library(multiwayvcov)#
#
# Turnout ~ Education#
#
model <- glm(turnout ~ education, data=resources, weights=weight, family = binomial(link = "logit"))#
coeftest(model, vcov = cluster.vcov(model, cluster=resources$cdid))#
predict <- data.frame(effect("education", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(vcov. = cluster.vcov(model, cluster=resources$cdid))))#
#
predict$education <- factor(predict$education,levels=c("No HS","High school graduate","Some college","2-year","4-year","Post-grad"))#
#
ggplot(data= predict, mapping=aes(x=education, y=fit, ymin=lower, ymax=upper, fill=education)) + geom_bar(stat="identity") + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_discrete("Voter Education Level") + scale_y_continuous(limits=c(0,1.0), breaks=seq(0,1.0,0.05), "Probability of Turning Out to Vote") + ggtitle("Probability of Voter Turnout by Education Level in the 2014 Midterm Elections") + coord_cartesian(ylim=c(0.70,1.0)) + scale_fill_discrete(guide=FALSE)#
#
# Turnout ~ Income#
#
model <- glm(turnout ~ income, data=resources, weights=weight, family = binomial(link = "logit"))#
coeftest(model, vcov = cluster.vcov(model, cluster=resources$cdid))#
predict <- data.frame(effect("income", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(income = seq(0,15,1), (vcov. = cluster.vcov(model, cluster=resources$cdid)))))#
#
ggplot(data= predict, mapping=aes(x=income, y=fit)) + geom_line(aes(x = income, y = fit), size = 0.50) + geom_ribbon(aes(ymin=lower, ymax=upper), alpha = .2) + scale_colour_manual("",values="black") + scale_fill_manual("",values="grey12") + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous(limits=c(0,15), breaks=c(0,15), labels=c("Less than \n$10,000", "Greater than \n$500,000"), "Voter Income") + scale_y_continuous(limits=c(0.7,1.0), breaks=seq(0.7,1.0,0.05), "Probability of Turning Out to Vote") + ggtitle("Probability of Voter Turnout by Income Level in the 2014 Midterm Elections")#
#
# Contribution ~ Education#
#
model <- glm(contribute ~ education, data=resources, weights=weight, family = binomial(link = "logit"))#
coeftest(model, vcov = cluster.vcov(model, cluster=resources$cdid))#
predict <- data.frame(effect("education", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(vcov. = cluster.vcov(model, cluster=resources$cdid))))#
#
predict$education <- factor(predict$education,levels=c("No HS","High school graduate","Some college","2-year","4-year","Post-grad"))#
#
ggplot(data= predict, mapping=aes(x=education, y=fit, ymin=lower, ymax=upper, fill=education)) + geom_bar(stat="identity") + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_discrete("Voter Education Level") + scale_y_continuous(limits=c(0,1.0), breaks=seq(0.05,0.35,0.05), expand=c(0,0), "Probability of Contributing to a Campaign") + ggtitle("Probability of Being a Campaign Donor by Education Level in the 2014 Midterm Elections") + coord_cartesian(ylim=c(0,0.375)) + scale_fill_discrete(guide=FALSE)#
#
# Contribution ~ Income#
#
model <- glm(contribute ~ income, data=resources, weights=weight, family = binomial(link = "logit"))#
coeftest(model, vcov = cluster.vcov(model, cluster=resources$cdid))#
predict <- data.frame(effect("income", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(income = seq(0,15,1), (vcov. = cluster.vcov(model, cluster=resources$cdid)))))#
#
ggplot(data= predict, mapping=aes(x=income, y=fit)) + geom_line(aes(x = income, y = fit), size = 0.50) + geom_ribbon(aes(ymin=lower, ymax=upper), alpha = .2) + scale_colour_manual("",values="black") + scale_fill_manual("",values="grey12") + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous(limits=c(0,15), breaks=c(0,15), labels=c("Less than \n$10,000", "Greater than \n$500,000"), "Voter Income") + scale_y_continuous(limits=c(0,0.55), breaks=seq(0,0.55,0.05), "Probability of Contributing to a Campaign") + ggtitle("Probability of Being a Campaign Donor by Income Level in the 2014 Midterm Elections")#
#
# Role of retrospective and prospective voting in voting#
#
cces <- read.dta13("/Users/carlosalgara/Dropbox/CCES2016_Common_original/CCES2016.dta")#
voting <- subset(cces,select=c(commonweight_post,cdid115,CC16_302,CC16_303,CC16_304,CC16_364c,CC16_365,CC16_367))#
voting[] <- lapply(voting, as.character)#
colnames(voting) <- c("weight","cdid","retro_economy","retro_income","prospective_income","pres_vote","sen_vote","house_vote")#
#
na <- data.frame(freq(voting$retro_economy,plot=F))#
na$category <- rownames(na)#
rownames(na) <- NULL#
voting$retro_economy[voting$retro_economy %in% as.character(na[1,4])] <- 1#
voting$retro_economy[voting$retro_economy %in% as.character(na[2,4])] <- 2#
voting$retro_economy[voting$retro_economy %in% as.character(na[3,4])] <- -2#
voting$retro_economy[voting$retro_economy %in% as.character(na[4,4])] <- -1#
voting$retro_economy[voting$retro_economy %in% as.character(na[5,4])] <- NA#
voting$retro_economy[voting$retro_economy %in% as.character(na[6,4])] <- 0#
voting$retro_economy[voting$retro_economy %in% as.character(na[7,4])] <- NA#
#
na <- data.frame(freq(voting$retro_income,plot=F))#
na$category <- rownames(na)#
rownames(na) <- NULL#
voting$retro_income[voting$retro_income %in% as.character(na[1,4])] <- -2#
voting$retro_income[voting$retro_income %in% as.character(na[2,4])] <- -1#
voting$retro_income[voting$retro_income %in% as.character(na[3,4])] <- 2#
voting$retro_income[voting$retro_income %in% as.character(na[4,4])] <- 1#
voting$retro_income[voting$retro_income %in% as.character(na[5,4])] <- 0#
voting$retro_income[voting$retro_income %in% as.character(na[6,4])] <- NA#
#
na <- data.frame(freq(voting$prospective_income,plot=F))#
na$category <- rownames(na)#
rownames(na) <- NULL#
voting$prospective_income[voting$prospective_income %in% as.character(na[1,4])] <- 2#
voting$prospective_income[voting$prospective_income %in% as.character(na[2,4])] <- -2#
voting$prospective_income[voting$prospective_income %in% as.character(na[3,4])] <- 1#
voting$prospective_income[voting$prospective_income %in% as.character(na[4,4])] <- -1#
voting$prospective_income[voting$prospective_income %in% as.character(na[5,4])] <- NA#
voting$prospective_income[voting$prospective_income %in% as.character(na[6,4])] <- 0#
voting$prospective_income[voting$prospective_income %in% as.character(na[7,4])] <- NA#
#
na <- data.frame(freq(voting$pres_vote,plot=F))#
na$category <- rownames(na)#
rownames(na) <- NULL#
voting$pres_vote[voting$pres_vote %in% as.character(na[1,4])] <- 0#
voting$pres_vote[voting$pres_vote %in% as.character(na[3,4])] <- 1#
voting$pres_vote[voting$pres_vote %in% as.character(na[c(2,4:8),4])] <- NA#
#
na <- data.frame(freq(voting$sen_vote,plot=F))#
na$category <- rownames(na)#
rownames(na) <- NULL#
voting$sen_vote[voting$sen_vote %in% as.character(na[1,4])] <- 1#
voting$sen_vote[voting$sen_vote %in% as.character(na[2,4])] <- 0#
voting$sen_vote[voting$sen_vote %in% as.character(na[c(3:8),4])] <- NA#
#
na <- data.frame(freq(voting$house_vote,plot=F))#
na$category <- rownames(na)#
rownames(na) <- NULL#
voting$house_vote[voting$house_vote %in% as.character(na[3,4])] <- 1#
voting$house_vote[voting$house_vote %in% as.character(na[4,4])] <- 0#
voting$house_vote[voting$house_vote %in% as.character(na[c(1:2,5:15),4])] <- NA#
#
voting[] <- lapply(voting, as.numeric)#
#
# Voting Democratic (i.e. for the in-party) in the 2016 election as a function of retrospective and prospective economic evaluations#
#
# Presidential vote ~ Retrospective economic evaluations#
#
model <- glm(pres_vote ~ retro_economy, data=voting, weights=weight, family = binomial(link = "logit"))#
coeftest(model, vcov = cluster.vcov(model, cluster=voting$cdid))#
predict <- data.frame(effect("retro_economy", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(retro_economy = seq(-2,2,1), (vcov. = cluster.vcov(model, cluster=voting$cdid)))))#
predict$retro_economy <- factor(predict$retro_economy,levels=c(-2,-1,0,1,2),labels=c("Much \nWorse","Somewhat \nWorse","Stayed \nSame","Somewhat \nBetter","Much \nBetter"))#
#
ggplot(data= predict, mapping=aes(x=retro_economy, y=fit, ymin=lower, ymax=upper, fill=retro_economy)) + geom_bar(stat="identity") + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_discrete("Retrospective Economic Evaluations") + scale_y_continuous(limits=c(0,1), breaks=seq(0,1,0.10), "Probability of Voting Democratic") + ggtitle("Probability of Voting Democratic by Retrospective Economic Evaluations in the \n2016 Presidential Election, Cooperative Congressional Election Study") + scale_fill_discrete(guide=FALSE)#
#
# Presidential vote ~ Retrospective income evaluations#
#
model <- glm(pres_vote ~ retro_income, data=voting, weights=weight, family = binomial(link = "logit"))#
coeftest(model, vcov = cluster.vcov(model, cluster=voting$cdid))#
predict <- data.frame(effect("retro_income", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(retro_income = seq(-2,2,1), (vcov. = cluster.vcov(model, cluster=voting$cdid)))))#
predict$retro_income <- factor(predict$retro_income,levels=c(-2,-1,0,1,2),labels=c("Decreased \nAlot","Decreased \nSomewhat","Stayed \nSame","Increased \nSomewhat","Increased \nAlot"))#
#
ggplot(data= predict, mapping=aes(x=retro_income, y=fit, ymin=lower, ymax=upper, fill=retro_income)) + geom_bar(stat="identity") + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_discrete("Retrospective Income Evaluations") + scale_y_continuous(limits=c(0,0.9), breaks=seq(0,0.9,0.10), "Probability of Voting Democratic") + ggtitle("Probability of Voting Democratic by Retrospective Income Evaluations in the \n2016 Presidential Election, Cooperative Congressional Election Study") + scale_fill_discrete(guide=FALSE)#
#
# Senate vote ~ Retrospective income evaluations#
#
model <- glm(sen_vote ~ retro_income, data=voting, weights=weight, family = binomial(link = "logit"))#
coeftest(model, vcov = cluster.vcov(model, cluster=voting$cdid))#
predict <- data.frame(effect("retro_income", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(retro_income = seq(-2,2,1), (vcov. = cluster.vcov(model, cluster=voting$cdid)))))#
predict$retro_income <- factor(predict$retro_income,levels=c(-2,-1,0,1,2),labels=c("Decreased \nAlot","Decreased \nSomewhat","Stayed \nSame","Increased \nSomewhat","Increased \nAlot"))#
#
ggplot(data= predict, mapping=aes(x=retro_income, y=fit, ymin=lower, ymax=upper, fill=retro_income)) + geom_bar(stat="identity") + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_discrete("Retrospective Income Evaluations") + scale_y_continuous(limits=c(0,0.9), breaks=seq(0,0.9,0.10), "Probability of Voting Democratic") + ggtitle("Probability of Voting Democratic by Retrospective Income Evaluations in the \n2016 Senate Elections, Cooperative Congressional Election Study") + scale_fill_discrete(guide=FALSE)#
#
# House vote ~ Retrospective income evaluations#
#
model <- glm(house_vote ~ retro_income, data=voting, weights=weight, family = binomial(link = "logit"))#
coeftest(model, vcov = cluster.vcov(model, cluster=voting$cdid))#
predict <- data.frame(effect("retro_income", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(retro_income = seq(-2,2,1), (vcov. = cluster.vcov(model, cluster=voting$cdid)))))#
predict$retro_income <- factor(predict$retro_income,levels=c(-2,-1,0,1,2),labels=c("Decreased \nAlot","Decreased \nSomewhat","Stayed \nSame","Increased \nSomewhat","Increased \nAlot"))#
#
ggplot(data= predict, mapping=aes(x=retro_income, y=fit, ymin=lower, ymax=upper, fill=retro_income)) + geom_bar(stat="identity") + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_discrete("Retrospective Income Evaluations") + scale_y_continuous(limits=c(0,0.9), breaks=seq(0,0.9,0.10), "Probability of Voting Democratic") + ggtitle("Probability of Voting Democratic by Retrospective Income Evaluations in the \n2016 House Elections, Cooperative Congressional Election Study") + scale_fill_discrete(guide=FALSE)#
#
# Pres vote ~ Prospective Income Evaluations#
#
model <- glm(pres_vote ~ prospective_income, data=voting, weights=weight, family = binomial(link = "logit"))#
coeftest(model, vcov = cluster.vcov(model, cluster=voting$cdid))#
predict <- data.frame(effect("prospective_income", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(prospective_income = seq(-2,2,1), (vcov. = cluster.vcov(model, cluster=voting$cdid)))))#
predict$prospective_income <- factor(predict$prospective_income,levels=c(-2,-1,0,1,2),labels=c("Get Much \nWorse","Get Somewhat \nWorse","Stay \nSame","Get Somewhat \nBetter","Get Much \nBetter"))#
#
ggplot(data= predict, mapping=aes(x=prospective_income, y=fit, ymin=lower, ymax=upper, fill=prospective_income)) + geom_bar(stat="identity") + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_discrete("Prospective Income Evaluations") + scale_y_continuous(limits=c(0,1.0), breaks=seq(0,1,0.10), "Probability of Voting Democratic") + ggtitle("Probability of Voting Democratic by Prospective Income Evaluations in the \n2016 Presidential Election, Cooperative Congressional Election Study") + scale_fill_discrete(guide=FALSE)#
#
# Sen vote ~ Prospective Income Evaluations#
#
model <- glm(sen_vote ~ prospective_income, data=voting, weights=weight, family = binomial(link = "logit"))#
coeftest(model, vcov = cluster.vcov(model, cluster=voting$cdid))#
predict <- data.frame(effect("prospective_income", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(prospective_income = seq(-2,2,1), (vcov. = cluster.vcov(model, cluster=voting$cdid)))))#
predict$prospective_income <- factor(predict$prospective_income,levels=c(-2,-1,0,1,2),labels=c("Get Much \nWorse","Get Somewhat \nWorse","Stay \nSame","Get Somewhat \nBetter","Get Much \nBetter"))#
#
ggplot(data= predict, mapping=aes(x=prospective_income, y=fit, ymin=lower, ymax=upper, fill=prospective_income)) + geom_bar(stat="identity") + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_discrete("Prospective Income Evaluations") + scale_y_continuous(limits=c(0,1.0), breaks=seq(0,1,0.10), "Probability of Voting Democratic") + ggtitle("Probability of Voting Democratic by Prospective Income Evaluations in the \n2016 Senate Elections, Cooperative Congressional Election Study") + scale_fill_discrete(guide=FALSE)#
#
# House vote ~ Prospective Income Evaluations#
#
model <- glm(house_vote ~ prospective_income, data=voting, weights=weight, family = binomial(link = "logit"))#
coeftest(model, vcov = cluster.vcov(model, cluster=voting$cdid))#
predict <- data.frame(effect("prospective_income", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(prospective_income = seq(-2,2,1), (vcov. = cluster.vcov(model, cluster=voting$cdid)))))#
predict$prospective_income <- factor(predict$prospective_income,levels=c(-2,-1,0,1,2),labels=c("Get Much \nWorse","Get Somewhat \nWorse","Stay \nSame","Get Somewhat \nBetter","Get Much \nBetter"))#
#
ggplot(data= predict, mapping=aes(x=prospective_income, y=fit, ymin=lower, ymax=upper, fill=prospective_income)) + geom_bar(stat="identity") + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_discrete("Prospective Income Evaluations") + scale_y_continuous(limits=c(0,1.0), breaks=seq(0,1,0.10), "Probability of Voting Democratic") + ggtitle("Probability of Voting Democratic by Prospective Income Evaluations in the \n2016 House Elections, Cooperative Congressional Election Study") + scale_fill_discrete(guide=FALSE)#
#
# Variation in political information#
#
nes <- read.dta13(paste("/Users/carlosalgara/Desktop/carlos_school/PhD_UC Davis/Research/Data/American Politics/ANES_Individual_Years/Data/NES",2016,".dta",sep=""),convert.factors = T, convert.underscore = FALSE, encoding ="UTF-8")#
#
# Correct Recall of Offices: Biden (V162072), Ryan (V162073a), John Roberts (V162076b), House Majority (V161515), Senate Majority (V161516)#
#
recall <- subset(nes,select=c(V160102,V162072,V162073a,V162076b,V161515,V161516,V162074a,V162075a,V161270,V161361x))#
colnames(recall) <- c("weight","biden","ryan","roberts","housemaj","senmaj","merkel","putin","educ","income")#
recall$housemaj[recall$housemaj %in% 1] <- 0#
recall$housemaj[recall$housemaj %in% 2] <- 1 #
recall$senmaj[recall$senmaj %in% 1] <- 0#
recall$senmaj[recall$senmaj %in% 2] <- 1#
x <- c(-7,-6,-5,-9)#
recall[recall == -9] <- NA#
recall[recall == -5] <- NA#
recall[recall == -6] <- NA#
recall[recall == -7] <- NA#
#
recall$knowledge_scale <- rowSums(recall[,c(2:8)])#
#
recall$educ[recall$educ %in% seq(1,8,1)] <- 1 # > HS#
recall$educ[recall$educ %in% 9] <- 2 # HS#
recall$educ[recall$educ %in% 10] <- 3 # Some college#
recall$educ[recall$educ %in% seq(11,12,1)] <- 4 # 2-yr college#
recall$educ[recall$educ %in% 13] <- 5 # BA#
recall$educ[recall$educ %in% seq(14,16,1)] <- 6 #Post-BA#
recall$educ[recall$educ %in% 90] <- 2#
recall$educ[recall$educ %in% 95] <- 2#
#
model <- lm(knowledge_scale~educ,data=recall,weights = weight)#
coeftest(model, vcov = vcovHC(model, "HC0"))#
predict <- data.frame(effect("educ", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(educ=seq(1,6,1),vcov. = vcovHC(model, "HC0"))))#
#
ggplot(data= predict, mapping=aes(x=educ, y=fit)) + geom_line(aes(x = educ, y = fit), size = 0.50) + geom_ribbon(aes(ymin=lower, ymax=upper), alpha = .2) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous("Voter Education Level",limits=c(1,6),breaks=c(1,2,3,4,5,6),labels=c("> HS", "HS","Some \nCollege","2-Yr \nCollege","BA","Post-Grad")) + scale_y_continuous(limits=c(3.2,5.65), breaks=seq(3.5,5.5,0.5), "Estimaed Political Knowledge") + ggtitle("Effect of Education on Citizen Political Knowledge, \n2016 American National Election Study")#
#
model <- lm(knowledge_scale~income,data=recall,weights = weight)#
coeftest(model, vcov = vcovHC(model, "HC0"))#
predict <- data.frame(effect("income", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(income=seq(1,28,1),vcov. = vcovHC(model, "HC0"))))#
#
ggplot(data= predict, mapping=aes(x=income, y=fit)) + geom_line(aes(x = income, y = fit), size = 0.50) + geom_ribbon(aes(ymin=lower, ymax=upper), alpha = .2) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous("Voter Income Level",limits=c(1,28),breaks=c(1,28),labels=c("< $5,000","> $250,000")) + scale_y_continuous("Estimaed Political Knowledge") + ggtitle("Effect of Income on Citizen Political Knowledge, \n2016 American National Election Study")#
#
# Partisanship & Proximity voting in Elections#
#
cces <- read.dta13("/Users/carlosalgara/Dropbox/CCES2016_Common_original/CCES2016.dta")#
#
# Variation in political participation#
#
vote <- subset(cces,select=c(commonweight_post,inputstate,cdid115,CC16_364c,CC16_365,CC16_367,pid7,CC16_340a,CC16_340d,CC16_340e,CC16_340l,CC16_340m,CC16_340n,CC16_340o))#
colnames(vote) <- c("weight","state","cd","pres_vote","senate_vote","house_vote","party_id","ideo_self","ideo_clinton","ideo_trump","ideo_dem_sen","ideo_rep_sen","ideo_dem_house","ideo_rep_house")#
#
na <- data.frame(freq(vote$pres_vote,plot=F))#
na$category <- rownames(na)#
rownames(na) <- NULL#
#
vote[] <- lapply(vote, as.character)#
#
vote$pres_vote[vote$pres_vote %in% as.character(na[1,4])] <- 0#
vote$pres_vote[vote$pres_vote %in% as.character(na[2,4])] <- 1#
vote$pres_vote[vote$pres_vote %in% as.character(na[c(3:10),4])] <- NA#
#
na <- data.frame(freq(vote$senate_vote,plot=F))#
na$category <- rownames(na)#
rownames(na) <- NULL#
#
vote$senate_vote[vote$senate_vote %in% as.character(na[1,4])] <- 1#
vote$senate_vote[vote$senate_vote %in% as.character(na[2,4])] <- 0#
vote$senate_vote[vote$senate_vote %in% as.character(na[c(3:8),4])] <- NA#
#
na <- data.frame(freq(vote$house_vote,plot=F))#
na$category <- rownames(na)#
rownames(na) <- NULL#
#
vote$house_vote[vote$house_vote %in% as.character(na[3,4])] <- 1#
vote$house_vote[vote$house_vote %in% as.character(na[4,4])] <- 0#
vote$house_vote[vote$house_vote %in% as.character(na[c(1:2,5:15),4])] <- NA#
#
na <- data.frame(freq(vote$party_id,plot=F))#
na$category <- rownames(na)#
rownames(na) <- NULL#
#
vote$party_id[vote$party_id %in% as.character(na[4,4])] <- NA#
vote$party_id[vote$party_id %in% as.character(na[9,4])] <- NA#
#
vote$party_id <- factor(vote$party_id,levels=c("Strong Republican","Not very strong Republican","Lean Republican","Independent","Lean Democrat","Not very strong Democrat","Strong Democrat"))#
# Partisanship & Presidential Voting#
#
vote$pres_vote <- as.numeric(vote$pres_vote)#
vote$house_vote <- as.numeric(vote$house_vote)#
vote$senate_vote <- as.numeric(vote$senate_vote)#
vote$weight <- as.numeric(vote$weight)#
#
model <- glm(pres_vote ~ party_id, data=vote, weights=weight, family = binomial(link = "logit"))#
coeftest(model, vcov = cluster.vcov(model, cluster=vote$state))#
predict <- data.frame(effect("party_id", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(vcov. = cluster.vcov(model, cluster=vote$state))))#
predict$party_id <- factor(predict$party_id,levels=c("Strong Republican","Lean Republican","Not very strong Republican","Independent","Not very strong Democrat","Lean Democrat","Strong Democrat"),labels=c("Strong \nRepublican","Lean \nRepublican","Weak \nRepublican","Independent","Weak \nDemocrat","Lean \nDemocrat","Strong \nDemocrat"))#
#
ggplot(predict, aes(x=party_id, y=fit, ymin=lower, ymax=upper, fill = party_id)) + geom_bar(stat="identity") + scale_fill_manual("",values = c("firebrick3","firebrick2","firebrick1","purple","dodgerblue1","dodgerblue2","dodgerblue3")) + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_y_continuous(limits=c(0,1.02), breaks=seq(0.10,1.0,0.10), expand = c(0, 0), "Predicted Probability of Democratic Vote") + scale_x_discrete("") + theme(legend.position="none") + geom_hline(yintercept = 0.50, colour = gray(1/2), lty = 2) + ggtitle("Probability of Voting Democratic by Partisanship Group, \n2016 Presidential Election (CCES)")#
#
# Senate Vote#
#
model <- glm(senate_vote ~ party_id, data=vote, weights=weight, family = binomial(link = "logit"))#
coeftest(model, vcov = cluster.vcov(model, cluster=vote$state))#
predict <- data.frame(effect("party_id", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(vcov. = cluster.vcov(model, cluster=vote$state))))#
predict$party_id <- factor(predict$party_id,levels=c("Strong Republican","Lean Republican","Not very strong Republican","Independent","Not very strong Democrat","Lean Democrat","Strong Democrat"),labels=c("Strong \nRepublican","Lean \nRepublican","Weak \nRepublican","Independent","Weak \nDemocrat","Lean \nDemocrat","Strong \nDemocrat"))#
#
ggplot(predict, aes(x=party_id, y=fit, ymin=lower, ymax=upper, fill = party_id)) + geom_bar(stat="identity") + scale_fill_manual("",values = c("firebrick3","firebrick2","firebrick1","purple","dodgerblue1","dodgerblue2","dodgerblue3")) + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_y_continuous(limits=c(0,1.02), breaks=seq(0.10,1.0,0.10), expand = c(0, 0), "Predicted Probability of Democratic Vote") + scale_x_discrete("") + theme(legend.position="none") + geom_hline(yintercept = 0.50, colour = gray(1/2), lty = 2) + ggtitle("Probability of Voting Democratic by Partisanship Group, \n2016 Senate Elections (CCES)")#
#
# House Vote#
#
vote$district <- paste(vote$state,vote$cd,sep="")#
#
model <- glm(house_vote ~ party_id, data=vote, weights=weight, family = binomial(link = "logit"))#
coeftest(model, vcov = cluster.vcov(model, cluster=vote$district))#
predict <- data.frame(effect("party_id", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(vcov. = cluster.vcov(model, cluster=vote$district))))#
predict$party_id <- factor(predict$party_id,levels=c("Strong Republican","Lean Republican","Not very strong Republican","Independent","Not very strong Democrat","Lean Democrat","Strong Democrat"),labels=c("Strong \nRepublican","Lean \nRepublican","Weak \nRepublican","Independent","Weak \nDemocrat","Lean \nDemocrat","Strong \nDemocrat"))#
#
ggplot(predict, aes(x=party_id, y=fit, ymin=lower, ymax=upper, fill = party_id)) + geom_bar(stat="identity") + scale_fill_manual("",values = c("firebrick3","firebrick2","firebrick1","purple","dodgerblue1","dodgerblue2","dodgerblue3")) + geom_errorbar(width=.25) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_y_continuous(limits=c(0,1.02), breaks=seq(0.10,1.0,0.10), expand = c(0, 0), "Predicted Probability of Democratic Vote") + scale_x_discrete("") + theme(legend.position="none") + geom_hline(yintercept = 0.50, colour = gray(1/2), lty = 2) + ggtitle("Probability of Voting Democratic by Partisanship Group, \n2016 House Elections (CCES)")#
#
# Proximity Voting#
#
vote[vote == "Very Conservative"] <- 1#
vote[vote == "Conservative"] <- 2#
vote[vote == "Somewhat Conservative"] <- 3#
vote[vote == "Middle of the Road"] <- 4#
vote[vote == "Somewhat Liberal"] <- 5#
vote[vote == "Liberal"] <- 6#
vote[vote == "Very Liberal"] <- 7#
vote[vote == "Not sure"] <- NA#
#
# Correct Placement #
#
for(i in 8:14){#
  vote[,i] <- as.numeric(vote[,i])#
}#
#
vote$pres_ideo_correct <- ifelse(vote$ideo_clinton > vote$ideo_trump, 1, ifelse(vote$ideo_clinton <= vote$ideo_trump, 0, NA))#
#
vote$sen_ideo_correct <- ifelse(vote$ideo_dem_sen > vote$ideo_rep_sen, 1, ifelse(vote$ideo_dem_sen <= vote$ideo_rep_sen, 0, NA))#
#
vote$house_ideo_correct <- ifelse(vote$ideo_dem_house > vote$ideo_rep_house, 1, ifelse(vote$ideo_dem_house <= vote$ideo_rep_house, 0, NA))#
#
# Dem proximity rule#
#
vote$pres_proximity <- abs(vote$ideo_trump - vote$ideo_self) - abs(vote$ideo_clinton - vote$ideo_self)#
vote$house_proximity <- abs(vote$ideo_rep_house - vote$ideo_self) - abs(vote$ideo_dem_house - vote$ideo_self)#
vote$senate_proximity <- abs(vote$ideo_rep_sen - vote$ideo_self) - abs(vote$ideo_dem_sen - vote$ideo_self)#
#
# Proximity Voting & Effect by Correct Placement#
#
model <- glm(pres_vote ~ pres_proximity*pres_ideo_correct + party_id, data=vote, weights=weight, family = binomial(link = "logit")) # President#
coeftest(model, vcov = cluster.vcov(model, cluster=vote$state))#
predict <- data.frame(effect("pres_proximity*pres_ideo_correct", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(pres_proximity=unique(na.omit(vote$pres_proximity)),pres_ideo_correct=c(0,1),vcov. = cluster.vcov(model, cluster=vote$state))))#
#
predict$pres_ideo_correct <- factor(predict$pres_ideo_correct,levels=c(0,1),labels=c("Incorrect Placement","Correct Placement"))#
#
ggplot(data= predict, mapping=aes(x=pres_proximity, y=fit, group=pres_ideo_correct,fill=pres_ideo_correct,linetype=pres_ideo_correct)) + geom_line(aes(x = pres_proximity, y = fit), size = 0.50) + geom_ribbon(aes(ymin=lower, ymax=upper), alpha = .2) + scale_fill_manual("",values=c("red1","dodgerblue1")) + scale_linetype_manual("",values=c("dashed","solid")) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous(limits=c(-6,6), breaks=c(-6,0,6), labels=c("-6 \nConservative", "0","0 \nLiberal"), "Voter Candidate Proximity") + scale_y_continuous(limits=c(0,1.0), breaks=seq(0,1.0,0.10), "Probability of Voting Democratic") + ggtitle("Probability of Voting Democratic by Ideological Proximity & Correct Ideological Placement of Candidates, \n2016 Presidential Election (CCES)") + theme(legend.position=c(0.85, 0.10), legend.box.just = "left", legend.key.size = unit(1,"line"), legend.key = element_rect(size = 0, color = 'white'), legend.text.align = 0, legend.b
ox = "horizontal") + guides(fill = guide_legend(reverse=T), linetype = guide_legend(reverse=T))#
#
model <- glm(pres_vote ~ pres_proximity*pres_ideo_correct, data=vote, weights=weight, family = binomial(link = "logit")) # Senate#
coeftest(model, vcov = cluster.vcov(model, cluster=vote$state))#
predict <- data.frame(effect("pres_proximity*pres_ideo_correct", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(pres_proximity=unique(na.omit(vote$pres_proximity)),pres_ideo_correct=c(0,1),vcov. = cluster.vcov(model, cluster=vote$state))))#
#
predict$pres_ideo_correct <- factor(predict$pres_ideo_correct,levels=c(0,1),labels=c("Incorrect Placement","Correct Placement"))#
#
ggplot(data= predict, mapping=aes(x=pres_proximity, y=fit, group=pres_ideo_correct,fill=pres_ideo_correct,linetype=pres_ideo_correct)) + geom_line(aes(x = pres_proximity, y = fit), size = 0.50) + geom_ribbon(aes(ymin=lower, ymax=upper), alpha = .2) + scale_fill_manual("",values=c("red1","dodgerblue1")) + scale_linetype_manual("",values=c("dashed","solid")) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous(limits=c(-6,6), breaks=c(-6,0,6), labels=c("-6 \nConservative", "0","0 \nLiberal"), "Voter Candidate Proximity") + scale_y_continuous(limits=c(0,1.0), breaks=seq(0,1.0,0.10), "Probability of Voting Democratic") + ggtitle("Probability of Voting Democratic by Ideological Proximity & Correct Ideological Placement of Candidates, \n2016 Presidential Election (CCES)") + theme(legend.position=c(0.85, 0.10), legend.box.just = "left", legend.key.size = unit(1,"line"), legend.key = element_rect(size = 0, color = 'white'), legend.text.align = 0, legend.b
ox = "horizontal") + guides(fill = guide_legend(reverse=T), linetype = guide_legend(reverse=T))#
#
model <- glm(senate_vote ~ senate_proximity*sen_ideo_correct, data=vote, weights=weight, family = binomial(link = "logit")) # Senate#
coeftest(model, vcov = cluster.vcov(model, cluster=vote$state))#
predict <- data.frame(effect("senate_proximity*sen_ideo_correct", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(senate_proximity=unique(na.omit(vote$senate_proximity)),sen_ideo_correct=c(0,1),vcov. = cluster.vcov(model, cluster=vote$state))))#
#
predict$sen_ideo_correct <- factor(predict$sen_ideo_correct,levels=c(0,1),labels=c("Incorrect Placement","Correct Placement"))#
#
ggplot(data= predict, mapping=aes(x=senate_proximity, y=fit, group=sen_ideo_correct,fill=sen_ideo_correct,linetype=sen_ideo_correct)) + geom_line(aes(x = senate_proximity, y = fit), size = 0.50) + geom_ribbon(aes(ymin=lower, ymax=upper), alpha = .2) + scale_fill_manual("",values=c("red1","dodgerblue1")) + scale_linetype_manual("",values=c("dashed","solid")) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous(limits=c(-6,6), breaks=c(-6,0,6), labels=c("-6 \nConservative", "0","0 \nLiberal"), "Voter Candidate Proximity") + scale_y_continuous(limits=c(0,1.0), breaks=seq(0,1.0,0.10), "Probability of Voting Democratic") + ggtitle("Probability of Voting Democratic by Ideological Proximity & Correct Ideological Placement of Candidates, \n2016 Senate Elections (CCES)") + theme(legend.position=c(0.85, 0.10), legend.box.just = "left", legend.key.size = unit(1,"line"), legend.key = element_rect(size = 0, color = 'white'), legend.text.align = 0, legend.box =
"horizontal") + guides(fill = guide_legend(reverse=T), linetype = guide_legend(reverse=T))#
#
model <- glm(senate_vote ~ senate_proximity*sen_ideo_correct, data=vote, weights=weight, family = binomial(link = "logit")) # Senate#
coeftest(model, vcov = cluster.vcov(model, cluster=vote$state))#
predict <- data.frame(effect("senate_proximity*sen_ideo_correct", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(senate_proximity=unique(na.omit(vote$senate_proximity)),sen_ideo_correct=c(0,1),vcov. = cluster.vcov(model, cluster=vote$state))))#
#
predict$sen_ideo_correct <- factor(predict$sen_ideo_correct,levels=c(0,1),labels=c("Incorrect Placement","Correct Placement"))#
#
ggplot(data= predict, mapping=aes(x=senate_proximity, y=fit, group=sen_ideo_correct,fill=sen_ideo_correct,linetype=sen_ideo_correct)) + geom_line(aes(x = senate_proximity, y = fit), size = 0.50) + geom_ribbon(aes(ymin=lower, ymax=upper), alpha = .2) + scale_fill_manual("",values=c("red1","dodgerblue1")) + scale_linetype_manual("",values=c("dashed","solid")) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous(limits=c(-6,6), breaks=c(-6,0,6), labels=c("-6 \nConservative", "0","0 \nLiberal"), "Voter Candidate Proximity") + scale_y_continuous(limits=c(0,1.0), breaks=seq(0,1.0,0.10), "Probability of Voting Democratic") + ggtitle("Probability of Voting Democratic by Ideological Proximity & Correct Ideological Placement of Candidates, \n2016 Senate Elections (CCES)") + theme(legend.position=c(0.85, 0.10), legend.box.just = "left", legend.key.size = unit(1,"line"), legend.key = element_rect(size = 0, color = 'white'), legend.text.align = 0, legend.box =
"horizontal") + guides(fill = guide_legend(reverse=T), linetype = guide_legend(reverse=T))#
#
model <- glm(house_vote ~ house_proximity*house_ideo_correct, data=vote, weights=weight, family = binomial(link = "logit")) # House#
coeftest(model, vcov = cluster.vcov(model, cluster=vote$district))#
predict <- data.frame(effect("house_proximity*house_ideo_correct", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(house_proximity=unique(na.omit(vote$house_proximity)),house_ideo_correct=c(0,1),vcov. = cluster.vcov(model, cluster=vote$district))))#
#
predict$house_ideo_correct <- factor(predict$house_ideo_correct,levels=c(0,1),labels=c("Incorrect Placement","Correct Placement"))#
#
ggplot(data= predict, mapping=aes(x=house_proximity, y=fit, group=house_ideo_correct,fill=house_ideo_correct,linetype=house_ideo_correct)) + geom_line(aes(x = house_proximity, y = fit), size = 0.50) + geom_ribbon(aes(ymin=lower, ymax=upper), alpha = .2) + scale_fill_manual("",values=c("red1","dodgerblue1")) + scale_linetype_manual("",values=c("dashed","solid")) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous(limits=c(-6,6), breaks=c(-6,0,6), labels=c("-6 \nConservative", "0","0 \nLiberal"), "Voter Candidate Proximity") + scale_y_continuous(limits=c(0,1.0), breaks=seq(0,1.0,0.10), "Probability of Voting Democratic") + ggtitle("Probability of Voting Democratic by Ideological Proximity & Correct Ideological Placement of Candidates, \n2016 House Elections (CCES)") + theme(legend.position=c(0.85, 0.10), legend.box.just = "left", legend.key.size = unit(1,"line"), legend.key = element_rect(size = 0, color = 'white'), legend.text.align = 0, legend.bo
x = "horizontal") + guides(fill = guide_legend(reverse=T), linetype = guide_legend(reverse=T))
library(rmarkdown)#
#touch _site.yml #"YML" file that tells your website how to assemble itself#
#touch index.Rmd #Create the main rmd file#
#touch about.Rmd #Create an about file#
#
setwd("/Users/carlosalgara/Dropbox/Github_Website/calgara.github.io")#
rmarkdown::render_site()
rmarkdown::render_site()
