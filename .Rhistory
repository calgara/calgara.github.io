pltdata$item <- ifelse(pltdata$item == "valence_congress_oversight", "Providing \nLegislative \nOversight",ifelse(pltdata$item == "valence_congress_bipartisan", "Encouraging \nBipartisanship",ifelse(pltdata$item == "valence_congress_careful_deliberations", "Conducting \nDeliberative \nBusiness",ifelse(pltdata$item == "valence_congress_represent_diverse_views", "Representing \nCountry's \nDiverse \nViews",ifelse(pltdata$item == "valence_congress_tackle_key_issues", "Tackling \nKey \nIssues \nFacing Country",ifelse(pltdata$item == "valence_congress_ethical_standards","Holding \nMembers \nto High \nEthical Standards",ifelse(pltdata$item == "valence_congress_transparency","Making \nActivities \nOpen & Transparent",ifelse(pltdata$item == "valence_congress_productive_discussions", "Conducting \nProductive \nIssue \nDiscussions",ifelse(pltdata$item == "valence_congress_controlling_special_interests", "Controlling \nSpecial \nInterest Influence",NA)))))))))
plot <- ggplot(pltdata, aes(x, y, colour = response,linetype=response)) + geom_line() + ggtitle("Ordinal IRT Model Characteric Curves for Congressional Valence Measures") + scale_x_continuous(expression(theta)) +  scale_y_continuous(expression(P(theta))) + geom_hline(aes(yintercept = 0.5)) + facet_wrap(~item) + theme_minimal() + labs(color="Ordinal Response",linetype="Ordinal Response") + theme(legend.position="bottom") #+ scale_colour_grey(start = 0, end = .5)
grid.newpage()
footnote <- "Scale responses range from Failing Grade (F) to Exemplary Grade (A)."
g <- arrangeGrob(plot, bottom = textGrob(footnote, x = 0.025, hjust = 0, vjust= 0, y=0.75, gp = gpar(fontface = "italic", fontsize = 9, col = "black")))
grid.draw(g)
ggsave(file="graded_irt_curves_full_scale_2006ces.png", g, width = 6.82, height = 4.63, units = "in")
irt_scores <- fscores(irt, full.scores = TRUE, full.scores.SE = F)
ces_2006_valence <- cbind(ces_2006_valence,irt_scores)
# IRT Model
iu_2014_valence <- iu_2014[,c(1,44:48)]
iu_2014_valence[iu_2014_valence == "A"] <- 4
iu_2014_valence[iu_2014_valence == "B"] <- 3
iu_2014_valence[iu_2014_valence == "C"] <- 2
iu_2014_valence[iu_2014_valence == "D"] <- 1
iu_2014_valence[iu_2014_valence == "F"] <- 0
for(i in 2:6){
iu_2014_valence[,i] <- as.numeric(iu_2014_valence[,i])
print(freq(iu_2014_valence[,i]))
}
rownames(iu_2014_valence) <- iu_2014_valence$case_id
iu_2014_valence$case_id <- NULL
iu_2014_valence <- iu_2014_valence[rowSums(is.na(iu_2014_valence)) != ncol(iu_2014_valence),] # delete empty rows
iu_2014_valence <- na.omit(iu_2014_valence)
irt <- mirt(iu_2014_valence, model = 1, itemtype = "graded", SE = T, verbose = T,technical = list(theta_lim = c(-1,1),removeEmptyRows = TRUE))
plt <- plot(irt, type = 'trace', facet_items=F) #store the object
print(plt) #plot the object
str(plt) #find the data
pltdata <- data.frame(lapply(plt$panel.args, function(x) do.call(cbind, x))[[1]])
pltdata$item <- rep(colnames(iu_2014_valence), each = 250)
x <- c("F","D","C","B","A")
pltdata$response <- rep(x, each = 50)
pltdata$item <- ifelse(pltdata$item == "valence_grade_deal_key_issues", "Dealing with Key Issues \nFacing Country",ifelse(pltdata$item == "valence_grade_check_partisanship", "Keeping Excessive \nPartisanship in Check",ifelse(pltdata$item == "valence_grade_deliberation", "Conducting Business in \nDeliberative Manner", ifelse(pltdata$item == "valence_grade_ethical_standards", "Holding Members to High \nEthical Standards", ifelse(pltdata$item == "valence_grade_special_interest_influence", "Controlling Special \nInterest Influence",NA)))))
plot <- ggplot(pltdata, aes(x, y, colour = response,linetype=response)) + geom_line() + ggtitle("Ordinal IRT Model Characteric Curves for Congressional Valence Measures") + scale_x_continuous(expression(theta)) +  scale_y_continuous(expression(P(theta))) + geom_hline(aes(yintercept = 0.5)) + facet_wrap(~item) + theme_minimal() + labs(color="Ordinal Response",linetype="Ordinal Response") + theme(legend.position="bottom") #+ scale_colour_grey(start = 0, end = .5)
grid.newpage()
footnote <- "Scale responses range from Failing Grade (F) to Exemplary Grade (A)."
g <- arrangeGrob(plot, bottom = textGrob(footnote, x = 0.025, hjust = 0, vjust= 0, y=0.75, gp = gpar(fontface = "italic", fontsize = 9, col = "black")))
grid.draw(g)
ggsave(file="graded_irt_curves_full_scale_2014iu.png", g, width = 6.82, height = 4.63, units = "in")
irt_scores <- fscores(irt, full.scores = TRUE, full.scores.SE = F)
iu_2014_valence <- cbind(iu_2014_valence,irt_scores)
# Merge with relevant frames
colnames(iu_2014_valence) <- c("valence_grade_deal_key_issues_numeric","valence_grade_check_partisanship_numeric","valence_grade_deliberation_numeric","valence_grade_ethical_standards_numeric","valence_grade_special_interest_influence_numeric","valence_irt_score")
iu_2014_valence$case_id <- rownames(iu_2014_valence)
rownames(iu_2014_valence) <- NULL
colnames(ces_2006_valence) <- c("valence_congress_oversight_numeric","valence_congress_bipartisan_numeric","valence_congress_careful_deliberations_numeric","valence_congress_represent_diverse_views_numeric","valence_congress_tackle_key_issues_numeric","valence_congress_ethical_standards_numeric","valence_congress_productive_discussions_numeric","valence_congress_transparency_numeric","valence_congress_controlling_special_interests_numeric","valence_irt_score")
ces_2006_valence$case_id <- rownames(ces_2006_valence)
rownames(ces_2006_valence) <- NULL
iu_2014 <- merge(iu_2014,iu_2014_valence,by=c("case_id"),all=T)
ces_2006 <- merge(ces_2006,ces_2006_valence,by=c("case_id"),all=T)
#############################################################################################################Code Policy Perception Variables#####
ces_2006$libcon_self_placement[ces_2006$libcon_self_placement == 8] <- NA
ces_2006$libcon_self_placement[ces_2006$libcon_self_placement == 9] <- NA
ces_2006$libcon_cong_democrats[ces_2006$libcon_cong_democrats == 8] <- NA
ces_2006$libcon_cong_democrats[ces_2006$libcon_cong_democrats == 9] <- NA
ces_2006$libcon_cong_reps[ces_2006$libcon_cong_reps == 8] <- NA
ces_2006$libcon_cong_reps[ces_2006$libcon_cong_reps == 9] <- NA
ces_2006$gop_proximity <- (ces_2006$libcon_self_placement - ces_2006$libcon_cong_democrats)^2 - ( ces_2006$libcon_self_placement - ces_2006$libcon_cong_reps)^2
ces_2006$gop_proximity <- abs(ces_2006$libcon_cong_democrats - ces_2006$libcon_self_placement) - abs(ces_2006$libcon_cong_reps - ces_2006$libcon_self_placement)
for(i in c(25:27,30,34,35,36,37,38)){
print(freq(iu_2014[,i]))
}
for(i in c(25:27,30,34,35,36,37,38)){
iu_2014[,i] <- ifelse(iu_2014[,i] == "Very Liberal", 1,ifelse(iu_2014[,i] == "Liberal",2,ifelse(iu_2014[,i] == "Somewhat Liberal",3,ifelse(iu_2014[,i] == "Middle of the Road",4,ifelse(iu_2014[,i] == "Somewhat Conservative",5,ifelse(iu_2014[,i] == "Conservative",6,ifelse(iu_2014[,i] == "Very Conservative",7,NA)))))))
iu_2014[,i]  <- as.numeric(iu_2014[,i])
}
iu_2014$gop_proximity <- abs(iu_2014$self_libcon_placement - iu_2014$dem_pty_libcon_placement)^2 - ( iu_2014$self_libcon_placement - iu_2014$rep_pty_libcon_placement)^2
iu_2014$gop_proximity <- abs(iu_2014$dem_pty_libcon_placement - iu_2014$self_libcon_placement) - abs(iu_2014$rep_pty_libcon_placement - iu_2014$self_libcon_placement)
# Pres Approval & PID
ces_2006$pres_approval_recode <- ifelse(ces_2006$pres_approval == "somewhat approve",3,ifelse(ces_2006$pres_approval == "somewhat disapprove",2,ifelse(ces_2006$pres_approval == "strongly approve",4,ifelse(ces_2006$pres_approval == "strongly disapprove",1,NA))))
iu_2014$pres_approval_recode <- ifelse(iu_2014$pres_approve == "Somewhat Approve",3,ifelse(iu_2014$pres_approve == "Somewhat Disapprove",2,ifelse(iu_2014$pres_approve == "Strongly approve",4,ifelse(iu_2014$pres_approve == "Strongly disapprove",1,NA))))
# PID
ces_2006$pid3 <- ifelse(ces_2006$pid3 == "democrat","Democrat",ifelse(ces_2006$pid3 == "republican","Republican",ifelse(ces_2006$pid3 == "independent","Independent",ifelse(ces_2006$pid3 == "something else (enter text)","Independent",NA))))
iu_2014$pid3 <- ifelse(iu_2014$pid7 == "Independent","Independent",ifelse(iu_2014$pid7 %in% c("Lean Democrat","Not very strong Democrat","Strong Democrat"),"Democrat",ifelse(iu_2014$pid7 %in% c("Lean Republican","Not very strong Republican","Strong Republican"),"Republican",NA)))
ces_2006$pid3 <- factor(ces_2006$pid3,levels=c("Democrat","Independent","Republican"))
iu_2014$pid3 <- factor(iu_2014$pid3,levels=c("Democrat","Independent","Republican"))
# Congressional Approval
ces_2006$cong_approval_recode <- ifelse(ces_2006$cong_approval == "somewhat approve",1,ifelse(ces_2006$cong_approval == "somewhat disapprove",0,ifelse(ces_2006$cong_approval == "strongly approve",1,ifelse(ces_2006$cong_approval == "strongly disapprove",0,NA))))
iu_2014$cong_approval_recode <- ifelse(iu_2014$cong_approval == "Somewhat Approve",1,ifelse(iu_2014$cong_approval == "Somewhat Disapprove",0,ifelse(iu_2014$cong_approval == "Strongly approve",1,ifelse(iu_2014$cong_approval == "Strongly disapprove",0,NA))))
iu_2014$cong_approval_recode_after <- ifelse(iu_2014$iu_cong_approval_after_valence == "Approve ",1,ifelse(iu_2014$iu_cong_approval_after_valence == "Disapprove",0,NA))
#############################################################################################################Run the Models#####
iu_2014$valence_row_mean <- rowMeans(iu_2014[,64:68],na.rm=TRUE)
ces_2006$valence_row_mean <- rowMeans(ces_2006[,53:61],na.rm=TRUE)
library(psych)
alpha(iu_2014[,64:68])
alpha(ces_2006[,53:61])
# Histograms
x <- subset(iu_2014,select=c(valence_row_mean,weight))
x1 <- subset(ces_2006,select=c(valence_row_mean))
x1$weight <- 1
x1$data <- "2006 Congressional Election Study"
x$data <- "2014 Indiana University CCES Study"
congressional_report_card <- rbind(x,x1)
congressional_report_card <- na.omit(congressional_report_card)
plot <- ggplot(subset(congressional_report_card,congressional_report_card$data == "2006 Congressional Election Study"), aes(x = valence_row_mean)) + geom_histogram(bins=16.5,alpha=.2,fill="black",color="black") + theme_minimal() + scale_x_continuous("Summated Citizen Congressional Valence Report Card",breaks=seq(0,4,1),labels=c("0 \nF","1 \nD","2 \nC","3 \nB","4 \nA")) + scale_y_continuous("Frequency",expand=c(0,0)) + theme(legend.position="bottom", legend.box.just = "left", legend.key.size = unit(1,"line"), legend.key = element_rect(size = 0, color = 'white'), legend.text.align = 0, legend.box = "horizontal") + facet_wrap(~data)
ggsave(file="histogram_citizen_reportcards_ces.png", plot, width = 6.82, height = 4.63, units = "in")
plot <- ggplot(subset(congressional_report_card,congressional_report_card$data == "2014 Indiana University CCES Study"), aes(x = valence_row_mean)) + geom_histogram(bins=16.5,alpha=.2,fill="black",color="black") + theme_minimal() + scale_x_continuous("Summated Citizen Congressional Valence Report Card",breaks=seq(0,4,1),labels=c("0 \nF","1 \nD","2 \nC","3 \nB","4 \nA")) + scale_y_continuous("Frequency",expand=c(0,0)) + theme(legend.position="bottom", legend.box.just = "left", legend.key.size = unit(1,"line"), legend.key = element_rect(size = 0, color = 'white'), legend.text.align = 0, legend.box = "horizontal") + facet_wrap(~data)
ggsave(file="histogram_citizen_reportcards_iu.png", plot, width = 6.82, height = 4.63, units = "in")
congressional_report_card$valence_row_mean_cat <- ifelse(congressional_report_card$valence_row_mean < 1, "F",ifelse(congressional_report_card$valence_row_mean >= 1 & congressional_report_card$valence_row_mean < 1.7, "D",ifelse(congressional_report_card$valence_row_mean >= 1.7 & congressional_report_card$valence_row_mean < 2.7, "C",ifelse(congressional_report_card$valence_row_mean >= 2.7 & congressional_report_card$valence_row_mean < 3.7, "B",ifelse(congressional_report_card$valence_row_mean >= 3.7,"A",NA)))))
congressional_report_card$f <- ifelse(congressional_report_card$valence_row_mean_cat == "F",1,0)
congressional_report_card$d <- ifelse(congressional_report_card$valence_row_mean_cat == "D",1,0)
congressional_report_card$c <- ifelse(congressional_report_card$valence_row_mean_cat == "C",1,0)
congressional_report_card$b <- ifelse(congressional_report_card$valence_row_mean_cat == "B",1,0)
congressional_report_card$a <- ifelse(congressional_report_card$valence_row_mean_cat == "A",1,0)
x <- ddply(congressional_report_card,.(data),summarize,f = weighted.mean(f,weight=weight, na.rm=T),d=weighted.mean(d,weight=weight,na.rm=T),c=weighted.mean(c,weight=weight,na.rm=T),b=weighted.mean(b,weight=weight,na.rm=T),a=weighted.mean(a,weight=weight,na.rm=T))
x <- melt(x)
x$variable <- factor(x$variable,levels=c("f","d","c","b","a"),labels=c("F","D","C","B","A"))
x$variable_numeric <- as.numeric(x$variable)
x$value <- 100 * x$value
x$value_label <- paste(round(x$value,2),"%",sep="")
x$value_label <- ifelse(x$variable == "F" & x$data == "2014 Indiana University CCES Study", paste(x$value_label,"\n2014 Data",sep=""),ifelse(x$variable == "F" & x$data == "2006 Congressional Election Study", paste(x$value_label,"\n2006 Data",sep=""),x$value_label))
plot <- ggplot(x,aes(x=variable,y=value,label=value_label,color=data)) + geom_point(size=4) + geom_line(data=x,aes(x=variable_numeric,y=value),size=1) + theme_minimal() + scale_y_continuous("Weighted Percentage of Citizens Giving Congress Corresponding Summated Grade",breaks=seq(0,60,5)) + geom_label_repel() + scale_x_discrete("") + ggtitle("Summated Citizen Perceptions of Congressional Valence Across Multiple Dimensions") + guides(color=F) #+ theme(axis.text.x = element_text(size=8))
grid.newpage()
footnote <- "Note: Values articulated taken from summated citizen valence score on multiple items. Data: 2014 IU CCES Study & 2006 CES Study."
g <- arrangeGrob(plot, bottom = textGrob(footnote, x = 0.025, hjust = 0, vjust= 0, y=0.75, gp = gpar(fontface = "italic", fontsize = 9, col = "black")))
grid.draw(g)
ggsave(g,file="summated_scale_valence.png", width = (6.82 * 1.25), height = (5.5 * 1.25), units = "in")
# Additive Model
# ALDMCK Scaling
iu_policy <- iu_2014[,c(1,25:27,30,34,35,36,37,38)]
for(i in 2:ncol(iu_policy)){
print(colnames(iu_policy[i]))
print(freq(iu_policy[,i]))
}
iu_policy[is.na(iu_policy)] <- 999
rownames(iu_policy) <- iu_policy$case_id
iu_policy$case_id <- NULL
result <- aldmck(iu_policy[,c(1:4)], polarity=2, respondent=1, missing=c(999), verbose=T) # Standard ALDMCK scaling technique
iu_2014$idealpt <- result$respondents$idealpt
iu_2014$gop_proximity_aldmck <- abs(result$stimuli[1] - iu_2014$idealpt) - abs(result$stimuli[2] - iu_2014$idealpt)
ces_policy <- ces_2006[,c(1,18:21)]
ces_policy[is.na(ces_policy)] <- 999
rownames(ces_policy) <- ces_policy$case_id
ces_policy$case_id <- NULL
result <- aldmck(ces_policy, polarity=3, respondent=1, missing=c(999), verbose=T) # Standard ALDMCK scaling technique
ces_2006$idealpt <- result$respondents$idealpt
ces_2006$gop_proximity_aldmck <- abs(result$stimuli[1] - ces_2006$idealpt) - abs(result$stimuli[2] - ces_2006$idealpt)
# Additive Models
summary(iu_model <- glm(cong_approval_recode ~ pid3 + pres_approval_recode + gop_proximity_aldmck + valence_row_mean, data=iu_2014, weights=weight, family = binomial(link = "logit")))
plot(effect("valence_row_mean", se=TRUE, mod = iu_model, confidence.level = 0.95,xlevels=list(valence_row_mean=unique(iu_2014$valence_row_mean))))
x <- summary(margins(iu_model, variables=c("gop_proximity_aldmck","valence_row_mean","pid3"), type="response", change="minmax"))
#x <- summary(margins(iu_model, variables=c("gop_proximity"), at=list(pid3 = c("Democrat","Independent","Republican")), type="response", change="minmax"))
summary(ces_model <- glm(cong_approval_recode ~ pid3 + pres_approval_recode + gop_proximity_aldmck + valence_row_mean, data=ces_2006, family = binomial(link = "logit")))
x1 <- summary(margins(ces_model, variables=c("gop_proximity_aldmck","valence_row_mean","pid3"), type="response", change="minmax"))
# IU Process Variables
iu_2014$process_compromise <- trimws(iu_2014$process_compromise)
iu_2014$compromise <- ifelse(iu_2014$process_compromise == "Compromise to get something done",1,ifelse(iu_2014$process_compromise == "Stand up for their principles",0,NA))
iu_2014$process_pass_leg_quickly <- trimws(iu_2014$process_pass_leg_quickly)
iu_2014$pass_leg_slowly <- ifelse(iu_2014$process_pass_leg_quickly == "Take the time to consider issues thoroughly and carefully",1,ifelse(iu_2014$process_pass_leg_quickly == "Pass legislation quickly and efficiently",0,NA))
iu_2014$process_perception_bickering <- trimws(iu_2014$process_perception_bickering)
iu_2014$process_serious_diff <- ifelse(iu_2014$process_perception_bickering  == "Like to bicker and score political points",0,ifelse(iu_2014$process_perception_bickering  == "Serious differences on the issues",1,NA))
iu_2014$gridlock_resp <- factor(iu_2014$valence_congress_responsible_gridlock,levels=c("President","Both equally","Congress"))
summary(iu_model <- glm(cong_approval_recode ~ pid3 + pres_approval_recode + gop_proximity_aldmck + valence_row_mean + compromise, data=iu_2014, weights=weight, family = binomial(link = "logit")))
# CES Process Variables
ces_2006$compromise <- ifelse(ces_2006$procedural_compromise == "compromise with opponents in order to get something done",1,ifelse(ces_2006$procedural_compromise == "stand up for their principles",0,NA))
ces_2006$pass_leg_slowly <- ifelse(ces_2006$procedural_discuss_issues == "discuss issues more thoroughly before taking action",1,ifelse(ces_2006$procedural_discuss_issues == "take action without engaging in such lengthy discussions",0,NA))
summary(ces_model <- glm(cong_approval_recode ~ pid3 + pres_approval_recode + gop_proximity_aldmck + valence_row_mean + compromise, data=ces_2006, family = binomial(link = "logit")))
# Plot the marginal effects of interest
ces_2006$mc_approval_recode <- ifelse(ces_2006$mc_approval == "somewhat approve",3,ifelse(ces_2006$mc_approval == "somewhat disapprove",2,ifelse(ces_2006$mc_approval == "strongly approve",4,ifelse(ces_2006$mc_approval == "strongly disapprove",1,NA))))
iu_2014$mc_approval_recode <- ifelse(iu_2014$mc_approval == "Approve",3,ifelse(iu_2014$mc_approval == "Disapprove",2,ifelse(iu_2014$mc_approval == "Strongly approve",4,ifelse(iu_2014$mc_approval == "Strongly disapprove",1,ifelse(iu_2014$mc_approval == "Never heard of this person",NA,NA)))))
summary(iu_model <- glm(cong_approval_recode ~ pid3 + pres_approval_recode + gop_proximity_aldmck + valence_row_mean + mc_approval_recode, data=iu_2014, weights=weight, family = binomial(link = "logit")))
plot(effect("valence_row_mean", se=TRUE, mod = iu_model, confidence.level = 0.95,xlevels=list(valence_row_mean=unique(iu_2014$valence_row_mean))))
x <- summary(margins(iu_model, type="response", change="dydx"))
summary(ces_model <- glm(cong_approval_recode ~ pid3 + pres_approval_recode + gop_proximity_aldmck + valence_row_mean + mc_approval_recode, data=ces_2006, family = binomial(link = "logit")))
x1 <- summary(margins(ces_model, type="response", change="dydx"))
x$model <- "2014 Model"
x1$model <- "2006 Model"
x <- rbind(x,x1)
x$variable <- ifelse(x$factor == "gop_proximity_aldmck", "Ideological \nProximity",ifelse(x$factor == "pid3Independent", "Independent \nPartisanship",ifelse(x$factor == "pid3Republican", "Republican \nPartisanship",ifelse(x$factor == "pres_approval_recode", "Presidential \nApproval",ifelse(x$factor == "mc_approval_recode", "Member of \nCongress Approval",ifelse(x$factor == "valence_row_mean", "Congressional \nValence",NA))))))
x$ame_label <- round(x$AME,2)
x$label_x <- ifelse(x$model == "2014 Model",0.5,1)
x$model <- factor(x$model,levels=c("2014 Model","2006 Model"))
x$variable <- factor(x$variable,levels=c("Congressional \nValence","Ideological \nProximity","Presidential \nApproval","Member of \nCongress Approval","Republican \nPartisanship","Independent \nPartisanship"))
plot <- ggplot(x,aes(x=variable, y=AME, ymin=lower, ymax=upper, group=model, shape=model,color=model)) + geom_errorbar(width=0.2,size=1,position= position_dodge(width=1/2)) + geom_point(size=3, fill="white",position= position_dodge(width=1/2)) + theme_minimal() + scale_y_continuous("Average Marginal Effect of Components on Probability of Congressional Approval",breaks=seq(-0.16,0.24,0.04)) + geom_hline(yintercept = 0, colour = gray(1/2), lty = 2) + scale_x_discrete("") + scale_shape_manual("",values=c(21,24)) + theme(axis.text.y = element_text(hjust = 0.5)) + scale_color_manual("",values=c("firebrick","dodgerblue")) + guides(colour = guide_legend(reverse=T),shape = guide_legend(reverse=T)) + theme(legend.position="bottom") + coord_flip() + ggtitle("Evidence of an Ideological & Valence Component of Congressional Approval") #+ geom_text(size=3.5,hjust = 0)
grid.newpage()
footnote <- "Data: 2006 CES Study & 2014 IU CCES Study. Marginal effects calculated over observed variable values."
g <- arrangeGrob(plot, bottom = textGrob(footnote, x = 0.025, hjust = 0, vjust= 0, y=0.75, gp = gpar(fontface = "italic", fontsize = 9, col = "black")))
grid.draw(g)
ggsave(g,file="model_average_marginal_effects.png", width = (6.82 * 1.25), height = (5.5 * 1.25), units = "in")
summary(iu_model <- glm(cong_approval_recode ~ pid3*valence_row_mean + pres_approval_recode + gop_proximity_aldmck + mc_approval_recode, data=iu_2014, weights=weight, family = binomial(link = "logit")))
plot(effect("pid3*valence_row_mean", se=TRUE, mod = iu_model, confidence.level = 0.95,xlevels=list(valence_row_mean=unique(iu_2014$valence_row_mean),pid3=c("Democrat","Independent","Republican"))))
x <- summary(margins(iu_model, variables=c("valence_row_mean"),at=list(pid3 = c("Democrat","Independent","Republican")), type="response", change="dydx"))
summary(ces_model <- glm(cong_approval_recode ~ pid3*valence_row_mean + pres_approval_recode + gop_proximity_aldmck + mc_approval_recode, data=ces_2006, family = binomial(link = "logit")))
x1 <- summary(margins(ces_model, variables=c("valence_row_mean"),at=list(pid3 = c("Democrat","Independent","Republican")), type="response", change="dydx"))
x$model <- "2014 Model"
x1$model <- "2006 Model"
x <- rbind(x,x1)
x$variable <- ifelse(x$pid3 == "Democrat", "Democratic \nPartisanship",ifelse(x$pid3 == "Independent", "Independent \nPartisanship",ifelse(x$pid3 == "Republican", "Republican \nPartisanship",NA)))
x$ame_label <- round(x$AME,2)
x$label_x <- ifelse(x$model == "2014 Model",0.5,1)
x$model <- factor(x$model,levels=c("2014 Model","2006 Model"))
x$variable <- factor(x$variable,levels=c("Democratic \nPartisanship","Independent \nPartisanship","Republican \nPartisanship"))
plot <- ggplot(x,aes(x=variable, y=AME, ymin=lower, ymax=upper, group=model, shape=model,color=model)) + geom_errorbar(width=0.2,size=1,position= position_dodge(width=1/2)) + geom_point(size=3, fill="white",position= position_dodge(width=1/2)) + theme_minimal() + scale_y_continuous("Average Marginal Effect of Components on Probability of Congressional Approval",breaks=seq(-0.16,0.24,0.04)) + geom_hline(yintercept = 0, colour = gray(1/2), lty = 2) + scale_x_discrete("") + scale_shape_manual("",values=c(21,24)) + theme(axis.text.y = element_text(hjust = 0.5)) + scale_color_manual("",values=c("firebrick","dodgerblue")) + guides(colour = guide_legend(reverse=T),shape = guide_legend(reverse=T)) + theme(legend.position="bottom") + coord_flip() + ggtitle("Effect of Leadership Valence Conditional by Partisanship on Congressional  Job Approval") #+ geom_text(size=3.5,hjust = 0)
grid.newpage()
footnote <- "Data: 2006 CES Study & 2014 IU CCES Study. Marginal effects calculated over observed variable values."
g <- arrangeGrob(plot, bottom = textGrob(footnote, x = 0.025, hjust = 0, vjust= 0, y=0.75, gp = gpar(fontface = "italic", fontsize = 9, col = "black")))
grid.draw(g)
ggsave(g,file="model_average_marginal_effects_pid.png", width = (6.82 * 1.25), height = (5.5 * 1.25), units = "in")
ces_model <- glm(cong_approval_recode ~  pid3 + mc_approval_recode + pres_approval_recode + gop_proximity_aldmck + valence_row_mean * pid3, data=ces_2006, family = binomial(link = "logit"))
ces_model
iu_model <- glm(cong_approval_recode ~ pid3 + mc_approval_recode + pres_approval_recode + gop_proximity_aldmck + valence_row_mean * pid3, data=iu_2014, weights=weight, family = binomial(link = "logit"))
ces_model <- glm(cong_approval_recode ~  pid3 + mc_approval_recode + pres_approval_recode + gop_proximity_aldmck + valence_row_mean * pid3, data=ces_2006, family = binomial(link = "logit"))
stargazer(ces_model,iu_model, title="Motivating Results of a Comprehensive Model of Congressional Approval", align=TRUE, dep.var.labels=c("Approval of Congressional Job Performance"), covariate.labels=c("Independent Partisan","Republican Partisan", "Member of Congress Approval","Presidential Approval","Ideological Proximity","Congressional Leadership Valence", "Independent Partisan X Leadership Valence","Republican Partisan X Leadership Valence"),column.labels = c("2006 CES Model", "2014 IU Model"), omit.stat=c("ser","f"), no.space=TRUE,type = 'html')
ces_model <- glm(cong_approval_recode ~  pid3 + mc_approval_recode + pres_approval_recode + gop_proximity_aldmck + valence_row_mean * pid3, data=ces_2006, family = binomial(link = "logit"))
summary(ces_model)
library(ggplot2) # Load ggplot2
library(plyr) # Loaad plyr, which provides tools for summarizing data
library(readstata13) # Load readstata13 to read Stata Files
library(dplyr) # Loaad dplyr, which provides tools that I always use, like as_tibble
load("/Users/carlosalgara/Desktop/carlos_school/PhD_UC Davis/Dissertation Project/Ch2_Electoral_Implications_Approval/Aldrich_McKelvey_Scaling/Aldrich_McKelvey_Scaling_2008_2016_Positions_Results.Rdata") # Load R environment containing various estimations of candidate & citizen ideological ideal points from 2008-2016.
# Let's explore the nature of ideological preferences in the American electorate over time!
as_tibble(rescaled_overtime_idealpts_2008_2016)
# Huge data frame of scaled Aldrich-McKelvey ideal points for each CCES respondent from 2008-2016. For more information on the method deriving these scaled ideal points, see Ramey (2016).
# Of course, countless studies suggest that the distribution of ideological preferences of the mass public is unimodal. Let's make a density plot to see if this is the case.
ggplot(data=rescaled_overtime_idealpts_2008_2016,aes(x=idealpt))
# Not so fast my dude. We have to learn to crawl before we run, what happened?
# Now that we have some knowledge and have to specify our density plot aestic, let's get to work & make our plot!
ggplot(data=rescaled_overtime_idealpts_2008_2016,aes(x=idealpt)) + geom_density()
# Success! But there might be evidence that the distribution of ideological preferences might be trimodal. That is, clear partisan cleavages with respect to ideological preferences. Let's explore this possibility by first coding partisan preferences
rescaled_overtime_idealpts_2008_2016$pid3 <- ifelse(rescaled_overtime_idealpts_2008_2016$pid7 %in% c("Lean Republican","Not very strong Republican","Strong Republican"),"Republican",ifelse(rescaled_overtime_idealpts_2008_2016$pid7 %in% c("Lean Democrat","Not very strong Democrat","Strong Democrat"),"Democrat",ifelse(rescaled_overtime_idealpts_2008_2016$pid7 %in% c("Independent"),"Independent",NA)))
print(as_tibble(rescaled_overtime_idealpts_2008_2016)) # Let's check it out
ggplot(data=rescaled_overtime_idealpts_2008_2016,aes(x=idealpt,color=pid3)) + geom_density()
# Urgh, good start but pretty ugly and nowhere close to publication quality. Let's make this prettier by factoring out our pid3 and getting rid of "NA".
rescaled_overtime_idealpts_2008_2016$pid3 <- factor(rescaled_overtime_idealpts_2008_2016$pid3,levels=c("Democrat","Independent","Republican"))
str(rescaled_overtime_idealpts_2008_2016$pid3)
# Let's make a really pretty plot showing partisan differences.
ggplot(subset(rescaled_overtime_idealpts_2008_2016,rescaled_overtime_idealpts_2008_2016$pid3 != "Independent"),aes(x=idealpt,fill = pid3))+ geom_density(alpha=.2) + theme_bw() + scale_fill_manual("",values =c("blue","red")) + scale_x_continuous("Aldrich-McKelvey Ideological Placement (Liberal-Conservative)",breaks=c(-4,0,4),limits=c(-4,4),labels=c("-4","0","4")) + scale_y_continuous("Density",expand=c(0,0)) + theme(legend.position=c(0.075, 0.90), legend.box.just = "left", legend.key.size = unit(1,"line"), legend.key = element_rect(size = 0, color = 'white'), legend.text.align = 0, legend.box = "horizontal") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
# This is cool, let's do House candidates! First, let's check the data frame.
print(as_tibble(aldmck_congress))
# Oh no, we have to manipulate the dataframe. Urgh, bummer, but easy!
house_candidates <- subset(aldmck_congress,select=c("year","district","placement.dem_hse_libcon_placement","placement.rep_hse_libcon_placement")) # Extract the variables you want
house_candidates <- melt(house_candidates,id=c("year","district")) # Melt the dataframe from wide to long!
print(table(house_candidates$variable)) # We have one variable with a string variable indicating candidate type.
house_candidates$variable <- ifelse(house_candidates$variable == "placement.dem_hse_libcon_placement","Democrat",ifelse(house_candidates$variable == "placement.rep_hse_libcon_placement","Republican",NA))
ggplot(house_candidates, aes(x = value, fill = variable,linetype=variable)) + geom_density(alpha=.2) + theme_minimal() + scale_fill_manual("",values =c("blue","red")) + scale_x_continuous("Candidate Aldrich-McKelvey Ideological Placement (Liberal-Conservative)",limits=c(-1,1),breaks=c(-1,0,1),labels=c("-1","0","1")) + scale_y_continuous("Density",expand=c(0,0)) + theme(legend.position="bottom", legend.box.just = "left", legend.key.size = unit(1,"line"), legend.key = element_rect(size = 0, color = 'white'), legend.text.align = 0, legend.box = "horizontal") + scale_linetype_manual("",values=c("solid","dashed")) + facet_wrap(~year)
# What did we just do?
# We can also assess the validity of our ideal points by looking at the box plot distributions
ggplot(rescaled_overtime_idealpts_2008_2016, aes(x=selfplace, y=idealpts_linear_map_overtime, group=selfplace)) + geom_boxplot(colour = "black",outlier.shape = NA) + scale_y_continuous("Liberal-Conservative Aldrich-McKelvey Ideal Point Estimates",limits=c(-2.5,2.5),breaks=seq(-2,2,1)) + scale_x_continuous("Liberal-Conservative Raw Ideological Self-Placement",breaks=seq(1,7,1)) + scale_fill_discrete(guide=F) + stat_summary(fun.y = mean, geom="point",colour="black", size=2.00, shape= 17) + scale_shape_discrete("") + theme_minimal()
# Let's deconstruct our code
# Let's play around with mapping
state_pres_approval <- read.dta13("/Users/carlosalgara/Desktop/carlos_school/PhD_UC Davis/Dissertation Project/Ch2_Electoral_Implications_Approval/MRP_Estimation/state_presidential_approval_dynamic_mrp_estimates.dta") # Load the data
as_tibble(state_pres_approval) # Get a glimpse of the data structure. These are Dynamic MRP state-level estimates (see: Caughey & Warshaw (2015) for technical details on the Dynamic MRP model) of presidential approval from 2008-2017.
# Explore map making descriptives. Let's make a plot of presidential approval for December 2017.
# Make a percentage
state_pres_approval$state_pres_approval_percent <- state_pres_approval$median * 100
as_tibble(state_pres_approval) # Check to see if it worked. Clearly it did!
approval_2016 <- subset(state_pres_approval,state_pres_approval$year == 2016) # Subet our data
# Load the shapefile that has the data to plot maps in ggplot!
library(rgdal)
state_shp <- readOGR("/Users/carlosalgara/Desktop/carlos_school/PhD_UC Davis/Research/Data/American Politics/US House_District_Shape_Files/cb_2016_us_state_20m.shp")
# Let's explore the data embedded in the shape file
as_tibble(state_shp@data) # Dataframe embedded in the Spatial Polygons Data Frame
table(state_shp@data$NAME) # What type of states are in the file? We don't want territories!
state_shp <- subset(state_shp,state_shp@data$NAME != "Puerto Rico")
state_shp <- subset(state_shp,state_shp@data$NAME != "Alaska")
state_shp <- subset(state_shp,state_shp@data$NAME != "Hawaii")
state_shp <- subset(state_shp,state_shp@data$NAME != "District of Columbia")
# Preliminary look at our maps
ggplot(state_shp, aes(x = long, y = lat, group = group)) + geom_polygon(fill = "gray", color = "black") + theme_void() + coord_equal() + coord_fixed(1.3)
# Let's merge our data onto the map!
approval_2016 <- subset(approval_2016,select=c("state","state_pres_approval_percent"))
state_shp@data$id <- rownames(state_shp@data)
state_shp.points <- fortify(state_shp, region="id")
state_shp.df <- join(state_shp.points, state_shp@data, by="id")
state_shp.df$state <- as.character(state_shp.df$STUSPS)
state_shp.df <- merge(state_shp.df,approval_2016,by=c("state"))
ggplot(state_shp.df, aes(x = long, y = lat, group = group,fill=state_pres_approval_percent),color="white") + geom_polygon(color = "black") + theme_void() + coord_equal() + scale_fill_gradient("Presidential Approval",low = 'black', high = 'white') + ggtitle("Presidential Approval in the U.S. States, 2016")
#devtools::install_github("rstudio/blogdown")
library(blogdown)
#install_hugo()
file.create('/Users/carlosalgara/Dropbox/Github_Website/blog/calgara.github.io/.nojekyll')
new_site("/Users/carlosalgara/Dropbox/Github_Website/blog")
setwd("/Users/carlosalgara/Dropbox/Github_Website/blog")
install_theme("spf13/herring-cove", theme_example = TRUE, update_config = TRUE)
install_theme("gcushen/hugo-academic", theme_example = TRUE, update_config = TRUE)
install_theme("kishaningithub/hugo-creative-portfolio-theme", theme_example = TRUE, update_config = TRUE)
install_hugo()
library(blogdown)
install_hugo()
install_hugo(force=TRUE)
file.create('/Users/carlosalgara/Dropbox/Github_Website/blog/calgara.github.io/.nojekyll')
library(blogdown)
file.create('/Users/carlosalgara/Dropbox/Github_Website/blog/calgara.github.io/.nojekyll')
setwd("/Users/carlosalgara/Dropbox/Github_Website/blog")
new_site("/Users/carlosalgara/Dropbox/Github_Website/blog",theme = "gcushen/hugo-academic")
library(blogdown)
#install_hugo()
file.create('/Users/carlosalgara/Dropbox/Github_Website/blog/calgara.github.io/.nojekyll')
new_site("/Users/carlosalgara/Dropbox/Github_Website/blog",theme = "gcushen/hugo-academic")
install_hugo()
install_hugo(force=T)
new_site("/Users/carlosalgara/Dropbox/Github_Website/blog",theme = "gcushen/hugo-academic")
file.create('/Users/carlosalgara/Dropbox/Github_Website/blog/calgara.github.io/.nojekyll')
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2) # Load ggplot2
library(plyr) # Loaad plyr, which provides tools for summarizing data
library(readstata13) # Load readstata13 to read Stata Files
library(dplyr) # Loaad dplyr, which provides tools that I always use, like as_tibble
```{r,echo=F,warning=F,message=F,results='asis'}
load("/Users/carlosalgara/Desktop/carlos_school/PhD_UC Davis/Research/Submissions & Applications/Dirksen_Center_Grant/2018/Code & Analysis/Dirksen_app.Rdata")
library(ggplot2) # Load ggplot2
library(plyr) # Loaad plyr, which provides tools for summarizing data
library(readstata13) # Load readstata13 to read Stata Files
library(dplyr) # Loaad dplyr, which provides tools that I always use, like as_tibble
load("/Users/carlosalgara/Desktop/carlos_school/PhD_UC Davis/Dissertation Project/Ch2_Electoral_Implications_Approval/Aldrich_McKelvey_Scaling/Aldrich_McKelvey_Scaling_2008_2016_Positions_Results.Rdata") # Load R environment containing various estimations of candidate & citizen ideological ideal points from 2008-2016.
# Let's explore the nature of ideological preferences in the American electorate over time!
as_tibble(rescaled_overtime_idealpts_2008_2016)
# Huge data frame of scaled Aldrich-McKelvey ideal points for each CCES respondent from 2008-2016. For more information on the method deriving these scaled ideal points, see Ramey (2016).
# Of course, countless studies suggest that the distribution of ideological preferences of the mass public is unimodal. Let's make a density plot to see if this is the case.
ggplot(data=rescaled_overtime_idealpts_2008_2016,aes(x=idealpt))
# Not so fast my dude. We have to learn to crawl before we run, what happened?
# Now that we have some knowledge and have to specify our density plot aestic, let's get to work & make our plot!
ggplot(data=rescaled_overtime_idealpts_2008_2016,aes(x=idealpt)) + geom_density()
# Success! But there might be evidence that the distribution of ideological preferences might be trimodal. That is, clear partisan cleavages with respect to ideological preferences. Let's explore this possibility by first coding partisan preferences
rescaled_overtime_idealpts_2008_2016$pid3 <- ifelse(rescaled_overtime_idealpts_2008_2016$pid7 %in% c("Lean Republican","Not very strong Republican","Strong Republican"),"Republican",ifelse(rescaled_overtime_idealpts_2008_2016$pid7 %in% c("Lean Democrat","Not very strong Democrat","Strong Democrat"),"Democrat",ifelse(rescaled_overtime_idealpts_2008_2016$pid7 %in% c("Independent"),"Independent",NA)))
print(as_tibble(rescaled_overtime_idealpts_2008_2016)) # Let's check it out
ggplot(data=rescaled_overtime_idealpts_2008_2016,aes(x=idealpt,color=pid3)) + geom_density()
# Urgh, good start but pretty ugly and nowhere close to publication quality. Let's make this prettier by factoring out our pid3 and getting rid of "NA".
rescaled_overtime_idealpts_2008_2016$pid3 <- factor(rescaled_overtime_idealpts_2008_2016$pid3,levels=c("Democrat","Independent","Republican"))
str(rescaled_overtime_idealpts_2008_2016$pid3)
# Let's make a really pretty plot showing partisan differences.
ggplot(subset(rescaled_overtime_idealpts_2008_2016,rescaled_overtime_idealpts_2008_2016$pid3 != "Independent"),aes(x=idealpt,fill = pid3))+ geom_density(alpha=.2) + theme_bw() + scale_fill_manual("",values =c("blue","red")) + scale_x_continuous("Aldrich-McKelvey Ideological Placement (Liberal-Conservative)",breaks=c(-4,0,4),limits=c(-4,4),labels=c("-4","0","4")) + scale_y_continuous("Density",expand=c(0,0)) + theme(legend.position=c(0.075, 0.90), legend.box.just = "left", legend.key.size = unit(1,"line"), legend.key = element_rect(size = 0, color = 'white'), legend.text.align = 0, legend.box = "horizontal") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
# This is cool, let's do House candidates! First, let's check the data frame.
print(as_tibble(aldmck_congress))
# Oh no, we have to manipulate the dataframe. Urgh, bummer, but easy!
house_candidates <- subset(aldmck_congress,select=c("year","district","placement.dem_hse_libcon_placement","placement.rep_hse_libcon_placement")) # Extract the variables you want
house_candidates <- melt(house_candidates,id=c("year","district")) # Melt the dataframe from wide to long!
knitr::opts_chunk$set(echo = TRUE)
load("/Users/carlosalgara/Desktop/carlos_school/PhD_UC Davis/Research/Submissions & Applications/Dirksen_Center_Grant/2018/Code & Analysis/Dirksen_app.Rdata")
library(ggplot2) # Load ggplot2
library(plyr) # Loaad plyr, which provides tools for summarizing data
library(readstata13) # Load readstata13 to read Stata Files
library(dplyr) # Loaad dplyr, which provides tools that I always use, like as_tibble
load("/Users/carlosalgara/Desktop/carlos_school/PhD_UC Davis/Dissertation Project/Ch2_Electoral_Implications_Approval/Aldrich_McKelvey_Scaling/Aldrich_McKelvey_Scaling_2008_2016_Positions_Results.Rdata") # Load R environment containing various estimations of candidate & citizen ideological ideal points from 2008-2016.
# Let's explore the nature of ideological preferences in the American electorate over time!
as_tibble(rescaled_overtime_idealpts_2008_2016)
# Huge data frame of scaled Aldrich-McKelvey ideal points for each CCES respondent from 2008-2016. For more information on the method deriving these scaled ideal points, see Ramey (2016).
# Of course, countless studies suggest that the distribution of ideological preferences of the mass public is unimodal. Let's make a density plot to see if this is the case.
ggplot(data=rescaled_overtime_idealpts_2008_2016,aes(x=idealpt))
# Not so fast my dude. We have to learn to crawl before we run, what happened?
# Now that we have some knowledge and have to specify our density plot aestic, let's get to work & make our plot!
ggplot(data=rescaled_overtime_idealpts_2008_2016,aes(x=idealpt)) + geom_density()
# Success! But there might be evidence that the distribution of ideological preferences might be trimodal. That is, clear partisan cleavages with respect to ideological preferences. Let's explore this possibility by first coding partisan preferences
rescaled_overtime_idealpts_2008_2016$pid3 <- ifelse(rescaled_overtime_idealpts_2008_2016$pid7 %in% c("Lean Republican","Not very strong Republican","Strong Republican"),"Republican",ifelse(rescaled_overtime_idealpts_2008_2016$pid7 %in% c("Lean Democrat","Not very strong Democrat","Strong Democrat"),"Democrat",ifelse(rescaled_overtime_idealpts_2008_2016$pid7 %in% c("Independent"),"Independent",NA)))
print(as_tibble(rescaled_overtime_idealpts_2008_2016)) # Let's check it out
ggplot(data=rescaled_overtime_idealpts_2008_2016,aes(x=idealpt,color=pid3)) + geom_density()
# Urgh, good start but pretty ugly and nowhere close to publication quality. Let's make this prettier by factoring out our pid3 and getting rid of "NA".
rescaled_overtime_idealpts_2008_2016$pid3 <- factor(rescaled_overtime_idealpts_2008_2016$pid3,levels=c("Democrat","Independent","Republican"))
str(rescaled_overtime_idealpts_2008_2016$pid3)
# Let's make a really pretty plot showing partisan differences.
ggplot(subset(rescaled_overtime_idealpts_2008_2016,rescaled_overtime_idealpts_2008_2016$pid3 != "Independent"),aes(x=idealpt,fill = pid3))+ geom_density(alpha=.2) + theme_bw() + scale_fill_manual("",values =c("blue","red")) + scale_x_continuous("Aldrich-McKelvey Ideological Placement (Liberal-Conservative)",breaks=c(-4,0,4),limits=c(-4,4),labels=c("-4","0","4")) + scale_y_continuous("Density",expand=c(0,0)) + theme(legend.position=c(0.075, 0.90), legend.box.just = "left", legend.key.size = unit(1,"line"), legend.key = element_rect(size = 0, color = 'white'), legend.text.align = 0, legend.box = "horizontal") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
# This is cool, let's do House candidates! First, let's check the data frame.
print(as_tibble(aldmck_congress))
# Oh no, we have to manipulate the dataframe. Urgh, bummer, but easy!
house_candidates <- subset(aldmck_congress,select=c("year","district","placement.dem_hse_libcon_placement","placement.rep_hse_libcon_placement")) # Extract the variables you want
house_candidates <- melt(house_candidates,id=c("year","district")) # Melt the dataframe from wide to long!
library(ggplot2) # Load ggplot2
library(plyr) # Loaad plyr, which provides tools for summarizing data
library(readstata13) # Load readstata13 to read Stata Files
library(dplyr) # Loaad dplyr, which provides tools that I always use, like as_tibble
load("/Users/carlosalgara/Desktop/carlos_school/PhD_UC Davis/Dissertation Project/Ch2_Electoral_Implications_Approval/Aldrich_McKelvey_Scaling/Aldrich_McKelvey_Scaling_2008_2016_Positions_Results.Rdata") # Load R environment containing various estimations of candidate & citizen ideological ideal points from 2008-2016.
# Let's explore the nature of ideological preferences in the American electorate over time!
as_tibble(rescaled_overtime_idealpts_2008_2016)
# Huge data frame of scaled Aldrich-McKelvey ideal points for each CCES respondent from 2008-2016. For more information on the method deriving these scaled ideal points, see Ramey (2016).
# Of course, countless studies suggest that the distribution of ideological preferences of the mass public is unimodal. Let's make a density plot to see if this is the case.
ggplot(data=rescaled_overtime_idealpts_2008_2016,aes(x=idealpt))
# Not so fast my dude. We have to learn to crawl before we run, what happened?
# Now that we have some knowledge and have to specify our density plot aestic, let's get to work & make our plot!
ggplot(data=rescaled_overtime_idealpts_2008_2016,aes(x=idealpt)) + geom_density()
# Success! But there might be evidence that the distribution of ideological preferences might be trimodal. That is, clear partisan cleavages with respect to ideological preferences. Let's explore this possibility by first coding partisan preferences
rescaled_overtime_idealpts_2008_2016$pid3 <- ifelse(rescaled_overtime_idealpts_2008_2016$pid7 %in% c("Lean Republican","Not very strong Republican","Strong Republican"),"Republican",ifelse(rescaled_overtime_idealpts_2008_2016$pid7 %in% c("Lean Democrat","Not very strong Democrat","Strong Democrat"),"Democrat",ifelse(rescaled_overtime_idealpts_2008_2016$pid7 %in% c("Independent"),"Independent",NA)))
print(as_tibble(rescaled_overtime_idealpts_2008_2016)) # Let's check it out
ggplot(data=rescaled_overtime_idealpts_2008_2016,aes(x=idealpt,color=pid3)) + geom_density()
# Urgh, good start but pretty ugly and nowhere close to publication quality. Let's make this prettier by factoring out our pid3 and getting rid of "NA".
rescaled_overtime_idealpts_2008_2016$pid3 <- factor(rescaled_overtime_idealpts_2008_2016$pid3,levels=c("Democrat","Independent","Republican"))
str(rescaled_overtime_idealpts_2008_2016$pid3)
# Let's make a really pretty plot showing partisan differences.
ggplot(subset(rescaled_overtime_idealpts_2008_2016,rescaled_overtime_idealpts_2008_2016$pid3 != "Independent"),aes(x=idealpt,fill = pid3))+ geom_density(alpha=.2) + theme_bw() + scale_fill_manual("",values =c("blue","red")) + scale_x_continuous("Aldrich-McKelvey Ideological Placement (Liberal-Conservative)",breaks=c(-4,0,4),limits=c(-4,4),labels=c("-4","0","4")) + scale_y_continuous("Density",expand=c(0,0)) + theme(legend.position=c(0.075, 0.90), legend.box.just = "left", legend.key.size = unit(1,"line"), legend.key = element_rect(size = 0, color = 'white'), legend.text.align = 0, legend.box = "horizontal") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
# This is cool, let's do House candidates! First, let's check the data frame.
print(as_tibble(aldmck_congress))
# Oh no, we have to manipulate the dataframe. Urgh, bummer, but easy!
house_candidates <- subset(aldmck_congress,select=c("year","district","placement.dem_hse_libcon_placement","placement.rep_hse_libcon_placement")) # Extract the variables you want
house_candidates <- melt(house_candidates,id=c("year","district")) # Melt the dataframe from wide to long!
library(ggplot2) # Load ggplot2
library(plyr) # Loaad plyr, which provides tools for summarizing data
library(readstata13) # Load readstata13 to read Stata Files
library(dplyr) # Loaad dplyr, which provides tools that I always use, like as_tibble
library(reshape) # Load reshape, which provides for the melt function needed for data manipulation.
load("/Users/carlosalgara/Desktop/carlos_school/PhD_UC Davis/Dissertation Project/Ch2_Electoral_Implications_Approval/Aldrich_McKelvey_Scaling/Aldrich_McKelvey_Scaling_2008_2016_Positions_Results.Rdata") # Load R environment containing various estimations of candidate & citizen ideological ideal points from 2008-2016.
# Let's explore the nature of ideological preferences in the American electorate over time!
as_tibble(rescaled_overtime_idealpts_2008_2016)
# Huge data frame of scaled Aldrich-McKelvey ideal points for each CCES respondent from 2008-2016. For more information on the method deriving these scaled ideal points, see Ramey (2016).
# Of course, countless studies suggest that the distribution of ideological preferences of the mass public is unimodal. Let's make a density plot to see if this is the case.
ggplot(data=rescaled_overtime_idealpts_2008_2016,aes(x=idealpt))
# Not so fast my dude. We have to learn to crawl before we run, what happened?
# Now that we have some knowledge and have to specify our density plot aestic, let's get to work & make our plot!
ggplot(data=rescaled_overtime_idealpts_2008_2016,aes(x=idealpt)) + geom_density()
# Success! But there might be evidence that the distribution of ideological preferences might be trimodal. That is, clear partisan cleavages with respect to ideological preferences. Let's explore this possibility by first coding partisan preferences
rescaled_overtime_idealpts_2008_2016$pid3 <- ifelse(rescaled_overtime_idealpts_2008_2016$pid7 %in% c("Lean Republican","Not very strong Republican","Strong Republican"),"Republican",ifelse(rescaled_overtime_idealpts_2008_2016$pid7 %in% c("Lean Democrat","Not very strong Democrat","Strong Democrat"),"Democrat",ifelse(rescaled_overtime_idealpts_2008_2016$pid7 %in% c("Independent"),"Independent",NA)))
print(as_tibble(rescaled_overtime_idealpts_2008_2016)) # Let's check it out
ggplot(data=rescaled_overtime_idealpts_2008_2016,aes(x=idealpt,color=pid3)) + geom_density()
# Urgh, good start but pretty ugly and nowhere close to publication quality. Let's make this prettier by factoring out our pid3 and getting rid of "NA".
rescaled_overtime_idealpts_2008_2016$pid3 <- factor(rescaled_overtime_idealpts_2008_2016$pid3,levels=c("Democrat","Independent","Republican"))
str(rescaled_overtime_idealpts_2008_2016$pid3)
# Let's make a really pretty plot showing partisan differences.
ggplot(subset(rescaled_overtime_idealpts_2008_2016,rescaled_overtime_idealpts_2008_2016$pid3 != "Independent"),aes(x=idealpt,fill = pid3))+ geom_density(alpha=.2) + theme_bw() + scale_fill_manual("",values =c("blue","red")) + scale_x_continuous("Aldrich-McKelvey Ideological Placement (Liberal-Conservative)",breaks=c(-4,0,4),limits=c(-4,4),labels=c("-4","0","4")) + scale_y_continuous("Density",expand=c(0,0)) + theme(legend.position=c(0.075, 0.90), legend.box.just = "left", legend.key.size = unit(1,"line"), legend.key = element_rect(size = 0, color = 'white'), legend.text.align = 0, legend.box = "horizontal") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
# This is cool, let's do House candidates! First, let's check the data frame.
print(as_tibble(aldmck_congress))
# Oh no, we have to manipulate the dataframe. Urgh, bummer, but easy!
house_candidates <- subset(aldmck_congress,select=c("year","district","placement.dem_hse_libcon_placement","placement.rep_hse_libcon_placement")) # Extract the variables you want
house_candidates <- melt(house_candidates,id=c("year","district")) # Melt the dataframe from wide to long!
print(table(house_candidates$variable)) # We have one variable with a string variable indicating candidate type.
house_candidates$variable <- ifelse(house_candidates$variable == "placement.dem_hse_libcon_placement","Democrat",ifelse(house_candidates$variable == "placement.rep_hse_libcon_placement","Republican",NA))
ggplot(house_candidates, aes(x = value, fill = variable,linetype=variable)) + geom_density(alpha=.2) + theme_minimal() + scale_fill_manual("",values =c("blue","red")) + scale_x_continuous("Candidate Aldrich-McKelvey Ideological Placement (Liberal-Conservative)",limits=c(-1,1),breaks=c(-1,0,1),labels=c("-1","0","1")) + scale_y_continuous("Density",expand=c(0,0)) + theme(legend.position="bottom", legend.box.just = "left", legend.key.size = unit(1,"line"), legend.key = element_rect(size = 0, color = 'white'), legend.text.align = 0, legend.box = "horizontal") + scale_linetype_manual("",values=c("solid","dashed")) + facet_wrap(~year)
# What did we just do?
# We can also assess the validity of our ideal points by looking at the box plot distributions
ggplot(rescaled_overtime_idealpts_2008_2016, aes(x=selfplace, y=idealpts_linear_map_overtime, group=selfplace)) + geom_boxplot(colour = "black",outlier.shape = NA) + scale_y_continuous("Liberal-Conservative Aldrich-McKelvey Ideal Point Estimates",limits=c(-2.5,2.5),breaks=seq(-2,2,1)) + scale_x_continuous("Liberal-Conservative Raw Ideological Self-Placement",breaks=seq(1,7,1)) + scale_fill_discrete(guide=F) + stat_summary(fun.y = mean, geom="point",colour="black", size=2.00, shape= 17) + scale_shape_discrete("") + theme_minimal()
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2) # Load ggplot2
library(plyr) # Loaad plyr, which provides tools for summarizing data
library(readstata13) # Load readstata13 to read Stata Files
library(dplyr) # Loaad dplyr, which provides tools that I always use, like as_tibble
library(reshape) # Load reshape, which provides for the melt function needed for data manipulation.
load("/Users/carlosalgara/Desktop/carlos_school/PhD_UC Davis/Dissertation Project/Ch2_Electoral_Implications_Approval/Aldrich_McKelvey_Scaling/Aldrich_McKelvey_Scaling_2008_2016_Positions_Results.Rdata") # Load R environment containing various estimations of candidate & citizen ideological ideal points from 2008-2016.
# Let's explore the nature of ideological preferences in the American electorate over time!
as_tibble(rescaled_overtime_idealpts_2008_2016)
# Huge data frame of scaled Aldrich-McKelvey ideal points for each CCES respondent from 2008-2016. For more information on the method deriving these scaled ideal points, see Ramey (2016).
# Of course, countless studies suggest that the distribution of ideological preferences of the mass public is unimodal. Let's make a density plot to see if this is the case.
ggplot(data=rescaled_overtime_idealpts_2008_2016,aes(x=idealpt))
# Not so fast my dude. We have to learn to crawl before we run, what happened?
# Now that we have some knowledge and have to specify our density plot aestic, let's get to work & make our plot!
ggplot(data=rescaled_overtime_idealpts_2008_2016,aes(x=idealpt)) + geom_density()
# Success! But there might be evidence that the distribution of ideological preferences might be trimodal. That is, clear partisan cleavages with respect to ideological preferences. Let's explore this possibility by first coding partisan preferences
rescaled_overtime_idealpts_2008_2016$pid3 <- ifelse(rescaled_overtime_idealpts_2008_2016$pid7 %in% c("Lean Republican","Not very strong Republican","Strong Republican"),"Republican",ifelse(rescaled_overtime_idealpts_2008_2016$pid7 %in% c("Lean Democrat","Not very strong Democrat","Strong Democrat"),"Democrat",ifelse(rescaled_overtime_idealpts_2008_2016$pid7 %in% c("Independent"),"Independent",NA)))
print(as_tibble(rescaled_overtime_idealpts_2008_2016)) # Let's check it out
ggplot(data=rescaled_overtime_idealpts_2008_2016,aes(x=idealpt,color=pid3)) + geom_density()
# Urgh, good start but pretty ugly and nowhere close to publication quality. Let's make this prettier by factoring out our pid3 and getting rid of "NA".
rescaled_overtime_idealpts_2008_2016$pid3 <- factor(rescaled_overtime_idealpts_2008_2016$pid3,levels=c("Democrat","Independent","Republican"))
str(rescaled_overtime_idealpts_2008_2016$pid3)
# Let's make a really pretty plot showing partisan differences.
ggplot(subset(rescaled_overtime_idealpts_2008_2016,rescaled_overtime_idealpts_2008_2016$pid3 != "Independent"),aes(x=idealpt,fill = pid3))+ geom_density(alpha=.2) + theme_bw() + scale_fill_manual("",values =c("blue","red")) + scale_x_continuous("Aldrich-McKelvey Ideological Placement (Liberal-Conservative)",breaks=c(-4,0,4),limits=c(-4,4),labels=c("-4","0","4")) + scale_y_continuous("Density",expand=c(0,0)) + theme(legend.position=c(0.075, 0.90), legend.box.just = "left", legend.key.size = unit(1,"line"), legend.key = element_rect(size = 0, color = 'white'), legend.text.align = 0, legend.box = "horizontal") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
# This is cool, let's do House candidates! First, let's check the data frame.
print(as_tibble(aldmck_congress))
# Oh no, we have to manipulate the dataframe. Urgh, bummer, but easy!
house_candidates <- subset(aldmck_congress,select=c("year","district","placement.dem_hse_libcon_placement","placement.rep_hse_libcon_placement")) # Extract the variables you want
house_candidates <- melt(house_candidates,id=c("year","district")) # Melt the dataframe from wide to long!
print(table(house_candidates$variable)) # We have one variable with a string variable indicating candidate type.
house_candidates$variable <- ifelse(house_candidates$variable == "placement.dem_hse_libcon_placement","Democrat",ifelse(house_candidates$variable == "placement.rep_hse_libcon_placement","Republican",NA))
ggplot(house_candidates, aes(x = value, fill = variable,linetype=variable)) + geom_density(alpha=.2) + theme_minimal() + scale_fill_manual("",values =c("blue","red")) + scale_x_continuous("Candidate Aldrich-McKelvey Ideological Placement (Liberal-Conservative)",limits=c(-1,1),breaks=c(-1,0,1),labels=c("-1","0","1")) + scale_y_continuous("Density",expand=c(0,0)) + theme(legend.position="bottom", legend.box.just = "left", legend.key.size = unit(1,"line"), legend.key = element_rect(size = 0, color = 'white'), legend.text.align = 0, legend.box = "horizontal") + scale_linetype_manual("",values=c("solid","dashed")) + facet_wrap(~year)
# What did we just do?
# We can also assess the validity of our ideal points by looking at the box plot distributions
ggplot(rescaled_overtime_idealpts_2008_2016, aes(x=selfplace, y=idealpts_linear_map_overtime, group=selfplace)) + geom_boxplot(colour = "black",outlier.shape = NA) + scale_y_continuous("Liberal-Conservative Aldrich-McKelvey Ideal Point Estimates",limits=c(-2.5,2.5),breaks=seq(-2,2,1)) + scale_x_continuous("Liberal-Conservative Raw Ideological Self-Placement",breaks=seq(1,7,1)) + scale_fill_discrete(guide=F) + stat_summary(fun.y = mean, geom="point",colour="black", size=2.00, shape= 17) + scale_shape_discrete("") + theme_minimal()
library(ggplot2) # Load ggplot2
library(plyr) # Loaad plyr, which provides tools for summarizing data
library(readstata13) # Load readstata13 to read Stata Files
library(dplyr) # Loaad dplyr, which provides tools that I always use, like as_tibble
library(reshape) # Load reshape, which provides for the melt function needed for data manipulation.
load("/Users/carlosalgara/Desktop/carlos_school/PhD_UC Davis/Dissertation Project/Ch2_Electoral_Implications_Approval/Aldrich_McKelvey_Scaling/Aldrich_McKelvey_Scaling_2008_2016_Positions_Results.Rdata") # Load R environment containing various estimations of candidate & citizen ideological ideal points from 2008-2016.
# Let's explore the nature of ideological preferences in the American electorate over time!
print(as_tibble(rescaled_overtime_idealpts_2008_2016))
# Huge data frame of scaled Aldrich-McKelvey ideal points for each CCES respondent from 2008-2016. For more information on the method deriving these scaled ideal points, see Ramey (2016).
# Of course, countless studies suggest that the distribution of ideological preferences of the mass public is unimodal. Let's make a density plot to see if this is the case.
ggplot(data=rescaled_overtime_idealpts_2008_2016,aes(x=idealpt))
# Not so fast my dude. We have to learn to crawl before we run, what happened?
# Now that we have some knowledge and have to specify our density plot aestic, let's get to work & make our plot!
ggplot(data=rescaled_overtime_idealpts_2008_2016,aes(x=idealpt)) + geom_density()
# Success! But there might be evidence that the distribution of ideological preferences might be trimodal. That is, clear partisan cleavages with respect to ideological preferences. Let's explore this possibility by first coding partisan preferences
rescaled_overtime_idealpts_2008_2016$pid3 <- ifelse(rescaled_overtime_idealpts_2008_2016$pid7 %in% c("Lean Republican","Not very strong Republican","Strong Republican"),"Republican",ifelse(rescaled_overtime_idealpts_2008_2016$pid7 %in% c("Lean Democrat","Not very strong Democrat","Strong Democrat"),"Democrat",ifelse(rescaled_overtime_idealpts_2008_2016$pid7 %in% c("Independent"),"Independent",NA)))
print(as_tibble(rescaled_overtime_idealpts_2008_2016)) # Let's check it out
ggplot(data=rescaled_overtime_idealpts_2008_2016,aes(x=idealpt,color=pid3)) + geom_density()
# Urgh, good start but pretty ugly and nowhere close to publication quality. Let's make this prettier by factoring out our pid3 and getting rid of "NA".
rescaled_overtime_idealpts_2008_2016$pid3 <- factor(rescaled_overtime_idealpts_2008_2016$pid3,levels=c("Democrat","Independent","Republican"))
str(rescaled_overtime_idealpts_2008_2016$pid3)
# Let's make a really pretty plot showing partisan differences.
ggplot(subset(rescaled_overtime_idealpts_2008_2016,rescaled_overtime_idealpts_2008_2016$pid3 != "Independent"),aes(x=idealpt,fill = pid3))+ geom_density(alpha=.2) + theme_bw() + scale_fill_manual("",values =c("blue","red")) + scale_x_continuous("Aldrich-McKelvey Ideological Placement (Liberal-Conservative)",breaks=c(-4,0,4),limits=c(-4,4),labels=c("-4","0","4")) + scale_y_continuous("Density",expand=c(0,0)) + theme(legend.position=c(0.075, 0.90), legend.box.just = "left", legend.key.size = unit(1,"line"), legend.key = element_rect(size = 0, color = 'white'), legend.text.align = 0, legend.box = "horizontal") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
# This is cool, let's do House candidates! First, let's check the data frame.
print(as_tibble(aldmck_congress))
# Oh no, we have to manipulate the dataframe. Urgh, bummer, but easy!
house_candidates <- subset(aldmck_congress,select=c("year","district","placement.dem_hse_libcon_placement","placement.rep_hse_libcon_placement")) # Extract the variables you want
house_candidates <- melt(house_candidates,id=c("year","district")) # Melt the dataframe from wide to long!
print(table(house_candidates$variable)) # We have one variable with a string variable indicating candidate type.
house_candidates$variable <- ifelse(house_candidates$variable == "placement.dem_hse_libcon_placement","Democrat",ifelse(house_candidates$variable == "placement.rep_hse_libcon_placement","Republican",NA))
ggplot(house_candidates, aes(x = value, fill = variable,linetype=variable)) + geom_density(alpha=.2) + theme_minimal() + scale_fill_manual("",values =c("blue","red")) + scale_x_continuous("Candidate Aldrich-McKelvey Ideological Placement (Liberal-Conservative)",limits=c(-1,1),breaks=c(-1,0,1),labels=c("-1","0","1")) + scale_y_continuous("Density",expand=c(0,0)) + theme(legend.position="bottom", legend.box.just = "left", legend.key.size = unit(1,"line"), legend.key = element_rect(size = 0, color = 'white'), legend.text.align = 0, legend.box = "horizontal") + scale_linetype_manual("",values=c("solid","dashed")) + facet_wrap(~year)
# What did we just do?
# We can also assess the validity of our ideal points by looking at the box plot distributions
ggplot(rescaled_overtime_idealpts_2008_2016, aes(x=selfplace, y=idealpts_linear_map_overtime, group=selfplace)) + geom_boxplot(colour = "black",outlier.shape = NA) + scale_y_continuous("Liberal-Conservative Aldrich-McKelvey Ideal Point Estimates",limits=c(-2.5,2.5),breaks=seq(-2,2,1)) + scale_x_continuous("Liberal-Conservative Raw Ideological Self-Placement",breaks=seq(1,7,1)) + scale_fill_discrete(guide=F) + stat_summary(fun.y = mean, geom="point",colour="black", size=2.00, shape= 17) + scale_shape_discrete("") + theme_minimal()
print(as_tibble(rescaled_overtime_idealpts_2008_2016))
library(ggplot2) # Load ggplot2
library(plyr) # Loaad plyr, which provides tools for summarizing data
library(readstata13) # Load readstata13 to read Stata Files
library(dplyr) # Loaad dplyr, which provides tools that I always use, like as_tibble
library(reshape) # Load reshape, which provides for the melt function needed for data manipulation.
load("/Users/carlosalgara/Desktop/carlos_school/PhD_UC Davis/Dissertation Project/Ch2_Electoral_Implications_Approval/Aldrich_McKelvey_Scaling/Aldrich_McKelvey_Scaling_2008_2016_Positions_Results.Rdata") # Load R environment containing various estimations of candidate & citizen ideological ideal points from 2008-2016.
# Let's explore the nature of ideological preferences in the American electorate over time!
print(as_tibble(rescaled_overtime_idealpts_2008_2016))
# Huge data frame of scaled Aldrich-McKelvey ideal points for each CCES respondent from 2008-2016. For more information on the method deriving these scaled ideal points, see Ramey (2016).
# Of course, countless studies suggest that the distribution of ideological preferences of the mass public is unimodal. Let's make a density plot to see if this is the case.
ggplot(data=rescaled_overtime_idealpts_2008_2016,aes(x=idealpt))
# Not so fast my dude. We have to learn to crawl before we run, what happened?
# Now that we have some knowledge and have to specify our density plot aestic, let's get to work & make our plot!
ggplot(data=rescaled_overtime_idealpts_2008_2016,aes(x=idealpt)) + geom_density()
# Success! But there might be evidence that the distribution of ideological preferences might be trimodal. That is, clear partisan cleavages with respect to ideological preferences. Let's explore this possibility by first coding partisan preferences
rescaled_overtime_idealpts_2008_2016$pid3 <- ifelse(rescaled_overtime_idealpts_2008_2016$pid7 %in% c("Lean Republican","Not very strong Republican","Strong Republican"),"Republican",ifelse(rescaled_overtime_idealpts_2008_2016$pid7 %in% c("Lean Democrat","Not very strong Democrat","Strong Democrat"),"Democrat",ifelse(rescaled_overtime_idealpts_2008_2016$pid7 %in% c("Independent"),"Independent",NA)))
print(as_tibble(rescaled_overtime_idealpts_2008_2016)) # Let's check it out
ggplot(data=rescaled_overtime_idealpts_2008_2016,aes(x=idealpt,color=pid3)) + geom_density()
# Urgh, good start but pretty ugly and nowhere close to publication quality. Let's make this prettier by factoring out our pid3 and getting rid of "NA".
rescaled_overtime_idealpts_2008_2016$pid3 <- factor(rescaled_overtime_idealpts_2008_2016$pid3,levels=c("Democrat","Independent","Republican"))
print(str(rescaled_overtime_idealpts_2008_2016$pid3))
# Let's make a really pretty plot showing partisan differences.
ggplot(subset(rescaled_overtime_idealpts_2008_2016,rescaled_overtime_idealpts_2008_2016$pid3 != "Independent"),aes(x=idealpt,fill = pid3))+ geom_density(alpha=.2) + theme_bw() + scale_fill_manual("",values =c("blue","red")) + scale_x_continuous("Aldrich-McKelvey Ideological Placement (Liberal-Conservative)",breaks=c(-4,0,4),limits=c(-4,4),labels=c("-4","0","4")) + scale_y_continuous("Density",expand=c(0,0)) + theme(legend.position=c(0.075, 0.90), legend.box.just = "left", legend.key.size = unit(1,"line"), legend.key = element_rect(size = 0, color = 'white'), legend.text.align = 0, legend.box = "horizontal") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
setwd("/Users/carlosalgara/Desktop/carlos_school/PhD_UC Davis/Dissertation Project/Ch1_Explaining_CongApproval/Policy_Component_Over_Time/Analysis")
483-157
