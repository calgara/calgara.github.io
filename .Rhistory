cces <- merge(cces,network,by=c("respondent_id"),all=T)
cces$dem_pid3 <- ifelse(cces$pid3_clean == "Democrat",1, ifelse(cces$pid3_clean == "Independent", 0, ifelse(cces$pid3_clean == "Republican", -1, NA)))
cces$pres_approve_dich <- ifelse(cces$pres_approve_clean == "Somewhat approve", 1, ifelse(cces$pres_approve_clean == "Strongly approve", 1, ifelse(cces$pres_approve_clean == "Somewhat disapprove", 0, ifelse(cces$pres_approve_clean == "Strongly disapprove", 0, NA))))
cces$weight <- as.numeric(cces$weight)
cces$pres_approve_clean_factor <- factor(cces$pres_approve_clean,levels=c("Strongly disapprove","Somewhat disapprove","Somewhat approve","Strongly approve"))
library(mlogit)
library(mnlogit)
library(clusterSEs)
#cluster.bs.mlogit(model,data,~chid,ci.level=0.95,cluster.se=F)
cces$constant <- 1
library(nnet)
summary(model <- multinom(pres_approve_clean_factor ~ dem_pid3 + hetero, data=cces, weights=weight, hess=T))
predict <- effect("hetero", se=TRUE, mod = model, confidence.level = 0.95, xlevels=list(hetero=c(-1,-0.6666667,-0.5000000,-0.3333333,0.0000000,0.3333333,0.5000000,0.6666667,1.0000000)))
predict <- data.frame(predict)
# Reshape Probabilities
fit <- predict[,1:5]
lower <- predict[,c(1,18:21)]
upper <- predict[,c(1,22:25)]
colnames(fit) <- c("hetero","fit.Strongly Disapprove","fit.Somewhat Disapprove","fit.Somewhat Approve","fit.Strongly Approve")
fit <- reshape(fit,idvar="hetero",varying=c("fit.Strongly Disapprove","fit.Somewhat Disapprove","fit.Somewhat Approve","fit.Strongly Approve"),se=".",timevar="approval",times=c("Strongly Disapprove","Somewhat Disapprove","Somewhat Approve","Strongly Approve"),direction="long")
colnames(lower) <- c("hetero","lower.Strongly Disapprove","lower.Somewhat Disapprove","lower.Somewhat Approve","lower.Strongly Approve")
lower <- reshape(lower,idvar="hetero",varying=c("lower.Strongly Disapprove","lower.Somewhat Disapprove","lower.Somewhat Approve","lower.Strongly Approve"),se=".",timevar="approval",times=c("Strongly Disapprove","Somewhat Disapprove","Somewhat Approve","Strongly Approve"),direction="long")
colnames(upper) <- c("hetero","upper.Strongly Disapprove","upper.Somewhat Disapprove","upper.Somewhat Approve","upper.Strongly Approve")
upper <- reshape(upper,idvar="hetero",varying=c("upper.Strongly Disapprove","upper.Somewhat Disapprove","upper.Somewhat Approve","upper.Strongly Approve"),se=".",timevar="approval",times=c("Strongly Disapprove","Somewhat Disapprove","Somewhat Approve","Strongly Approve"),direction="long")
predict <- merge(fit,upper,by=c("hetero","approval"))
predict <- merge(predict,lower,by=c("hetero","approval"))
predict$approval <- factor(predict$approval,levels=c("Strongly Disapprove","Somewhat Disapprove","Somewhat Approve","Strongly Approve"))
ggplot(data= predict, mapping=aes(x=hetero, y=fit)) + geom_line(aes(x = hetero, y = fit), size = 0.50) + geom_ribbon(aes(ymin=lower, ymax=upper), alpha = .2) + scale_colour_manual("",values="black") + scale_fill_manual("",values="grey12") + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous(limits=c(-1,1), breaks=c(-1,0,1), labels=c("GOP", "Neutral","Dem"), "Partisan Network Homogenity") + scale_y_continuous(limits=c(0,0.70), breaks=seq(0,0.70,0.10), "Predicted Probability of Presidential Approval") + geom_rug(data=cces, aes(x=hetero, y=1),color = "gray30", alpha=.5, size = 0.25, position='jitter') + ggtitle("Probability of Approving of President Obama by Partisan Network Homogenity") + facet_wrap(~approval, ncol = 2, scales = "free_y")
# Load the shapefile that has the data to plot maps in ggplot!
# Let's play around with mapping
# Load the shapefile that has the data to plot maps in ggplot!
library(rgdal)
state_shp <- readOGR("/Users/carlosalgara/Desktop/carlos_school/PhD_UC Davis/Research/Data/American Politics/US House_District_Shape_Files/cb_2016_us_state_20m.shp")
# Let's explore the data embedded in the shape file
as_tibble(state_shp@data) # Dataframe embedded in the Spatial Polygons Data Frame
as_tibble(state_shp@data$NAME) # What type of states are in the file? We don't want territories!
state_shp <- subset(state_shp,state_shp@data$NAME != "Puerto Rico")
state_shp <- subset(state_shp,state_shp@data$NAME != "Alaska")
state_shp <- subset(state_shp,state_shp@data$NAME != "Hawaii")
state_shp <- subset(state_shp,state_shp@data$NAME != "District of Columbia")
# Preliminary look at our map
ggplot(state_shp, aes(x = long, y = lat, group = group)) + geom_polygon(fill = "gray", color = "black") + theme_void() + coord_equal() + coord_fixed(1.3)
state_pres_approval <- read.dta13("/Users/carlosalgara/Desktop/carlos_school/PhD_UC Davis/Dissertation Project/Ch2_Electoral_Implications_Approval/MRP_Estimation/state_presidential_approval_dynamic_mrp_estimates.dta") # Load the data
as_tibble(state_pres_approval) # Get a glimpse of the data structure. These are Dynamic MRP state-level estimates (see: Caughey & Warshaw (2015) for technical details on the Dynamic MRP model) of presidential approval from 2008-2017.
# Explore map making descriptives. Let's make a plot of presidential approval for December 2017.
# Make a percentage
state_pres_approval$state_pres_approval_percent <- state_pres_approval$median * 100
as_tibble(state_pres_approval) # Check to see if it worked. Clearly it did!
approval_2016 <- subset(state_pres_approval,state_pres_approval$year == 2016) # Subet our data
# Let's merge our data onto the map!
approval_2016 <- subset(approval_2016,select=c("state","state_pres_approval_percent"))
state_shp@data$id <- rownames(state_shp@data)
state_shp.points <- fortify(state_shp, region="id")
state_shp.df <- join(state_shp.points, state_shp@data, by="id")
state_shp.df$state <- as.character(state_shp.df$STUSPS)
state_shp.df <- merge(state_shp.df,approval_2016,by=c("state"))
ggplot(state_shp.df, aes(x = long, y = lat, group = group,fill=state_pres_approval_percent),color="white") + geom_polygon(color = "black") + theme_void() + scale_fill_gradient("Presidential Approval",low = 'red', high = 'blue') + ggtitle("Presidential Approval in the U.S. States, 2016")  + coord_equal() + coord_fixed(1.3)
library(network)
library(igraph)
library(ggnet)
idmaker = function(vec){
return(paste(sort(vec), collapse=""))
}
senate <- read.csv(paste("/Users/carlosalgara/Desktop/carlos_school/PhD_UC Davis/Research/Submissions & Applications/Pol_Net_2018/Raw_Network_Legislator_attributes_Data/U.S. Senate/","senate_programmatic_particularistic_",113,"congress_network.csv",sep=""),stringsAsFactors=FALSE, na.strings=c(""," ","NA"))
senate$X <- NULL
co_id <- apply(as.matrix(senate[, c("NameFull_senator_j", "NameFull_senator_i")]), 1, idmaker)
senate <- cbind(senate, co_id)
senate <- senate[!duplicated(senate[,"co_id"]),]
senate_networks <- senate
x <- senate_networks
x$edge <- ifelse(x$number_cosponsored_bills_particularistic >= mean(x$number_cosponsored_bills_particularistic,na.rm=T),1,ifelse(x$number_cosponsored_bills_particularistic < mean(x$number_cosponsored_bills_particularistic,na.rm=T),0,NA))
x <- na.omit(x)
ggnet2(x_ergm, label = "state", color = "grey15", label.color = "color",alpha = 0, size = 0, edge.alpha = 0.5,mode = "kamadakawai",label.size = 3) + ggtitle("113th U.S. Senate Particularistic Cosponsorship Network")
library(network)
library(igraph)
library(ggnet)
as_tibble(x) # This network data is in dyadic form, where each row indicates a pair of Senators.
adj <- graph.data.frame(x[,c(8,21,43)],directed=T) # Let's create a network object! What we want to extract is a dataframe where the first column is Senator i, the second column is Senator J, and the last column is a binary variable indicating
adj <- get.adjacency(adj,attr='edge',sparse=FALSE) # Convert the edge list to an adjacency matrix
x_ergm <- network(adj, matrix.type = "adjacency", ignore.eval = FALSE,directed = F,weighted = F,names.eval="edge") # Convert the adjacency matrix to a network object
# Now let's create some attributes and load them on the network object!
y <- x[,c(8,10,2)]
y1 <- x[,c(21,23,1)]
colnames(y) <- c("NameFull_senator","Party_senator","State_senator")
colnames(y1) <- c("NameFull_senator","Party_senator","State_senator")
party <- rbind(y,y1)
rm(y,y1)
party$Party_senator <- ifelse(party$Party_senator == 200, "R",ifelse(party$Party_senator == 100, "D",NA))
party <- data.table(party)
party <-  party[, duplicates := 1:.N , by = c("NameFull_senator")]
party <- subset(party,party$duplicates == 1)
party <- data.frame(party)
party$duplicates <- NULL
network.vertex.names(x_ergm)
x_ergm%v%'party'<- party$Party_senator # Merge the party attributes for each Senator!
x_ergm%v%'state'<- party$State_senator # Merge the state attributes for each Senator!
x_ergm%v%"color" = ifelse(x_ergm%v%"party" == "R", "red", "blue") # Create color indicators!
ggnet2(x_ergm, label = "state", color = "grey15", label.color = "color",alpha = 0, size = 0, edge.alpha = 0.5,mode = "kamadakawai",label.size = 3) + ggtitle("113th U.S. Senate Particularistic Cosponsorship Network")
ggnet2(x_ergm, label = "vertex.names", color = "grey15", label.color = "color",alpha = 0, size = 0, edge.alpha = 0.5,mode = "kamadakawai",label.size = 3) + ggtitle("113th U.S. Senate Particularistic Cosponsorship Network")
ggnet2(x_ergm, color = "color", alpha = 0.75, size = 4, edge.alpha = 0.5,vjust = -0.6,mode = "kamadakawai") + ggtitle("113th U.S. Senate Particularistic Cosponsorship Network")
map3
library(tigris)
library(leaflet)
library(plyr)
library(dplyr)
library(widgetframe)
library(RColorBrewer)
library(htmlwidgets)
library(htmltools)
load("/Users/carlosalgara/Dropbox/Github_Website/calgara.github.io/Rshinyapp/shiny_data/clean_shiny_data.Rdata")
map3
map3
map3
library(tigris)
library(leaflet)
library(plyr)
library(dplyr)
library(widgetframe)
library(RColorBrewer)
library(htmlwidgets)
library(htmltools)
load("/Users/carlosalgara/Dropbox/Github_Website/calgara.github.io/Rshinyapp/shiny_data/clean_shiny_data.Rdata")
map3
library(tigris)
library(leaflet)
library(plyr)
library(dplyr)
library(widgetframe)
library(RColorBrewer)
library(htmlwidgets)
library(htmltools)
load("/Users/carlosalgara/Dropbox/Github_Website/calgara.github.io/Rshinyapp/shiny_data/clean_shiny_data.Rdata")
map3
#install.packages("rmarkdown", type = "source")
library(rmarkdown)
#touch _site.yml #"YML" file that tells your website how to assemble itself
#touch index.Rmd #Create the main rmd file
#touch about.Rmd #Create an about file
setwd("/Users/carlosalgara/Dropbox/Github_Website/calgara.github.io")
rmarkdown::render_site()
library(tigris)
library(leaflet)
library(plyr)
library(dplyr)
library(widgetframe)
library(RColorBrewer)
library(htmlwidgets)
library(htmltools)
load("/Users/caalgara/Dropbox/Github_Website/calgara.github.io/Rshinyapp/shiny_data/clean_shiny_data.Rdata")
map3
load("/Users/caalgara/Dropbox/Github_Website/calgara.github.io/Rshinyapp/shiny_data/clean_shiny_data.Rdata")
library(tigris)
library(leaflet)
library(plyr)
library(dplyr)
library(widgetframe)
library(RColorBrewer)
library(htmlwidgets)
library(htmltools)
load("/Users/caalgara/Dropbox/Github_Website/calgara.github.io/Rshinyapp/shiny_data/clean_shiny_data.Rdata")
library(tigris)
library(leaflet)
library(plyr)
library(dplyr)
library(widgetframe)
library(RColorBrewer)
library(htmlwidgets)
library(htmltools)
load("/Users/caalgara/Dropbox/Github_Website/calgara.github.io/Rshinyapp/shiny_data/clean_shiny_data.Rdata")
map3
library(tigris)
library(tigris)
library(leaflet)
library(plyr)
library(dplyr)
library(widgetframe)
library(RColorBrewer)
library(htmlwidgets)
library(htmltools)
load("/Users/caalgara/Dropbox/Github_Website/calgara.github.io/Rshinyapp/shiny_data/clean_shiny_data.Rdata")
maps3
map3
map3
install.packages("leaflet")
install.packages("leaflet")
install.packages("leaflet")
install.packages("leaflet")
install.packages("leaflet")
library(leaflet)
load("/Users/caalgara/Dropbox/Github_Website/calgara.github.io/Rshinyapp/shiny_data/clean_shiny_data.Rdata")
map3
library(tigris)
library(leaflet)
library(plyr)
library(dplyr)
library(widgetframe)
library(RColorBrewer)
library(htmlwidgets)
library(htmltools)
load("/Users/caalgara/Dropbox/Github_Website/calgara.github.io/Rshinyapp/shiny_data/clean_shiny_data.Rdata")
map3
library(tigris)
library(leaflet)
library(plyr)
library(dplyr)
library(widgetframe)
library(RColorBrewer)
library(htmlwidgets)
library(htmltools)
load("/Users/caalgara/Dropbox/Github_Website/calgara.github.io/Rshinyapp/shiny_data/clean_shiny_data.Rdata")
map3
library(tigris)
library(leaflet)
library(plyr)
library(dplyr)
library(widgetframe)
library(RColorBrewer)
library(htmlwidgets)
library(htmltools)
load("/Users/caalgara/Dropbox/Github_Website/calgara.github.io/Rshinyapp/shiny_data/clean_shiny_data.Rdata")
map3
library(tigris)
library(leaflet)
library(plyr)
library(dplyr)
library(widgetframe)
library(RColorBrewer)
library(htmlwidgets)
library(htmltools)
load("/Users/carlosalgara/Dropbox/Github_Website/calgara.github.io/Rshinyapp/shiny_data/clean_shiny_data.Rdata")
map3
library(tigris)
library(leaflet)
library(plyr)
library(dplyr)
library(widgetframe)
cd114 <- congressional_districts(cb = T, resolution = '20m')
x <- read.csv("/Users/carlosalgara/Dropbox/Github_Website/calgara.github.io/Rshinyapp/shiny_data/state_fips_master.csv")
x <- subset(x,select=c(fips,state_abbr))
x$fips <- as.character(x$fips)
x$fips[x$fips == "1"] <- "01"
x$fips[x$fips == "2"] <- "02"
x$fips[x$fips == "3"] <- "03"
x$fips[x$fips == "4"] <- "04"
x$fips[x$fips == "5"] <- "05"
x$fips[x$fips == "6"] <- "06"
x$fips[x$fips == "7"] <- "07"
x$fips[x$fips == "8"] <- "08"
x$fips[x$fips == "9"] <- "09"
colnames(x) <- c("STATEFP","state")
x$state <- as.character(x$state)
#x <- subset(x,x$state != "AK")
#x <- subset(x,x$state != "HI")
cd114 <- subset(cd114,cd114$STATEFP %in% unique(x$STATEFP))
plot(cd114)
popup <- paste0("State: ", cd114$STATEFP)
leaflet(cd114) %>%
addTiles() %>%
addPolygons(popup=popup)
setwd("/Users/carlosalgara/Dropbox/Github_Website/calgara.github.io/Rshinyapp")
load("/Users/carlosalgara/Dropbox/Github_Website/calgara.github.io/Rshinyapp/shiny_data/clean_shiny_data.Rdata")
cd114 <- geo_join(cd114, x, "STATEFP","STATEFP")
cd114$district <- paste(cd114$state,cd114$CD115FP,sep="")
cd114$district  <- gsub("00","1",cd114$district )
cd114$district  <- gsub("01","1",cd114$district )
cd114$district  <- gsub("02","2",cd114$district )
cd114$district  <- gsub("03","3",cd114$district )
cd114$district  <- gsub("04","4",cd114$district )
cd114$district  <- gsub("05","5",cd114$district )
cd114$district  <- gsub("06","6",cd114$district )
cd114$district  <- gsub("07","7",cd114$district )
cd114$district  <- gsub("08","8",cd114$district )
cd114$district  <- gsub("09","9",cd114$district )
popup <- paste0("District: ", cd114$district)
leaflet(cd114) %>%
addTiles() %>%
addPolygons(popup=popup)
x <- plot_states_data[,c(1,14:73)]
x$geometry <- NULL
x <- subset(x,x$district %in% cd114$district)
y <- data.frame(district=cd114$district,GEOID=cd114$GEOID)
x <- merge(x,y,by=c("district"))
x$district <- NULL
x$GEOID <- as.character(x$GEOID)
cd114$GEOID <- as.character(cd114$GEOID)
cd114 <- cd114[order(cd114$GEOID),]
x <- x[order(x$GEOID),]
x$placement.mc_libcon_placement_re.2018[x$GEOID == "4001"] <- NA
cd114 <- geo_join(cd114, x, "GEOID","GEOID")
cd114$cong_approval.2018 <- cd114$cong_approval.2018 * 100
cd114 <- cd114[order(cd114$GEOID),]
cd114$pres_approval.2018 <- cd114$pres_approval.2018 * 100
cd114$member_approval_rating.2018 <- cd114$member_approval_rating.2018 * 100
popup <- paste0("District: ", cd114$district_mc_name.2018 , "<br>", "Congressional District Approval: ", paste(round(cd114$cong_approval.2018,2),"%",sep=""))
pal <- colorNumeric(
palette = "OrRd", #YlGnBu
domain = cd114$cong_approval.2018
)
map3 <- leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = cd114,
fillColor = ~pal(cd114$cong_approval.2018),
color = "#b2aeae", # you need to use hex colors
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup) %>%
addLegend(pal = pal,
values = cd114$cong_approval.2018,
position = "bottomright",
title = "Estimated District Congressional Approval (2018)",
labFormat = labelFormat(suffix = "%"))
map3
library(RColorBrewer)
display.brewer.all()
library(htmlwidgets)
library(htmltools)
tag.map.title <- tags$style(HTML("
.leaflet-control.map-title {
transform: translate(-50%,20%);
position: fixed !important;
left: 50%;
text-align: center;
padding-left: 10px;
padding-right: 10px;
background: rgba(255,255,255,0.75);
font-weight: bold;
font-size: 14px;
}
"))
title <- tags$div(
tag.map.title, HTML("Aldrich-McKelvey Liberal-Conservative Legislator Ideological Ideal Point")
)
popup <- paste0("District: ", cd114$district_mc_name.2018 , "<br>", "Legislator Ideological Preferences: ", paste(round(cd114$placement.mc_libcon_placement_re.2018,2),sep=""))
pal <- colorNumeric(
palette = rev(brewer.pal(11,"RdYlBu")), #YlGnBu
domain = cd114$placement.mc_libcon_placement_re.2018
)
map3 <- leaflet(width="800px", height="400px") %>% #width = "100%"
addProviderTiles("CartoDB.Positron") %>%
#addControl(title, position = "topleft", className="map-title") %>%
setView(lng = -93.5, lat = 39.50, zoom = 04.49) %>% #lng = -98.5, lat = 39.50
addPolygons(data = cd114,
fillColor = ~pal(cd114$placement.mc_libcon_placement_re.2018),
color = "#b2aeae", # you need to use hex colors
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup) %>%
addLegend(pal = pal,
values = cd114$placement.mc_libcon_placement_re.2018,
position = "bottomright",
na.label = "Vacant",
title = "Aldrich-McKelvey Estimated <br> Liberal-Conservative Ideology <br> (2018)")#,
#labFormat = labelFormat(suffix = "%"))
map3
css_fix <- "div.info.legend.leaflet-control br {clear: both; clear: both;}"
map3 <- map3 %>% prependContent(tags$style(type = "text/css", css_fix))
map3 <- frameWidget(map3)
save.image("/Users/carlosalgara/Dropbox/Github_Website/calgara.github.io/Rshinyapp/shiny_data/clean_shiny_data.Rdata")
saveWidget(map3, file="legislator_ideology_2018.html")
popup <- paste0("District: ", cd114$district_mc_name.2018 , "<br>", "District Ideological Preferences: ", paste(round(cd114$aldmck_ideal_pt_district.2018,2),sep=""))
pal <- colorNumeric(
palette = rev(brewer.pal(11,"RdYlBu")), #YlGnBu
domain = cd114$aldmck_ideal_pt_district.2018
)
map3 <- leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = cd114,
fillColor = ~pal(cd114$aldmck_ideal_pt_district.2018),
color = "#b2aeae", # you need to use hex colors
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup) %>%
addLegend(pal = pal,
values = cd114$aldmck_ideal_pt_district.2018,
position = "bottomright",
title = "Estimated District Ideology (2018)")#,
#labFormat = labelFormat(suffix = "%"))
map3
library(tigris)
library(leaflet)
library(plyr)
library(dplyr)
library(widgetframe)
cd114 <- congressional_districts(cb = T, resolution = '20m')
x <- read.csv("/Users/carlosalgara/Dropbox/Github_Website/calgara.github.io/Rshinyapp/shiny_data/state_fips_master.csv")
x <- subset(x,select=c(fips,state_abbr))
x$fips <- as.character(x$fips)
x$fips[x$fips == "1"] <- "01"
x$fips[x$fips == "2"] <- "02"
x$fips[x$fips == "3"] <- "03"
x$fips[x$fips == "4"] <- "04"
x$fips[x$fips == "5"] <- "05"
x$fips[x$fips == "6"] <- "06"
x$fips[x$fips == "7"] <- "07"
x$fips[x$fips == "8"] <- "08"
x$fips[x$fips == "9"] <- "09"
colnames(x) <- c("STATEFP","state")
x$state <- as.character(x$state)
#x <- subset(x,x$state != "AK")
#x <- subset(x,x$state != "HI")
cd114 <- subset(cd114,cd114$STATEFP %in% unique(x$STATEFP))
plot(cd114)
popup <- paste0("State: ", cd114$STATEFP)
leaflet(cd114) %>%
addTiles() %>%
addPolygons(popup=popup)
setwd("/Users/carlosalgara/Dropbox/Github_Website/calgara.github.io/Rshinyapp")
load("/Users/carlosalgara/Dropbox/Github_Website/calgara.github.io/Rshinyapp/shiny_data/clean_shiny_data.Rdata")
cd114 <- geo_join(cd114, x, "STATEFP","STATEFP")
cd114$district <- paste(cd114$state,cd114$CD115FP,sep="")
cd114$district  <- gsub("00","1",cd114$district )
cd114$district  <- gsub("01","1",cd114$district )
cd114$district  <- gsub("02","2",cd114$district )
cd114$district  <- gsub("03","3",cd114$district )
cd114$district  <- gsub("04","4",cd114$district )
cd114$district  <- gsub("05","5",cd114$district )
cd114$district  <- gsub("06","6",cd114$district )
cd114$district  <- gsub("07","7",cd114$district )
cd114$district  <- gsub("08","8",cd114$district )
cd114$district  <- gsub("09","9",cd114$district )
popup <- paste0("District: ", cd114$district)
leaflet(cd114) %>%
addTiles() %>%
addPolygons(popup=popup)
x <- plot_states_data[,c(1,14:73)]
x$geometry <- NULL
x <- subset(x,x$district %in% cd114$district)
y <- data.frame(district=cd114$district,GEOID=cd114$GEOID)
x <- merge(x,y,by=c("district"))
x$district <- NULL
x$GEOID <- as.character(x$GEOID)
cd114$GEOID <- as.character(cd114$GEOID)
cd114 <- cd114[order(cd114$GEOID),]
x <- x[order(x$GEOID),]
x$placement.mc_libcon_placement_re.2018[x$GEOID == "4001"] <- NA
cd114 <- geo_join(cd114, x, "GEOID","GEOID")
cd114$cong_approval.2018 <- cd114$cong_approval.2018 * 100
cd114 <- cd114[order(cd114$GEOID),]
cd114$pres_approval.2018 <- cd114$pres_approval.2018 * 100
cd114$member_approval_rating.2018 <- cd114$member_approval_rating.2018 * 100
popup <- paste0("District: ", cd114$district_mc_name.2018 , "<br>", "Congressional District Approval: ", paste(round(cd114$cong_approval.2018,2),"%",sep=""))
pal <- colorNumeric(
palette = "OrRd", #YlGnBu
domain = cd114$cong_approval.2018
)
map3 <- leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = cd114,
fillColor = ~pal(cd114$cong_approval.2018),
color = "#b2aeae", # you need to use hex colors
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup) %>%
addLegend(pal = pal,
values = cd114$cong_approval.2018,
position = "bottomright",
title = "Estimated District Congressional Approval (2018)",
labFormat = labelFormat(suffix = "%"))
map3
library(RColorBrewer)
display.brewer.all()
library(htmlwidgets)
library(htmltools)
tag.map.title <- tags$style(HTML("
.leaflet-control.map-title {
transform: translate(-50%,20%);
position: fixed !important;
left: 50%;
text-align: center;
padding-left: 10px;
padding-right: 10px;
background: rgba(255,255,255,0.75);
font-weight: bold;
font-size: 14px;
}
"))
title <- tags$div(
tag.map.title, HTML("Aldrich-McKelvey Liberal-Conservative Legislator Ideological Ideal Point")
)
popup <- paste0("District: ", cd114$district_mc_name.2018 , "<br>", "Legislator Ideological Preferences: ", paste(round(cd114$placement.mc_libcon_placement_re.2018,2),sep=""))
pal <- colorNumeric(
palette = rev(brewer.pal(11,"RdYlBu")), #YlGnBu
domain = cd114$placement.mc_libcon_placement_re.2018
)
map3 <- leaflet(width="800px", height="400px") %>% #width = "100%"
addProviderTiles("CartoDB.Positron") %>%
#addControl(title, position = "topleft", className="map-title") %>%
setView(lng = -93.5, lat = 39.50, zoom = 04.49) %>% #lng = -98.5, lat = 39.50
addPolygons(data = cd114,
fillColor = ~pal(cd114$placement.mc_libcon_placement_re.2018),
color = "#b2aeae", # you need to use hex colors
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup) %>%
addLegend(pal = pal,
values = cd114$placement.mc_libcon_placement_re.2018,
position = "bottomright",
na.label = "Vacant",
title = "Aldrich-McKelvey Estimated <br> Liberal-Conservative Ideology <br> (2018)")#,
#labFormat = labelFormat(suffix = "%"))
map3
css_fix <- "div.info.legend.leaflet-control br {clear: both; clear: both;}"
map3 <- map3 %>% prependContent(tags$style(type = "text/css", css_fix))
map3 <- frameWidget(map3)
save.image("/Users/carlosalgara/Dropbox/Github_Website/calgara.github.io/Rshinyapp/shiny_data/clean_shiny_data.Rdata")
saveWidget(map3, file="legislator_ideology_2018.html")
map3
